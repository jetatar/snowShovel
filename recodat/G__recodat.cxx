//
// File generated by /data/users/jtatar/Software/root/bin/rootcint at Mon Mar 24 20:10:07 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME recodatdIG__recodat
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__recodat.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSnRecoResult_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TSnRecoResult(void *p);
   static void deleteArray_TSnRecoResult(void *p);
   static void destruct_TSnRecoResult(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnRecoResult*)
   {
      ::TSnRecoResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnRecoResult >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnRecoResult", ::TSnRecoResult::Class_Version(), "./recodat/TSnRecoResult.h", 7,
                  typeid(::TSnRecoResult), DefineBehavior(ptr, ptr),
                  &::TSnRecoResult::Dictionary, isa_proxy, 4,
                  sizeof(::TSnRecoResult) );
      instance.SetDelete(&delete_TSnRecoResult);
      instance.SetDeleteArray(&deleteArray_TSnRecoResult);
      instance.SetDestructor(&destruct_TSnRecoResult);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnRecoResult*)
   {
      return GenerateInitInstanceLocal((::TSnRecoResult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnRecoResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnRecoDirection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnRecoDirection(void *p = 0);
   static void *newArray_TSnRecoDirection(Long_t size, void *p);
   static void delete_TSnRecoDirection(void *p);
   static void deleteArray_TSnRecoDirection(void *p);
   static void destruct_TSnRecoDirection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnRecoDirection*)
   {
      ::TSnRecoDirection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnRecoDirection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnRecoDirection", ::TSnRecoDirection::Class_Version(), "./recodat/TSnRecoDirection.h", 8,
                  typeid(::TSnRecoDirection), DefineBehavior(ptr, ptr),
                  &::TSnRecoDirection::Dictionary, isa_proxy, 4,
                  sizeof(::TSnRecoDirection) );
      instance.SetNew(&new_TSnRecoDirection);
      instance.SetNewArray(&newArray_TSnRecoDirection);
      instance.SetDelete(&delete_TSnRecoDirection);
      instance.SetDeleteArray(&deleteArray_TSnRecoDirection);
      instance.SetDestructor(&destruct_TSnRecoDirection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnRecoDirection*)
   {
      return GenerateInitInstanceLocal((::TSnRecoDirection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnRecoDirection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnRecoChanOffsets_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnRecoChanOffsets(void *p = 0);
   static void *newArray_TSnRecoChanOffsets(Long_t size, void *p);
   static void delete_TSnRecoChanOffsets(void *p);
   static void deleteArray_TSnRecoChanOffsets(void *p);
   static void destruct_TSnRecoChanOffsets(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnRecoChanOffsets*)
   {
      ::TSnRecoChanOffsets *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnRecoChanOffsets >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnRecoChanOffsets", ::TSnRecoChanOffsets::Class_Version(), "./recodat/TSnRecoChanOffsets.h", 8,
                  typeid(::TSnRecoChanOffsets), DefineBehavior(ptr, ptr),
                  &::TSnRecoChanOffsets::Dictionary, isa_proxy, 4,
                  sizeof(::TSnRecoChanOffsets) );
      instance.SetNew(&new_TSnRecoChanOffsets);
      instance.SetNewArray(&newArray_TSnRecoChanOffsets);
      instance.SetDelete(&delete_TSnRecoChanOffsets);
      instance.SetDeleteArray(&deleteArray_TSnRecoChanOffsets);
      instance.SetDestructor(&destruct_TSnRecoChanOffsets);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnRecoChanOffsets*)
   {
      return GenerateInitInstanceLocal((::TSnRecoChanOffsets*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnRecoChanOffsets*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnRecoSingleChanOffset_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnRecoSingleChanOffset(void *p = 0);
   static void *newArray_TSnRecoSingleChanOffset(Long_t size, void *p);
   static void delete_TSnRecoSingleChanOffset(void *p);
   static void deleteArray_TSnRecoSingleChanOffset(void *p);
   static void destruct_TSnRecoSingleChanOffset(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnRecoSingleChanOffset*)
   {
      ::TSnRecoSingleChanOffset *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnRecoSingleChanOffset >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnRecoSingleChanOffset", ::TSnRecoSingleChanOffset::Class_Version(), "./recodat/TSnRecoSingleChanOffset.h", 6,
                  typeid(::TSnRecoSingleChanOffset), DefineBehavior(ptr, ptr),
                  &::TSnRecoSingleChanOffset::Dictionary, isa_proxy, 4,
                  sizeof(::TSnRecoSingleChanOffset) );
      instance.SetNew(&new_TSnRecoSingleChanOffset);
      instance.SetNewArray(&newArray_TSnRecoSingleChanOffset);
      instance.SetDelete(&delete_TSnRecoSingleChanOffset);
      instance.SetDeleteArray(&deleteArray_TSnRecoSingleChanOffset);
      instance.SetDestructor(&destruct_TSnRecoSingleChanOffset);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnRecoSingleChanOffset*)
   {
      return GenerateInitInstanceLocal((::TSnRecoSingleChanOffset*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnRecoSingleChanOffset*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnRecoSingleChanOffsetSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnRecoSingleChanOffsetSet(void *p = 0);
   static void *newArray_TSnRecoSingleChanOffsetSet(Long_t size, void *p);
   static void delete_TSnRecoSingleChanOffsetSet(void *p);
   static void deleteArray_TSnRecoSingleChanOffsetSet(void *p);
   static void destruct_TSnRecoSingleChanOffsetSet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnRecoSingleChanOffsetSet*)
   {
      ::TSnRecoSingleChanOffsetSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnRecoSingleChanOffsetSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnRecoSingleChanOffsetSet", ::TSnRecoSingleChanOffsetSet::Class_Version(), "./recodat/TSnRecoSingleChanOffsetSet.h", 10,
                  typeid(::TSnRecoSingleChanOffsetSet), DefineBehavior(ptr, ptr),
                  &::TSnRecoSingleChanOffsetSet::Dictionary, isa_proxy, 4,
                  sizeof(::TSnRecoSingleChanOffsetSet) );
      instance.SetNew(&new_TSnRecoSingleChanOffsetSet);
      instance.SetNewArray(&newArray_TSnRecoSingleChanOffsetSet);
      instance.SetDelete(&delete_TSnRecoSingleChanOffsetSet);
      instance.SetDeleteArray(&deleteArray_TSnRecoSingleChanOffsetSet);
      instance.SetDestructor(&destruct_TSnRecoSingleChanOffsetSet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnRecoSingleChanOffsetSet*)
   {
      return GenerateInitInstanceLocal((::TSnRecoSingleChanOffsetSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnRecoSingleChanOffsetSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSnRecoResult::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnRecoResult::Class_Name()
{
   return "TSnRecoResult";
}

//______________________________________________________________________________
const char *TSnRecoResult::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnRecoResult::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnRecoResult::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnRecoResult::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoResult*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnRecoDirection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnRecoDirection::Class_Name()
{
   return "TSnRecoDirection";
}

//______________________________________________________________________________
const char *TSnRecoDirection::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoDirection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnRecoDirection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoDirection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnRecoDirection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoDirection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnRecoDirection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoDirection*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnRecoChanOffsets::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnRecoChanOffsets::Class_Name()
{
   return "TSnRecoChanOffsets";
}

//______________________________________________________________________________
const char *TSnRecoChanOffsets::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoChanOffsets*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnRecoChanOffsets::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoChanOffsets*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnRecoChanOffsets::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoChanOffsets*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnRecoChanOffsets::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoChanOffsets*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnRecoSingleChanOffset::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnRecoSingleChanOffset::Class_Name()
{
   return "TSnRecoSingleChanOffset";
}

//______________________________________________________________________________
const char *TSnRecoSingleChanOffset::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoSingleChanOffset*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnRecoSingleChanOffset::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoSingleChanOffset*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnRecoSingleChanOffset::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoSingleChanOffset*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnRecoSingleChanOffset::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoSingleChanOffset*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnRecoSingleChanOffsetSet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnRecoSingleChanOffsetSet::Class_Name()
{
   return "TSnRecoSingleChanOffsetSet";
}

//______________________________________________________________________________
const char *TSnRecoSingleChanOffsetSet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoSingleChanOffsetSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnRecoSingleChanOffsetSet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoSingleChanOffsetSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnRecoSingleChanOffsetSet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoSingleChanOffsetSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnRecoSingleChanOffsetSet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRecoSingleChanOffsetSet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSnRecoResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnRecoResult.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnRecoResult::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnRecoResult::Class(),this);
   }
}

//______________________________________________________________________________
void TSnRecoResult::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnRecoResult.
      TClass *R__cl = ::TSnRecoResult::IsA();
      if (R__cl || R__insp.IsA()) { }
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSnRecoResult(void *p) {
      delete ((::TSnRecoResult*)p);
   }
   static void deleteArray_TSnRecoResult(void *p) {
      delete [] ((::TSnRecoResult*)p);
   }
   static void destruct_TSnRecoResult(void *p) {
      typedef ::TSnRecoResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnRecoResult

//______________________________________________________________________________
void TSnRecoDirection::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnRecoDirection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnRecoDirection::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnRecoDirection::Class(),this);
   }
}

//______________________________________________________________________________
void TSnRecoDirection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnRecoDirection.
      TClass *R__cl = ::TSnRecoDirection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDir", &fDir);
      R__insp.InspectMember(fDir, "fDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErr", &fErr);
      R__insp.InspectMember(fErr, "fErr.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLik", &fLik);
      TSnRecoResult::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnRecoDirection(void *p) {
      return  p ? new(p) ::TSnRecoDirection : new ::TSnRecoDirection;
   }
   static void *newArray_TSnRecoDirection(Long_t nElements, void *p) {
      return p ? new(p) ::TSnRecoDirection[nElements] : new ::TSnRecoDirection[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnRecoDirection(void *p) {
      delete ((::TSnRecoDirection*)p);
   }
   static void deleteArray_TSnRecoDirection(void *p) {
      delete [] ((::TSnRecoDirection*)p);
   }
   static void destruct_TSnRecoDirection(void *p) {
      typedef ::TSnRecoDirection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnRecoDirection

//______________________________________________________________________________
void TSnRecoChanOffsets::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnRecoChanOffsets.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnRecoChanOffsets::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnRecoChanOffsets::Class(),this);
   }
}

//______________________________________________________________________________
void TSnRecoChanOffsets::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnRecoChanOffsets.
      TClass *R__cl = ::TSnRecoChanOffsets::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDts", &fDts);
      R__insp.InspectMember(fDts, "fDts.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErr", &fErr);
      R__insp.InspectMember(fErr, "fErr.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLik", &fLik);
      TSnRecoResult::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnRecoChanOffsets(void *p) {
      return  p ? new(p) ::TSnRecoChanOffsets : new ::TSnRecoChanOffsets;
   }
   static void *newArray_TSnRecoChanOffsets(Long_t nElements, void *p) {
      return p ? new(p) ::TSnRecoChanOffsets[nElements] : new ::TSnRecoChanOffsets[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnRecoChanOffsets(void *p) {
      delete ((::TSnRecoChanOffsets*)p);
   }
   static void deleteArray_TSnRecoChanOffsets(void *p) {
      delete [] ((::TSnRecoChanOffsets*)p);
   }
   static void destruct_TSnRecoChanOffsets(void *p) {
      typedef ::TSnRecoChanOffsets current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnRecoChanOffsets

//______________________________________________________________________________
void TSnRecoSingleChanOffset::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnRecoSingleChanOffset.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnRecoSingleChanOffset::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnRecoSingleChanOffset::Class(),this);
   }
}

//______________________________________________________________________________
void TSnRecoSingleChanOffset::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnRecoSingleChanOffset.
      TClass *R__cl = ::TSnRecoSingleChanOffset::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOff", &fOff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErr", &fErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLik", &fLik);
      TSnRecoResult::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnRecoSingleChanOffset(void *p) {
      return  p ? new(p) ::TSnRecoSingleChanOffset : new ::TSnRecoSingleChanOffset;
   }
   static void *newArray_TSnRecoSingleChanOffset(Long_t nElements, void *p) {
      return p ? new(p) ::TSnRecoSingleChanOffset[nElements] : new ::TSnRecoSingleChanOffset[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnRecoSingleChanOffset(void *p) {
      delete ((::TSnRecoSingleChanOffset*)p);
   }
   static void deleteArray_TSnRecoSingleChanOffset(void *p) {
      delete [] ((::TSnRecoSingleChanOffset*)p);
   }
   static void destruct_TSnRecoSingleChanOffset(void *p) {
      typedef ::TSnRecoSingleChanOffset current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnRecoSingleChanOffset

//______________________________________________________________________________
void TSnRecoSingleChanOffsetSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnRecoSingleChanOffsetSet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnRecoSingleChanOffsetSet::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnRecoSingleChanOffsetSet::Class(),this);
   }
}

//______________________________________________________________________________
void TSnRecoSingleChanOffsetSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnRecoSingleChanOffsetSet.
      TClass *R__cl = ::TSnRecoSingleChanOffsetSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSet", &fSet);
      TSnRecoResult::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnRecoSingleChanOffsetSet(void *p) {
      return  p ? new(p) ::TSnRecoSingleChanOffsetSet : new ::TSnRecoSingleChanOffsetSet;
   }
   static void *newArray_TSnRecoSingleChanOffsetSet(Long_t nElements, void *p) {
      return p ? new(p) ::TSnRecoSingleChanOffsetSet[nElements] : new ::TSnRecoSingleChanOffsetSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnRecoSingleChanOffsetSet(void *p) {
      delete ((::TSnRecoSingleChanOffsetSet*)p);
   }
   static void deleteArray_TSnRecoSingleChanOffsetSet(void *p) {
      delete [] ((::TSnRecoSingleChanOffsetSet*)p);
   }
   static void destruct_TSnRecoSingleChanOffsetSet(void *p) {
      typedef ::TSnRecoSingleChanOffsetSet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnRecoSingleChanOffsetSet

/********************************************************
* recodat/G__recodat.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__recodat();

extern "C" void G__set_cpp_environmentG__recodat() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("recodat/TSnRecoResult.h");
  G__add_compiledheader("recodat/TSnRecoDirection.h");
  G__add_compiledheader("recodat/TSnRecoChanOffsets.h");
  G__add_compiledheader("recodat/TSnRecoSingleChanOffset.h");
  G__add_compiledheader("recodat/TSnRecoSingleChanOffsetSet.h");
  G__cpp_reset_tagtableG__recodat();
}
#include <new>
extern "C" int G__cpp_dllrevG__recodat() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSnRecoResult */
static int G__G__recodat_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoResult*) G__getstructoffset())->CopyFrom(*(TSnRecoResult*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnRecoResult*) G__getstructoffset())->GetMinimizerTag();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoResult*) G__getstructoffset())->SetMinimizerTag((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnRecoResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnRecoResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnRecoResult::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoResult*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRecoResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRecoResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnRecoResult G__TTSnRecoResult;
static int G__G__recodat_183_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnRecoResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnRecoResult*) (soff+(sizeof(TSnRecoResult)*i)))->~G__TTSnRecoResult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnRecoResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnRecoResult*) (soff))->~G__TTSnRecoResult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__recodat_183_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoResult* dest = (TSnRecoResult*) G__getstructoffset();
   *dest = *(TSnRecoResult*) libp->para[0].ref;
   const TSnRecoResult& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnRecoDirection */
static int G__G__recodat_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoDirection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoDirection[n];
     } else {
       p = new((void*) gvp) TSnRecoDirection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoDirection;
     } else {
       p = new((void*) gvp) TSnRecoDirection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoDirection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnRecoDirection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSnRecoDirection((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoDirection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnRecoDirection(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5])
, (const Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TSnRecoDirection(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3])
, (const Double_t) G__double(libp->para[4]), (const Double_t) G__double(libp->para[5])
, (const Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TSnRecoDirection*) G__getstructoffset())->GetDir();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TSnRecoDirection*) G__getstructoffset())->GetErr();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoDirection*) G__getstructoffset())->GetFitQual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoDirection*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoDirection*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoDirection*) G__getstructoffset())->GetThetaErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoDirection*) G__getstructoffset())->GetPhiErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoDirection*) G__getstructoffset())->SetFitQual((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoDirection*) G__getstructoffset())->SetDir(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoDirection*) G__getstructoffset())->SetDir((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoDirection*) G__getstructoffset())->SetDir((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoDirection*) G__getstructoffset())->SetErr(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoDirection*) G__getstructoffset())->SetErr((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoDirection*) G__getstructoffset())->SetErr((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnRecoDirection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoDirection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnRecoDirection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnRecoDirection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoDirection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoDirection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRecoDirection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoDirection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_221_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRecoDirection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__recodat_221_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnRecoDirection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnRecoDirection(*(TSnRecoDirection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnRecoDirection G__TTSnRecoDirection;
static int G__G__recodat_221_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnRecoDirection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnRecoDirection*) (soff+(sizeof(TSnRecoDirection)*i)))->~G__TTSnRecoDirection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnRecoDirection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnRecoDirection*) (soff))->~G__TTSnRecoDirection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__recodat_221_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoDirection* dest = (TSnRecoDirection*) G__getstructoffset();
   *dest = *(TSnRecoDirection*) libp->para[0].ref;
   const TSnRecoDirection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnRecoChanOffsets */
static int G__G__recodat_224_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoChanOffsets* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoChanOffsets[n];
     } else {
       p = new((void*) gvp) TSnRecoChanOffsets[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoChanOffsets;
     } else {
       p = new((void*) gvp) TSnRecoChanOffsets;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoChanOffsets* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnRecoChanOffsets((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSnRecoChanOffsets((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoChanOffsets* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoChanOffsets(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TSnRecoChanOffsets(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoChanOffsets(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TSnRecoChanOffsets(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoChanOffsets(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSnRecoChanOffsets(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TSnRecoChanOffsets::IndexFor((const UChar_t) G__int(libp->para[0]), (const Char_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoChanOffsets*) G__getstructoffset())->GetFitQual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArrayD& obj = ((const TSnRecoChanOffsets*) G__getstructoffset())->GetChanOffsets();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoChanOffsets*) G__getstructoffset())->GetChanOffset((const UChar_t) G__int(libp->para[0]), (const UChar_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TArrayD& obj = ((const TSnRecoChanOffsets*) G__getstructoffset())->GetChanOffsetErrors();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoChanOffsets*) G__getstructoffset())->GetChanOffsetError((const UChar_t) G__int(libp->para[0]), (const UChar_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoChanOffsets*) G__getstructoffset())->SetFitQual((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoChanOffsets*) G__getstructoffset())->SetChanOffset((const UChar_t) G__int(libp->para[0]), (const UChar_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoChanOffsets*) G__getstructoffset())->SetChanOffset((const UInt_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoChanOffsets*) G__getstructoffset())->SetChanOffsets((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoChanOffsets*) G__getstructoffset())->SetChanOffsetError((const UChar_t) G__int(libp->para[0]), (const UChar_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoChanOffsets*) G__getstructoffset())->SetChanOffsetError((const UInt_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoChanOffsets*) G__getstructoffset())->SetChanOffsetErrors((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnRecoChanOffsets::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoChanOffsets::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnRecoChanOffsets::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnRecoChanOffsets::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoChanOffsets*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoChanOffsets::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRecoChanOffsets::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoChanOffsets::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_224_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRecoChanOffsets::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__recodat_224_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnRecoChanOffsets* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnRecoChanOffsets(*(TSnRecoChanOffsets*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnRecoChanOffsets G__TTSnRecoChanOffsets;
static int G__G__recodat_224_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnRecoChanOffsets*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnRecoChanOffsets*) (soff+(sizeof(TSnRecoChanOffsets)*i)))->~G__TTSnRecoChanOffsets();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnRecoChanOffsets*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnRecoChanOffsets*) (soff))->~G__TTSnRecoChanOffsets();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__recodat_224_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoChanOffsets* dest = (TSnRecoChanOffsets*) G__getstructoffset();
   *dest = *(TSnRecoChanOffsets*) libp->para[0].ref;
   const TSnRecoChanOffsets& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnRecoSingleChanOffset */
static int G__G__recodat_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoSingleChanOffset* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoSingleChanOffset[n];
     } else {
       p = new((void*) gvp) TSnRecoSingleChanOffset[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoSingleChanOffset;
     } else {
       p = new((void*) gvp) TSnRecoSingleChanOffset;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoSingleChanOffset* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnRecoSingleChanOffset((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSnRecoSingleChanOffset((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoSingleChanOffset* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnRecoSingleChanOffset(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3])
, (const Double_t) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) TSnRecoSingleChanOffset(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3])
, (const Double_t) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoSingleChanOffset*) G__getstructoffset())->GetFitQual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoSingleChanOffset*) G__getstructoffset())->GetTimeOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoSingleChanOffset*) G__getstructoffset())->GetOffsetError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoSingleChanOffset*) G__getstructoffset())->SetFitQual((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoSingleChanOffset*) G__getstructoffset())->SetTimeOffset((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoSingleChanOffset*) G__getstructoffset())->SetOffsetError((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnRecoSingleChanOffset::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoSingleChanOffset::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnRecoSingleChanOffset::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnRecoSingleChanOffset::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoSingleChanOffset*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoSingleChanOffset::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRecoSingleChanOffset::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoSingleChanOffset::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_225_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRecoSingleChanOffset::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__recodat_225_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnRecoSingleChanOffset* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnRecoSingleChanOffset(*(TSnRecoSingleChanOffset*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnRecoSingleChanOffset G__TTSnRecoSingleChanOffset;
static int G__G__recodat_225_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnRecoSingleChanOffset*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnRecoSingleChanOffset*) (soff+(sizeof(TSnRecoSingleChanOffset)*i)))->~G__TTSnRecoSingleChanOffset();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnRecoSingleChanOffset*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnRecoSingleChanOffset*) (soff))->~G__TTSnRecoSingleChanOffset();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__recodat_225_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoSingleChanOffset* dest = (TSnRecoSingleChanOffset*) G__getstructoffset();
   *dest = *(TSnRecoSingleChanOffset*) libp->para[0].ref;
   const TSnRecoSingleChanOffset& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnRecoSingleChanOffsetSet */
static int G__G__recodat_227_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoSingleChanOffsetSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoSingleChanOffsetSet[n];
     } else {
       p = new((void*) gvp) TSnRecoSingleChanOffsetSet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRecoSingleChanOffsetSet;
     } else {
       p = new((void*) gvp) TSnRecoSingleChanOffsetSet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoSingleChanOffsetSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnRecoSingleChanOffsetSet((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSnRecoSingleChanOffsetSet((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRecoSingleChanOffsetSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnRecoSingleChanOffsetSet(*(TSnRecoSingleChanOffsetSet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TSnRecoSingleChanOffsetSet(*(TSnRecoSingleChanOffsetSet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnRecoSingleChanOffsetSet::Swap(*(TSnRecoSingleChanOffsetSet*) libp->para[0].ref, *(TSnRecoSingleChanOffsetSet*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSnRecoSingleChanOffsetSet& obj = ((TSnRecoSingleChanOffsetSet*) G__getstructoffset())->operator=(*((TSnRecoSingleChanOffsetSet*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnRecoSingleChanOffsetSet*) G__getstructoffset())->GetAllChanOffsets());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnRecoSingleChanOffsetSet*) G__getstructoffset())->GetOffsetsOfChan((const UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSnRecoSingleChanOffsetSet*) G__getstructoffset())->GetOffsetsOfChan((const UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSnRecoSingleChanOffset& obj = ((const TSnRecoSingleChanOffsetSet*) G__getstructoffset())->GetOffsetsOfChanSafe((const UChar_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSnRecoSingleChanOffset& obj = ((TSnRecoSingleChanOffsetSet*) G__getstructoffset())->GetOffsetsOfChanSafe((const UChar_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoSingleChanOffsetSet*) G__getstructoffset())->GetTimeOffset((const UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoSingleChanOffsetSet*) G__getstructoffset())->GetOffsetError((const UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnRecoSingleChanOffsetSet*) G__getstructoffset())->GetFitQual((const UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoSingleChanOffsetSet*) G__getstructoffset())->SetOffsetsOfChan((const UChar_t) G__int(libp->para[0]), *(TSnRecoSingleChanOffset*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnRecoSingleChanOffsetSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoSingleChanOffsetSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnRecoSingleChanOffsetSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnRecoSingleChanOffsetSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRecoSingleChanOffsetSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoSingleChanOffsetSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRecoSingleChanOffsetSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRecoSingleChanOffsetSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__recodat_227_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRecoSingleChanOffsetSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnRecoSingleChanOffsetSet G__TTSnRecoSingleChanOffsetSet;
static int G__G__recodat_227_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnRecoSingleChanOffsetSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnRecoSingleChanOffsetSet*) (soff+(sizeof(TSnRecoSingleChanOffsetSet)*i)))->~G__TTSnRecoSingleChanOffsetSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnRecoSingleChanOffsetSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnRecoSingleChanOffsetSet*) (soff))->~G__TTSnRecoSingleChanOffsetSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSnRecoResult */

/* TSnRecoDirection */

/* TSnRecoChanOffsets */

/* TSnRecoSingleChanOffset */

/* TSnRecoSingleChanOffsetSet */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__recodat {
 public:
  G__Sizep2memfuncG__recodat(): p(&G__Sizep2memfuncG__recodat::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__recodat::*p)();
};

size_t G__get_sizep2memfuncG__recodat()
{
  G__Sizep2memfuncG__recodat a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__recodat() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoResult))) {
     TSnRecoResult *G__Lderived;
     G__Lderived=(TSnRecoResult*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoResult),G__get_linked_tagnum(&G__G__recodatLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoResult),G__get_linked_tagnum(&G__G__recodatLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection))) {
     TSnRecoDirection *G__Lderived;
     G__Lderived=(TSnRecoDirection*)0x1000;
     {
       TSnRecoResult *G__Lpbase=(TSnRecoResult*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection),G__get_linked_tagnum(&G__G__recodatLN_TSnRecoResult),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection),G__get_linked_tagnum(&G__G__recodatLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection),G__get_linked_tagnum(&G__G__recodatLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets))) {
     TSnRecoChanOffsets *G__Lderived;
     G__Lderived=(TSnRecoChanOffsets*)0x1000;
     {
       TSnRecoResult *G__Lpbase=(TSnRecoResult*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets),G__get_linked_tagnum(&G__G__recodatLN_TSnRecoResult),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets),G__get_linked_tagnum(&G__G__recodatLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets),G__get_linked_tagnum(&G__G__recodatLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset))) {
     TSnRecoSingleChanOffset *G__Lderived;
     G__Lderived=(TSnRecoSingleChanOffset*)0x1000;
     {
       TSnRecoResult *G__Lpbase=(TSnRecoResult*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset),G__get_linked_tagnum(&G__G__recodatLN_TSnRecoResult),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset),G__get_linked_tagnum(&G__G__recodatLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset),G__get_linked_tagnum(&G__G__recodatLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet))) {
     TSnRecoSingleChanOffsetSet *G__Lderived;
     G__Lderived=(TSnRecoSingleChanOffsetSet*)0x1000;
     {
       TSnRecoResult *G__Lpbase=(TSnRecoResult*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet),G__get_linked_tagnum(&G__G__recodatLN_TSnRecoResult),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet),G__get_linked_tagnum(&G__G__recodatLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet),G__get_linked_tagnum(&G__G__recodatLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__recodat() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__recodatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__recodatLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recodatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__recodatLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recodatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__recodatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__recodatLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recodatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__recodatLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recodatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__recodatLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSnRecoResult */
static void G__setup_memvarTSnRecoResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoResult));
   { TSnRecoResult *p; p=(TSnRecoResult*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recodatLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnRecoDirection */
static void G__setup_memvarTSnRecoDirection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection));
   { TSnRecoDirection *p; p=(TSnRecoDirection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recodatLN_TVector3),-1,-1,4,"fDir=",0,"the reconstructed direction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recodatLN_TVector3),-1,-1,4,"fErr=",0,"errors on the direction parameters");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLik=",0,"the fit quality paramter (chi2, log likelihood, etc)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recodatLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnRecoChanOffsets */
static void G__setup_memvarTSnRecoChanOffsets(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets));
   { TSnRecoChanOffsets *p; p=(TSnRecoChanOffsets*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,1,G__FastAllocString(4096).Format("kChCmbs=%lluULL",(unsigned long long)TSnRecoChanOffsets::kChCmbs).data(),0,"number of channel combinations");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recodatLN_TArrayD),-1,-1,4,"fDts=",0,"channel time offests");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recodatLN_TArrayD),-1,-1,4,"fErr=",0,"channel time offests");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLik=",0,"the fit quality paramter (chi2, log likelihood, etc)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recodatLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnRecoSingleChanOffset */
static void G__setup_memvarTSnRecoSingleChanOffset(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset));
   { TSnRecoSingleChanOffset *p; p=(TSnRecoSingleChanOffset*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fOff=",0,"channel time offest");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fErr=",0,"channel time offest error");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLik=",0,"the fit quality paramter (chi2, log likelihood, etc)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recodatLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnRecoSingleChanOffsetSet */
static void G__setup_memvarTSnRecoSingleChanOffsetSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet));
   { TSnRecoSingleChanOffsetSet *p; p=(TSnRecoSingleChanOffsetSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recodatLN_TObjArray),-1,-1,4,"fSet=",0,"-> the collection of TSnRecoSingleChanOffset objs (owner)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recodatLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__recodat() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSnRecoResult(void) {
   /* TSnRecoResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoResult));
   G__memfunc_setup("CopyFrom",815,G__G__recodat_183_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TSnRecoResult' - 11 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Copy",411,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TObject' - 1 - o", "copy to", (void*) NULL, 1);
   G__memfunc_setup("GetMinimizerTag",1520,G__G__recodat_183_0_5, 117, G__get_linked_tagnum(&G__G__recodatLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinimizerTag",1532,G__G__recodat_183_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__recodat_183_0_8, 85, G__get_linked_tagnum(&G__G__recodatLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnRecoResult::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__recodat_183_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoResult::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__recodat_183_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnRecoResult::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__recodat_183_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnRecoResult::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recodatLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__recodat_183_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__recodat_183_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoResult::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__recodat_183_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRecoResult::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__recodat_183_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoResult::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__recodat_183_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRecoResult::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSnRecoResult", 1435, G__G__recodat_183_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__recodat_183_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__recodatLN_TSnRecoResult), -1, 1, 1, 1, 1, 0, "u 'TSnRecoResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnRecoDirection(void) {
   /* TSnRecoDirection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection));
   G__memfunc_setup("TSnRecoDirection",1599,G__G__recodat_221_0_1, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnRecoDirection",1599,G__G__recodat_221_0_2, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - minimizerTag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnRecoDirection",1599,G__G__recodat_221_0_3, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection), -1, 0, 7, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - minimizerTag "
"d - 'Double_t' 10 - theta d - 'Double_t' 10 - terr "
"d - 'Double_t' 10 - phi d - 'Double_t' 10 - perr "
"d - 'Double_t' 10 - qual", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyFrom",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TSnRecoResult' - 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDir",575,G__G__recodat_221_0_5, 117, G__get_linked_tagnum(&G__G__recodatLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetErr",585,G__G__recodat_221_0_6, 117, G__get_linked_tagnum(&G__G__recodatLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitQual",982,G__G__recodat_221_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__G__recodat_221_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__G__recodat_221_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaErr",1087,G__G__recodat_221_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiErr",874,G__G__recodat_221_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitQual",994,G__G__recodat_221_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDir",587,G__G__recodat_221_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDir",587,G__G__recodat_221_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 10 - theta d - 'Double_t' 10 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDir",587,G__G__recodat_221_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 10 - x d - 'Double_t' 10 - y "
"d - 'Double_t' 10 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetErr",597,G__G__recodat_221_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetErr",597,G__G__recodat_221_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 10 - terr d - 'Double_t' 10 - perr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetErr",597,G__G__recodat_221_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 10 - x d - 'Double_t' 10 - y "
"d - 'Double_t' 10 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__recodat_221_0_20, 85, G__get_linked_tagnum(&G__G__recodatLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnRecoDirection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__recodat_221_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoDirection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__recodat_221_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnRecoDirection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__recodat_221_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnRecoDirection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recodatLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__recodat_221_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__recodat_221_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoDirection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__recodat_221_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRecoDirection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__recodat_221_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoDirection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__recodat_221_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRecoDirection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnRecoDirection", 1599, G__G__recodat_221_0_32, (int) ('i'), G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection), -1, 0, 1, 1, 1, 0, "u 'TSnRecoDirection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnRecoDirection", 1725, G__G__recodat_221_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__recodat_221_0_34, (int) ('u'), G__get_linked_tagnum(&G__G__recodatLN_TSnRecoDirection), -1, 1, 1, 1, 1, 0, "u 'TSnRecoDirection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnRecoChanOffsets(void) {
   /* TSnRecoChanOffsets */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets));
   G__memfunc_setup("TSnRecoChanOffsets",1778,G__G__recodat_224_0_1, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnRecoChanOffsets",1778,G__G__recodat_224_0_2, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - minimizerTag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnRecoChanOffsets",1778,G__G__recodat_224_0_3, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - minimizerTag "
"D - 'Double_t' 10 - os D - 'Double_t' 10 '0' err "
"d - 'Double_t' 10 '0' qual", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyFrom",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TSnRecoResult' - 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IndexFor",799,G__G__recodat_224_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 2, 3, 1, 0, 
"b - 'UChar_t' 10 - up c - 'Char_t' 10 - lo", (char*)NULL, (void*) G__func2void( (UInt_t (*)(const UChar_t, const Char_t))(&TSnRecoChanOffsets::IndexFor) ), 0);
   G__memfunc_setup("GetFitQual",982,G__G__recodat_224_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanOffsets",1396,G__G__recodat_224_0_7, 117, G__get_linked_tagnum(&G__G__recodatLN_TArrayD), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanOffset",1281,G__G__recodat_224_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"b - 'UChar_t' 10 - c1 b - 'UChar_t' 10 - c2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanOffsetErrors",1918,G__G__recodat_224_0_9, 117, G__get_linked_tagnum(&G__G__recodatLN_TArrayD), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanOffsetError",1803,G__G__recodat_224_0_10, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"b - 'UChar_t' 10 - c1 b - 'UChar_t' 10 - c2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitQual",994,G__G__recodat_224_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanOffset",1293,G__G__recodat_224_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"b - 'UChar_t' 10 - c1 b - 'UChar_t' 10 - c2 "
"d - 'Double_t' 10 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanOffset",1293,G__G__recodat_224_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 10 - idx d - 'Double_t' 10 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanOffsets",1408,G__G__recodat_224_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanOffsetError",1815,G__G__recodat_224_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"b - 'UChar_t' 10 - c1 b - 'UChar_t' 10 - c2 "
"d - 'Double_t' 10 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanOffsetError",1815,G__G__recodat_224_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 10 - idx d - 'Double_t' 10 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanOffsetErrors",1930,G__G__recodat_224_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - es", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__recodat_224_0_19, 85, G__get_linked_tagnum(&G__G__recodatLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnRecoChanOffsets::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__recodat_224_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoChanOffsets::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__recodat_224_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnRecoChanOffsets::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__recodat_224_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnRecoChanOffsets::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recodatLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__recodat_224_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__recodat_224_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoChanOffsets::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__recodat_224_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRecoChanOffsets::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__recodat_224_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoChanOffsets::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__recodat_224_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRecoChanOffsets::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnRecoChanOffsets", 1778, G__G__recodat_224_0_31, (int) ('i'), G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets), -1, 0, 1, 1, 1, 0, "u 'TSnRecoChanOffsets' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnRecoChanOffsets", 1904, G__G__recodat_224_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__recodat_224_0_33, (int) ('u'), G__get_linked_tagnum(&G__G__recodatLN_TSnRecoChanOffsets), -1, 1, 1, 1, 1, 0, "u 'TSnRecoChanOffsets' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnRecoSingleChanOffset(void) {
   /* TSnRecoSingleChanOffset */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset));
   G__memfunc_setup("TSnRecoSingleChanOffset",2273,G__G__recodat_225_0_1, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnRecoSingleChanOffset",2273,G__G__recodat_225_0_2, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - minimizerTag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnRecoSingleChanOffset",2273,G__G__recodat_225_0_3, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - minimizerTag "
"d - 'Double_t' 10 - off d - 'Double_t' 10 - err "
"d - 'Double_t' 10 - qual", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyFrom",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TSnRecoResult' - 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFitQual",982,G__G__recodat_225_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeOffset",1302,G__G__recodat_225_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffsetError",1425,G__G__recodat_225_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitQual",994,G__G__recodat_225_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeOffset",1314,G__G__recodat_225_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOffsetError",1437,G__G__recodat_225_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__recodat_225_0_12, 85, G__get_linked_tagnum(&G__G__recodatLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnRecoSingleChanOffset::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__recodat_225_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoSingleChanOffset::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__recodat_225_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnRecoSingleChanOffset::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__recodat_225_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnRecoSingleChanOffset::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recodatLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__recodat_225_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__recodat_225_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoSingleChanOffset::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__recodat_225_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRecoSingleChanOffset::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__recodat_225_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoSingleChanOffset::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__recodat_225_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRecoSingleChanOffset::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnRecoSingleChanOffset", 2273, G__G__recodat_225_0_24, (int) ('i'), 
G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset), -1, 0, 1, 1, 1, 0, "u 'TSnRecoSingleChanOffset' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnRecoSingleChanOffset", 2399, G__G__recodat_225_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__recodat_225_0_26, (int) ('u'), G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset), -1, 1, 1, 1, 1, 0, "u 'TSnRecoSingleChanOffset' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnRecoSingleChanOffsetSet(void) {
   /* TSnRecoSingleChanOffsetSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet));
   G__memfunc_setup("TSnRecoSingleChanOffsetSet",2573,G__G__recodat_227_0_1, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnRecoSingleChanOffsetSet",2573,G__G__recodat_227_0_2, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - minimizerTag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnRecoSingleChanOffsetSet",2573,G__G__recodat_227_0_3, 105, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet), -1, 0, 1, 1, 1, 0, "u 'TSnRecoSingleChanOffsetSet' - 11 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Swap",411,G__G__recodat_227_0_4, 121, -1, -1, 0, 2, 3, 1, 0, 
"u 'TSnRecoSingleChanOffsetSet' - 1 - a u 'TSnRecoSingleChanOffsetSet' - 1 - b", (char*)NULL, (void*) G__func2void( (void (*)(TSnRecoSingleChanOffsetSet&, TSnRecoSingleChanOffsetSet&))(&TSnRecoSingleChanOffsetSet::Swap) ), 0);
   G__memfunc_setup("operator=",937,G__G__recodat_227_0_5, 117, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffsetSet), -1, 1, 1, 1, 1, 0, "u 'TSnRecoSingleChanOffsetSet' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyFrom",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TSnRecoResult' - 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAllChanOffsets",1677,G__G__recodat_227_0_7, 85, G__get_linked_tagnum(&G__G__recodatLN_TObjArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffsetsOfChan",1577,G__G__recodat_227_0_8, 85, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset), -1, 0, 1, 1, 1, 9, "b - 'UChar_t' 10 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffsetsOfChan",1577,G__G__recodat_227_0_9, 85, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset), -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 10 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffsetsOfChanSafe",1960,G__G__recodat_227_0_10, 117, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset), -1, 1, 1, 1, 1, 9, "b - 'UChar_t' 10 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffsetsOfChanSafe",1960,G__G__recodat_227_0_11, 117, G__get_linked_tagnum(&G__G__recodatLN_TSnRecoSingleChanOffset), -1, 1, 1, 1, 1, 0, "b - 'UChar_t' 10 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeOffset",1302,G__G__recodat_227_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "b - 'UChar_t' 10 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffsetError",1425,G__G__recodat_227_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "b - 'UChar_t' 10 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitQual",982,G__G__recodat_227_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "b - 'UChar_t' 10 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOffsetsOfChan",1589,G__G__recodat_227_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"b - 'UChar_t' 10 - ch u 'TSnRecoSingleChanOffset' - 11 - co", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__recodat_227_0_17, 85, G__get_linked_tagnum(&G__G__recodatLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnRecoSingleChanOffsetSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__recodat_227_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoSingleChanOffsetSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__recodat_227_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnRecoSingleChanOffsetSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__recodat_227_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnRecoSingleChanOffsetSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recodatLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__recodat_227_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__recodat_227_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoSingleChanOffsetSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__recodat_227_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRecoSingleChanOffsetSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__recodat_227_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRecoSingleChanOffsetSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__recodat_227_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRecoSingleChanOffsetSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSnRecoSingleChanOffsetSet", 2699, G__G__recodat_227_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__recodat() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__recodat() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__recodat() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__recodatLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TSnRecoResult = { "TSnRecoResult" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TSnRecoDirection = { "TSnRecoDirection" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TSnRecoChanOffsets = { "TSnRecoChanOffsets" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TSnRecoSingleChanOffset = { "TSnRecoSingleChanOffset" , 99 , -1 };
G__linked_taginfo G__G__recodatLN_TSnRecoSingleChanOffsetSet = { "TSnRecoSingleChanOffsetSet" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__recodat() {
  G__G__recodatLN_TClass.tagnum = -1 ;
  G__G__recodatLN_TBuffer.tagnum = -1 ;
  G__G__recodatLN_TMemberInspector.tagnum = -1 ;
  G__G__recodatLN_TObject.tagnum = -1 ;
  G__G__recodatLN_TNamed.tagnum = -1 ;
  G__G__recodatLN_TString.tagnum = -1 ;
  G__G__recodatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__recodatLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__recodatLN_TObjArray.tagnum = -1 ;
  G__G__recodatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__recodatLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__recodatLN_TSnRecoResult.tagnum = -1 ;
  G__G__recodatLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__recodatLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__recodatLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__recodatLN_TVector3.tagnum = -1 ;
  G__G__recodatLN_TSnRecoDirection.tagnum = -1 ;
  G__G__recodatLN_TArrayD.tagnum = -1 ;
  G__G__recodatLN_TSnRecoChanOffsets.tagnum = -1 ;
  G__G__recodatLN_TSnRecoSingleChanOffset.tagnum = -1 ;
  G__G__recodatLN_TSnRecoSingleChanOffsetSet.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__recodat() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TString);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recodatLN_TSnRecoResult),sizeof(TSnRecoResult),-1,324865,"ABC providing a common interface for reconstruction fit results",G__setup_memvarTSnRecoResult,G__setup_memfuncTSnRecoResult);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recodatLN_TSnRecoDirection),sizeof(TSnRecoDirection),-1,323840,"reconstructed direction",G__setup_memvarTSnRecoDirection,G__setup_memfuncTSnRecoDirection);
   G__get_linked_tagnum_fwd(&G__G__recodatLN_TArrayD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recodatLN_TSnRecoChanOffsets),sizeof(TSnRecoChanOffsets),-1,324864,"reconstructed channel time offsets among combinations of channels in an event",G__setup_memvarTSnRecoChanOffsets,G__setup_memfuncTSnRecoChanOffsets);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recodatLN_TSnRecoSingleChanOffset),sizeof(TSnRecoSingleChanOffset),-1,324864,"one time offset per channel (useful for offets between events)",G__setup_memvarTSnRecoSingleChanOffset,G__setup_memfuncTSnRecoSingleChanOffset);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recodatLN_TSnRecoSingleChanOffsetSet),sizeof(TSnRecoSingleChanOffsetSet),-1,327424,"a collection of single channel offset reco results",G__setup_memvarTSnRecoSingleChanOffsetSet,G__setup_memfuncTSnRecoSingleChanOffsetSet);
}
extern "C" void G__cpp_setupG__recodat(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__recodat()");
  G__set_cpp_environmentG__recodat();
  G__cpp_setup_tagtableG__recodat();

  G__cpp_setup_inheritanceG__recodat();

  G__cpp_setup_typetableG__recodat();

  G__cpp_setup_memvarG__recodat();

  G__cpp_setup_memfuncG__recodat();
  G__cpp_setup_globalG__recodat();
  G__cpp_setup_funcG__recodat();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__recodat();
  return;
}
class G__cpp_setup_initG__recodat {
  public:
    G__cpp_setup_initG__recodat() { G__add_setup_func("G__recodat",(G__incsetup)(&G__cpp_setupG__recodat)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__recodat() { G__remove_setup_func("G__recodat"); }
};
G__cpp_setup_initG__recodat G__cpp_setup_initializerG__recodat;

