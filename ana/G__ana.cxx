//
// File generated by /data/users/jtatar/Software/root/bin/rootcint at Wed Jun  4 16:02:14 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME anadIG__ana
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__ana.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< unsigned int, unsigned int > pairlEunsignedsPintcOunsignedsPintgR;
      #else
      class pairlEunsignedsPintcOunsignedsPintgR  {
         public:
         //friend XX;
         unsigned int first; //
         unsigned int second; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSnCorrelateChans_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnCorrelateChans(void *p = 0);
   static void *newArray_TSnCorrelateChans(Long_t size, void *p);
   static void delete_TSnCorrelateChans(void *p);
   static void deleteArray_TSnCorrelateChans(void *p);
   static void destruct_TSnCorrelateChans(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnCorrelateChans*)
   {
      ::TSnCorrelateChans *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnCorrelateChans >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnCorrelateChans", ::TSnCorrelateChans::Class_Version(), "./ana/TSnCorrelateChans.h", 17,
                  typeid(::TSnCorrelateChans), DefineBehavior(ptr, ptr),
                  &::TSnCorrelateChans::Dictionary, isa_proxy, 4,
                  sizeof(::TSnCorrelateChans) );
      instance.SetNew(&new_TSnCorrelateChans);
      instance.SetNewArray(&newArray_TSnCorrelateChans);
      instance.SetDelete(&delete_TSnCorrelateChans);
      instance.SetDeleteArray(&deleteArray_TSnCorrelateChans);
      instance.SetDestructor(&destruct_TSnCorrelateChans);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnCorrelateChans*)
   {
      return GenerateInitInstanceLocal((::TSnCorrelateChans*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnCorrelateChans*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnCorrCoef_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnCorrCoef(void *p = 0);
   static void *newArray_TSnCorrCoef(Long_t size, void *p);
   static void delete_TSnCorrCoef(void *p);
   static void deleteArray_TSnCorrCoef(void *p);
   static void destruct_TSnCorrCoef(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnCorrCoef*)
   {
      ::TSnCorrCoef *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnCorrCoef >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnCorrCoef", ::TSnCorrCoef::Class_Version(), "./ana/TSnCorrelateWvs.h", 22,
                  typeid(::TSnCorrCoef), DefineBehavior(ptr, ptr),
                  &::TSnCorrCoef::Dictionary, isa_proxy, 4,
                  sizeof(::TSnCorrCoef) );
      instance.SetNew(&new_TSnCorrCoef);
      instance.SetNewArray(&newArray_TSnCorrCoef);
      instance.SetDelete(&delete_TSnCorrCoef);
      instance.SetDeleteArray(&deleteArray_TSnCorrCoef);
      instance.SetDestructor(&destruct_TSnCorrCoef);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnCorrCoef*)
   {
      return GenerateInitInstanceLocal((::TSnCorrCoef*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnCorrCoef*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnCorrelateWvs_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnCorrelateWvs(void *p = 0);
   static void *newArray_TSnCorrelateWvs(Long_t size, void *p);
   static void delete_TSnCorrelateWvs(void *p);
   static void deleteArray_TSnCorrelateWvs(void *p);
   static void destruct_TSnCorrelateWvs(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnCorrelateWvs*)
   {
      ::TSnCorrelateWvs *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnCorrelateWvs >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnCorrelateWvs", ::TSnCorrelateWvs::Class_Version(), "./ana/TSnCorrelateWvs.h", 80,
                  typeid(::TSnCorrelateWvs), DefineBehavior(ptr, ptr),
                  &::TSnCorrelateWvs::Dictionary, isa_proxy, 4,
                  sizeof(::TSnCorrelateWvs) );
      instance.SetNew(&new_TSnCorrelateWvs);
      instance.SetNewArray(&newArray_TSnCorrelateWvs);
      instance.SetDelete(&delete_TSnCorrelateWvs);
      instance.SetDeleteArray(&deleteArray_TSnCorrelateWvs);
      instance.SetDestructor(&destruct_TSnCorrelateWvs);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnCorrelateWvs*)
   {
      return GenerateInitInstanceLocal((::TSnCorrelateWvs*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnCorrelateWvs*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnClust_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnClust(void *p = 0);
   static void *newArray_TSnClust(Long_t size, void *p);
   static void delete_TSnClust(void *p);
   static void deleteArray_TSnClust(void *p);
   static void destruct_TSnClust(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnClust*)
   {
      ::TSnClust *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnClust >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnClust", ::TSnClust::Class_Version(), "./ana/TSnCorrelateWvs.h", 56,
                  typeid(::TSnClust), DefineBehavior(ptr, ptr),
                  &::TSnClust::Dictionary, isa_proxy, 4,
                  sizeof(::TSnClust) );
      instance.SetNew(&new_TSnClust);
      instance.SetNewArray(&newArray_TSnClust);
      instance.SetDelete(&delete_TSnClust);
      instance.SetDeleteArray(&deleteArray_TSnClust);
      instance.SetDestructor(&destruct_TSnClust);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnClust*)
   {
      return GenerateInitInstanceLocal((::TSnClust*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnClust*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnCorrelateWaves_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnCorrelateWaves(void *p = 0);
   static void *newArray_TSnCorrelateWaves(Long_t size, void *p);
   static void delete_TSnCorrelateWaves(void *p);
   static void deleteArray_TSnCorrelateWaves(void *p);
   static void destruct_TSnCorrelateWaves(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnCorrelateWaves*)
   {
      ::TSnCorrelateWaves *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnCorrelateWaves >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnCorrelateWaves", ::TSnCorrelateWaves::Class_Version(), "./ana/TSnCorrelateWaves.h", 12,
                  typeid(::TSnCorrelateWaves), DefineBehavior(ptr, ptr),
                  &::TSnCorrelateWaves::Dictionary, isa_proxy, 4,
                  sizeof(::TSnCorrelateWaves) );
      instance.SetNew(&new_TSnCorrelateWaves);
      instance.SetNewArray(&newArray_TSnCorrelateWaves);
      instance.SetDelete(&delete_TSnCorrelateWaves);
      instance.SetDeleteArray(&deleteArray_TSnCorrelateWaves);
      instance.SetDestructor(&destruct_TSnCorrelateWaves);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnCorrelateWaves*)
   {
      return GenerateInitInstanceLocal((::TSnCorrelateWaves*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnCorrelateWaves*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnClusterTimes_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnClusterTimes(void *p = 0);
   static void *newArray_TSnClusterTimes(Long_t size, void *p);
   static void delete_TSnClusterTimes(void *p);
   static void deleteArray_TSnClusterTimes(void *p);
   static void destruct_TSnClusterTimes(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnClusterTimes*)
   {
      ::TSnClusterTimes *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnClusterTimes >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnClusterTimes", ::TSnClusterTimes::Class_Version(), "./ana/TSnCluster.h", 15,
                  typeid(::TSnClusterTimes), DefineBehavior(ptr, ptr),
                  &::TSnClusterTimes::Dictionary, isa_proxy, 4,
                  sizeof(::TSnClusterTimes) );
      instance.SetNew(&new_TSnClusterTimes);
      instance.SetNewArray(&newArray_TSnClusterTimes);
      instance.SetDelete(&delete_TSnClusterTimes);
      instance.SetDeleteArray(&deleteArray_TSnClusterTimes);
      instance.SetDestructor(&destruct_TSnClusterTimes);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnClusterTimes*)
   {
      return GenerateInitInstanceLocal((::TSnClusterTimes*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnClusterTimes*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnCluster(void *p = 0);
   static void *newArray_TSnCluster(Long_t size, void *p);
   static void delete_TSnCluster(void *p);
   static void deleteArray_TSnCluster(void *p);
   static void destruct_TSnCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnCluster*)
   {
      ::TSnCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnCluster", ::TSnCluster::Class_Version(), "./ana/TSnCluster.h", 54,
                  typeid(::TSnCluster), DefineBehavior(ptr, ptr),
                  &::TSnCluster::Dictionary, isa_proxy, 4,
                  sizeof(::TSnCluster) );
      instance.SetNew(&new_TSnCluster);
      instance.SetNewArray(&newArray_TSnCluster);
      instance.SetDelete(&delete_TSnCluster);
      instance.SetDeleteArray(&deleteArray_TSnCluster);
      instance.SetDestructor(&destruct_TSnCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnCluster*)
   {
      return GenerateInitInstanceLocal((::TSnCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnCorrelateWavesMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnCorrelateWavesMod(void *p = 0);
   static void *newArray_TSnCorrelateWavesMod(Long_t size, void *p);
   static void delete_TSnCorrelateWavesMod(void *p);
   static void deleteArray_TSnCorrelateWavesMod(void *p);
   static void destruct_TSnCorrelateWavesMod(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnCorrelateWavesMod*)
   {
      ::TSnCorrelateWavesMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnCorrelateWavesMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnCorrelateWavesMod", ::TSnCorrelateWavesMod::Class_Version(), "./ana/TSnCorrelateWavesMod.h", 12,
                  typeid(::TSnCorrelateWavesMod), DefineBehavior(ptr, ptr),
                  &::TSnCorrelateWavesMod::Dictionary, isa_proxy, 4,
                  sizeof(::TSnCorrelateWavesMod) );
      instance.SetNew(&new_TSnCorrelateWavesMod);
      instance.SetNewArray(&newArray_TSnCorrelateWavesMod);
      instance.SetDelete(&delete_TSnCorrelateWavesMod);
      instance.SetDeleteArray(&deleteArray_TSnCorrelateWavesMod);
      instance.SetDestructor(&destruct_TSnCorrelateWavesMod);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnCorrelateWavesMod*)
   {
      return GenerateInitInstanceLocal((::TSnCorrelateWavesMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnCorrelateWavesMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnSelEvtsOnCC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnSelEvtsOnCC(void *p = 0);
   static void *newArray_TSnSelEvtsOnCC(Long_t size, void *p);
   static void delete_TSnSelEvtsOnCC(void *p);
   static void deleteArray_TSnSelEvtsOnCC(void *p);
   static void destruct_TSnSelEvtsOnCC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnSelEvtsOnCC*)
   {
      ::TSnSelEvtsOnCC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnSelEvtsOnCC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnSelEvtsOnCC", ::TSnSelEvtsOnCC::Class_Version(), "./ana/TSnSelEvtsOnCC.h", 13,
                  typeid(::TSnSelEvtsOnCC), DefineBehavior(ptr, ptr),
                  &::TSnSelEvtsOnCC::Dictionary, isa_proxy, 4,
                  sizeof(::TSnSelEvtsOnCC) );
      instance.SetNew(&new_TSnSelEvtsOnCC);
      instance.SetNewArray(&newArray_TSnSelEvtsOnCC);
      instance.SetDelete(&delete_TSnSelEvtsOnCC);
      instance.SetDeleteArray(&deleteArray_TSnSelEvtsOnCC);
      instance.SetDestructor(&destruct_TSnSelEvtsOnCC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnSelEvtsOnCC*)
   {
      return GenerateInitInstanceLocal((::TSnSelEvtsOnCC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnSelEvtsOnCC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnRunEvtOut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnRunEvtOut(void *p = 0);
   static void *newArray_TSnRunEvtOut(Long_t size, void *p);
   static void delete_TSnRunEvtOut(void *p);
   static void deleteArray_TSnRunEvtOut(void *p);
   static void destruct_TSnRunEvtOut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnRunEvtOut*)
   {
      ::TSnRunEvtOut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnRunEvtOut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnRunEvtOut", ::TSnRunEvtOut::Class_Version(), "./ana/TSnPlotCCMod.h", 22,
                  typeid(::TSnRunEvtOut), DefineBehavior(ptr, ptr),
                  &::TSnRunEvtOut::Dictionary, isa_proxy, 4,
                  sizeof(::TSnRunEvtOut) );
      instance.SetNew(&new_TSnRunEvtOut);
      instance.SetNewArray(&newArray_TSnRunEvtOut);
      instance.SetDelete(&delete_TSnRunEvtOut);
      instance.SetDeleteArray(&deleteArray_TSnRunEvtOut);
      instance.SetDestructor(&destruct_TSnRunEvtOut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnRunEvtOut*)
   {
      return GenerateInitInstanceLocal((::TSnRunEvtOut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnRunEvtOut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlEunsignedsPintcOunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEunsignedsPintcOunsignedsPintgR_Dictionary();
   static void *new_pairlEunsignedsPintcOunsignedsPintgR(void *p = 0);
   static void *newArray_pairlEunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_pairlEunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_pairlEunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_pairlEunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<unsigned int,unsigned int>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<unsigned int,unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<unsigned int,unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<unsigned int,unsigned int>", "prec_stl/utility", 17,
                  typeid(pair<unsigned int,unsigned int>), DefineBehavior(ptr, ptr),
                  &pairlEunsignedsPintcOunsignedsPintgR_ShowMembers, &pairlEunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(pair<unsigned int,unsigned int>) );
      instance.SetNew(&new_pairlEunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_pairlEunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_pairlEunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_pairlEunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_pairlEunsignedsPintcOunsignedsPintgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((pair<unsigned int,unsigned int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<unsigned int,unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEunsignedsPintcOunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<unsigned int,unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSnPlotCCMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnPlotCCMod(void *p = 0);
   static void *newArray_TSnPlotCCMod(Long_t size, void *p);
   static void delete_TSnPlotCCMod(void *p);
   static void deleteArray_TSnPlotCCMod(void *p);
   static void destruct_TSnPlotCCMod(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnPlotCCMod*)
   {
      ::TSnPlotCCMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnPlotCCMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnPlotCCMod", ::TSnPlotCCMod::Class_Version(), "./ana/TSnPlotCCMod.h", 56,
                  typeid(::TSnPlotCCMod), DefineBehavior(ptr, ptr),
                  &::TSnPlotCCMod::Dictionary, isa_proxy, 4,
                  sizeof(::TSnPlotCCMod) );
      instance.SetNew(&new_TSnPlotCCMod);
      instance.SetNewArray(&newArray_TSnPlotCCMod);
      instance.SetDelete(&delete_TSnPlotCCMod);
      instance.SetDeleteArray(&deleteArray_TSnPlotCCMod);
      instance.SetDestructor(&destruct_TSnPlotCCMod);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnPlotCCMod*)
   {
      return GenerateInitInstanceLocal((::TSnPlotCCMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnPlotCCMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnPlotCorrelations_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnPlotCorrelations(void *p = 0);
   static void *newArray_TSnPlotCorrelations(Long_t size, void *p);
   static void delete_TSnPlotCorrelations(void *p);
   static void deleteArray_TSnPlotCorrelations(void *p);
   static void destruct_TSnPlotCorrelations(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnPlotCorrelations*)
   {
      ::TSnPlotCorrelations *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnPlotCorrelations >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnPlotCorrelations", ::TSnPlotCorrelations::Class_Version(), "./ana/TSnPlotCorrelations.h", 10,
                  typeid(::TSnPlotCorrelations), DefineBehavior(ptr, ptr),
                  &::TSnPlotCorrelations::Dictionary, isa_proxy, 4,
                  sizeof(::TSnPlotCorrelations) );
      instance.SetNew(&new_TSnPlotCorrelations);
      instance.SetNewArray(&newArray_TSnPlotCorrelations);
      instance.SetDelete(&delete_TSnPlotCorrelations);
      instance.SetDeleteArray(&deleteArray_TSnPlotCorrelations);
      instance.SetDestructor(&destruct_TSnPlotCorrelations);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnPlotCorrelations*)
   {
      return GenerateInitInstanceLocal((::TSnPlotCorrelations*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnPlotCorrelations*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnNumHighFFTBins_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnNumHighFFTBins(void *p = 0);
   static void *newArray_TSnNumHighFFTBins(Long_t size, void *p);
   static void delete_TSnNumHighFFTBins(void *p);
   static void deleteArray_TSnNumHighFFTBins(void *p);
   static void destruct_TSnNumHighFFTBins(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnNumHighFFTBins*)
   {
      ::TSnNumHighFFTBins *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnNumHighFFTBins >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnNumHighFFTBins", ::TSnNumHighFFTBins::Class_Version(), "./ana/TSnNumHighFFTBins.h", 12,
                  typeid(::TSnNumHighFFTBins), DefineBehavior(ptr, ptr),
                  &::TSnNumHighFFTBins::Dictionary, isa_proxy, 4,
                  sizeof(::TSnNumHighFFTBins) );
      instance.SetNew(&new_TSnNumHighFFTBins);
      instance.SetNewArray(&newArray_TSnNumHighFFTBins);
      instance.SetDelete(&delete_TSnNumHighFFTBins);
      instance.SetDeleteArray(&deleteArray_TSnNumHighFFTBins);
      instance.SetDestructor(&destruct_TSnNumHighFFTBins);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnNumHighFFTBins*)
   {
      return GenerateInitInstanceLocal((::TSnNumHighFFTBins*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnNumHighFFTBins*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnSelEvtsOnHighFFTBins_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnSelEvtsOnHighFFTBins(void *p = 0);
   static void *newArray_TSnSelEvtsOnHighFFTBins(Long_t size, void *p);
   static void delete_TSnSelEvtsOnHighFFTBins(void *p);
   static void deleteArray_TSnSelEvtsOnHighFFTBins(void *p);
   static void destruct_TSnSelEvtsOnHighFFTBins(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnSelEvtsOnHighFFTBins*)
   {
      ::TSnSelEvtsOnHighFFTBins *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnSelEvtsOnHighFFTBins >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnSelEvtsOnHighFFTBins", ::TSnSelEvtsOnHighFFTBins::Class_Version(), "./ana/TSnSelEvtsOnHighFFTBins.h", 13,
                  typeid(::TSnSelEvtsOnHighFFTBins), DefineBehavior(ptr, ptr),
                  &::TSnSelEvtsOnHighFFTBins::Dictionary, isa_proxy, 4,
                  sizeof(::TSnSelEvtsOnHighFFTBins) );
      instance.SetNew(&new_TSnSelEvtsOnHighFFTBins);
      instance.SetNewArray(&newArray_TSnSelEvtsOnHighFFTBins);
      instance.SetDelete(&delete_TSnSelEvtsOnHighFFTBins);
      instance.SetDeleteArray(&deleteArray_TSnSelEvtsOnHighFFTBins);
      instance.SetDestructor(&destruct_TSnSelEvtsOnHighFFTBins);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnSelEvtsOnHighFFTBins*)
   {
      return GenerateInitInstanceLocal((::TSnSelEvtsOnHighFFTBins*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnSelEvtsOnHighFFTBins*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnCountEventsMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnCountEventsMod(void *p = 0);
   static void *newArray_TSnCountEventsMod(Long_t size, void *p);
   static void delete_TSnCountEventsMod(void *p);
   static void deleteArray_TSnCountEventsMod(void *p);
   static void destruct_TSnCountEventsMod(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnCountEventsMod*)
   {
      ::TSnCountEventsMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnCountEventsMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnCountEventsMod", ::TSnCountEventsMod::Class_Version(), "./ana/TSnCountEventsMod.h", 8,
                  typeid(::TSnCountEventsMod), DefineBehavior(ptr, ptr),
                  &::TSnCountEventsMod::Dictionary, isa_proxy, 4,
                  sizeof(::TSnCountEventsMod) );
      instance.SetNew(&new_TSnCountEventsMod);
      instance.SetNewArray(&newArray_TSnCountEventsMod);
      instance.SetDelete(&delete_TSnCountEventsMod);
      instance.SetDeleteArray(&deleteArray_TSnCountEventsMod);
      instance.SetDestructor(&destruct_TSnCountEventsMod);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnCountEventsMod*)
   {
      return GenerateInitInstanceLocal((::TSnCountEventsMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnCountEventsMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSnCorrelateChans::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnCorrelateChans::Class_Name()
{
   return "TSnCorrelateChans";
}

//______________________________________________________________________________
const char *TSnCorrelateChans::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateChans*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnCorrelateChans::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateChans*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnCorrelateChans::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateChans*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnCorrelateChans::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateChans*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnCorrCoef::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnCorrCoef::Class_Name()
{
   return "TSnCorrCoef";
}

//______________________________________________________________________________
const char *TSnCorrCoef::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrCoef*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnCorrCoef::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrCoef*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnCorrCoef::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrCoef*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnCorrCoef::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrCoef*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnCorrelateWvs::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnCorrelateWvs::Class_Name()
{
   return "TSnCorrelateWvs";
}

//______________________________________________________________________________
const char *TSnCorrelateWvs::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWvs*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnCorrelateWvs::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWvs*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnCorrelateWvs::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWvs*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnCorrelateWvs::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWvs*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnClust::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnClust::Class_Name()
{
   return "TSnClust";
}

//______________________________________________________________________________
const char *TSnClust::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnClust*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnClust::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnClust*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnClust::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnClust*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnClust::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnClust*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnCorrelateWaves::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnCorrelateWaves::Class_Name()
{
   return "TSnCorrelateWaves";
}

//______________________________________________________________________________
const char *TSnCorrelateWaves::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWaves*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnCorrelateWaves::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWaves*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnCorrelateWaves::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWaves*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnCorrelateWaves::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWaves*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnClusterTimes::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnClusterTimes::Class_Name()
{
   return "TSnClusterTimes";
}

//______________________________________________________________________________
const char *TSnClusterTimes::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnClusterTimes*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnClusterTimes::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnClusterTimes*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnClusterTimes::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnClusterTimes*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnClusterTimes::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnClusterTimes*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnCluster::Class_Name()
{
   return "TSnCluster";
}

//______________________________________________________________________________
const char *TSnCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCluster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnCorrelateWavesMod::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnCorrelateWavesMod::Class_Name()
{
   return "TSnCorrelateWavesMod";
}

//______________________________________________________________________________
const char *TSnCorrelateWavesMod::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWavesMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnCorrelateWavesMod::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWavesMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnCorrelateWavesMod::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWavesMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnCorrelateWavesMod::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCorrelateWavesMod*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnSelEvtsOnCC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnSelEvtsOnCC::Class_Name()
{
   return "TSnSelEvtsOnCC";
}

//______________________________________________________________________________
const char *TSnSelEvtsOnCC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSelEvtsOnCC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnSelEvtsOnCC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSelEvtsOnCC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnSelEvtsOnCC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSelEvtsOnCC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnSelEvtsOnCC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSelEvtsOnCC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnRunEvtOut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnRunEvtOut::Class_Name()
{
   return "TSnRunEvtOut";
}

//______________________________________________________________________________
const char *TSnRunEvtOut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRunEvtOut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnRunEvtOut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnRunEvtOut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnRunEvtOut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRunEvtOut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnRunEvtOut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnRunEvtOut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnPlotCCMod::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnPlotCCMod::Class_Name()
{
   return "TSnPlotCCMod";
}

//______________________________________________________________________________
const char *TSnPlotCCMod::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotCCMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnPlotCCMod::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotCCMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnPlotCCMod::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotCCMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnPlotCCMod::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotCCMod*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnPlotCorrelations::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnPlotCorrelations::Class_Name()
{
   return "TSnPlotCorrelations";
}

//______________________________________________________________________________
const char *TSnPlotCorrelations::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotCorrelations*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnPlotCorrelations::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotCorrelations*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnPlotCorrelations::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotCorrelations*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnPlotCorrelations::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotCorrelations*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnNumHighFFTBins::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnNumHighFFTBins::Class_Name()
{
   return "TSnNumHighFFTBins";
}

//______________________________________________________________________________
const char *TSnNumHighFFTBins::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnNumHighFFTBins*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnNumHighFFTBins::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnNumHighFFTBins*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnNumHighFFTBins::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnNumHighFFTBins*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnNumHighFFTBins::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnNumHighFFTBins*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnSelEvtsOnHighFFTBins::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnSelEvtsOnHighFFTBins::Class_Name()
{
   return "TSnSelEvtsOnHighFFTBins";
}

//______________________________________________________________________________
const char *TSnSelEvtsOnHighFFTBins::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSelEvtsOnHighFFTBins*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnSelEvtsOnHighFFTBins::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSelEvtsOnHighFFTBins*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnSelEvtsOnHighFFTBins::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSelEvtsOnHighFFTBins*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnSelEvtsOnHighFFTBins::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSelEvtsOnHighFFTBins*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnCountEventsMod::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnCountEventsMod::Class_Name()
{
   return "TSnCountEventsMod";
}

//______________________________________________________________________________
const char *TSnCountEventsMod::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCountEventsMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnCountEventsMod::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnCountEventsMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnCountEventsMod::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCountEventsMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnCountEventsMod::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnCountEventsMod*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSnCorrelateChans::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnCorrelateChans.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnCorrelateChans::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnCorrelateChans::Class(),this);
   }
}

//______________________________________________________________________________
void TSnCorrelateChans::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnCorrelateChans.
      TClass *R__cl = ::TSnCorrelateChans::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeta", &fMeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdr", &fHdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCC", &hCC);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnCorrelateChans(void *p) {
      return  p ? new(p) ::TSnCorrelateChans : new ::TSnCorrelateChans;
   }
   static void *newArray_TSnCorrelateChans(Long_t nElements, void *p) {
      return p ? new(p) ::TSnCorrelateChans[nElements] : new ::TSnCorrelateChans[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnCorrelateChans(void *p) {
      delete ((::TSnCorrelateChans*)p);
   }
   static void deleteArray_TSnCorrelateChans(void *p) {
      delete [] ((::TSnCorrelateChans*)p);
   }
   static void destruct_TSnCorrelateChans(void *p) {
      typedef ::TSnCorrelateChans current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnCorrelateChans

//______________________________________________________________________________
void TSnCorrelateWvs::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnCorrelateWvs.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnCorrelateWvs::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnCorrelateWvs::Class(),this);
   }
}

//______________________________________________________________________________
void TSnCorrelateWvs::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnCorrelateWvs.
      TClass *R__cl = ::TSnCorrelateWvs::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeta", &fMeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdr", &fHdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPwr", &fPwr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWind", &fWind);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFFT", &fFFT);
      R__insp.InspectMember(fFFT, "fFFT.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wvtp", (void*)&wvtp);
      R__insp.InspectMember("vector<Float_t>", (void*)&wvtp, "wvtp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCC", &fCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCC", &hCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPrCC", &hPrCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hpcNS", &hpcNS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hpcEW", &hpcEW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCCAvg", &hCCAvg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVvsCC", &hVvsCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWndvsCC", &hWndvsCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPwrvsCC", &hPwrvsCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPwrvsWnd", &hPwrvsWnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPwr", &hPwr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClust", &fClust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hAvgCCvT", &hAvgCCvT);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnCorrelateWvs(void *p) {
      return  p ? new(p) ::TSnCorrelateWvs : new ::TSnCorrelateWvs;
   }
   static void *newArray_TSnCorrelateWvs(Long_t nElements, void *p) {
      return p ? new(p) ::TSnCorrelateWvs[nElements] : new ::TSnCorrelateWvs[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnCorrelateWvs(void *p) {
      delete ((::TSnCorrelateWvs*)p);
   }
   static void deleteArray_TSnCorrelateWvs(void *p) {
      delete [] ((::TSnCorrelateWvs*)p);
   }
   static void destruct_TSnCorrelateWvs(void *p) {
      typedef ::TSnCorrelateWvs current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnCorrelateWvs

//______________________________________________________________________________
void TSnCorrCoef::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnCorrCoef.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnCorrCoef::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnCorrCoef::Class(),this);
   }
}

//______________________________________________________________________________
void TSnCorrCoef::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnCorrCoef.
      TClass *R__cl = ::TSnCorrCoef::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "corrcoef", &corrcoef);
      R__insp.InspectMember(corrcoef, "corrcoef.");
      TSnRecoResult::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnCorrCoef(void *p) {
      return  p ? new(p) ::TSnCorrCoef : new ::TSnCorrCoef;
   }
   static void *newArray_TSnCorrCoef(Long_t nElements, void *p) {
      return p ? new(p) ::TSnCorrCoef[nElements] : new ::TSnCorrCoef[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnCorrCoef(void *p) {
      delete ((::TSnCorrCoef*)p);
   }
   static void deleteArray_TSnCorrCoef(void *p) {
      delete [] ((::TSnCorrCoef*)p);
   }
   static void destruct_TSnCorrCoef(void *p) {
      typedef ::TSnCorrCoef current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnCorrCoef

//______________________________________________________________________________
void TSnClust::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnClust.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnClust::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnClust::Class(),this);
   }
}

//______________________________________________________________________________
void TSnClust::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnClust.
      TClass *R__cl = ::TSnClust::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cluster", &cluster);
      R__insp.InspectMember(cluster, "cluster.");
      TSnRecoResult::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnClust(void *p) {
      return  p ? new(p) ::TSnClust : new ::TSnClust;
   }
   static void *newArray_TSnClust(Long_t nElements, void *p) {
      return p ? new(p) ::TSnClust[nElements] : new ::TSnClust[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnClust(void *p) {
      delete ((::TSnClust*)p);
   }
   static void deleteArray_TSnClust(void *p) {
      delete [] ((::TSnClust*)p);
   }
   static void destruct_TSnClust(void *p) {
      typedef ::TSnClust current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnClust

//______________________________________________________________________________
void TSnCorrelateWaves::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnCorrelateWaves.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnCorrelateWaves::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnCorrelateWaves::Class(),this);
   }
}

//______________________________________________________________________________
void TSnCorrelateWaves::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnCorrelateWaves.
      TClass *R__cl = ::TSnCorrelateWaves::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCCWave[4]", fCCWave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCCWaveInv[4]", fCCWaveInv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpwave", (void*)&tpwave);
      R__insp.InspectMember("vector<Float_t>", (void*)&tpwave, "tpwave.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnCorrelateWaves(void *p) {
      return  p ? new(p) ::TSnCorrelateWaves : new ::TSnCorrelateWaves;
   }
   static void *newArray_TSnCorrelateWaves(Long_t nElements, void *p) {
      return p ? new(p) ::TSnCorrelateWaves[nElements] : new ::TSnCorrelateWaves[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnCorrelateWaves(void *p) {
      delete ((::TSnCorrelateWaves*)p);
   }
   static void deleteArray_TSnCorrelateWaves(void *p) {
      delete [] ((::TSnCorrelateWaves*)p);
   }
   static void destruct_TSnCorrelateWaves(void *p) {
      typedef ::TSnCorrelateWaves current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnCorrelateWaves

//______________________________________________________________________________
void TSnCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnCluster::Class(),this);
   }
}

//______________________________________________________________________________
void TSnCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnCluster.
      TClass *R__cl = ::TSnCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdr", &fHdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxtmsep", &maxtmsep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtTmPassCut", (void*)&evtTmPassCut);
      R__insp.InspectMember("vector<Double_t>", (void*)&evtTmPassCut, "evtTmPassCut.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClustTimes", &fClustTimes);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnCluster(void *p) {
      return  p ? new(p) ::TSnCluster : new ::TSnCluster;
   }
   static void *newArray_TSnCluster(Long_t nElements, void *p) {
      return p ? new(p) ::TSnCluster[nElements] : new ::TSnCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnCluster(void *p) {
      delete ((::TSnCluster*)p);
   }
   static void deleteArray_TSnCluster(void *p) {
      delete [] ((::TSnCluster*)p);
   }
   static void destruct_TSnCluster(void *p) {
      typedef ::TSnCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnCluster

//______________________________________________________________________________
void TSnCorrelateWavesMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnCorrelateWavesMod.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnCorrelateWavesMod::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnCorrelateWavesMod::Class(),this);
   }
}

//______________________________________________________________________________
void TSnCorrelateWavesMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnCorrelateWavesMod.
      TClass *R__cl = ::TSnCorrelateWavesMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tmpltwv", (void*)&tmpltwv);
      R__insp.InspectMember("vector<Float_t>", (void*)&tmpltwv, "tmpltwv.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCC", &hCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCCInv", &hCCInv);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnCorrelateWavesMod(void *p) {
      return  p ? new(p) ::TSnCorrelateWavesMod : new ::TSnCorrelateWavesMod;
   }
   static void *newArray_TSnCorrelateWavesMod(Long_t nElements, void *p) {
      return p ? new(p) ::TSnCorrelateWavesMod[nElements] : new ::TSnCorrelateWavesMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnCorrelateWavesMod(void *p) {
      delete ((::TSnCorrelateWavesMod*)p);
   }
   static void deleteArray_TSnCorrelateWavesMod(void *p) {
      delete [] ((::TSnCorrelateWavesMod*)p);
   }
   static void destruct_TSnCorrelateWavesMod(void *p) {
      typedef ::TSnCorrelateWavesMod current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnCorrelateWavesMod

//______________________________________________________________________________
void TSnSelEvtsOnCC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnSelEvtsOnCC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnSelEvtsOnCC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnSelEvtsOnCC::Class(),this);
   }
}

//______________________________________________________________________________
void TSnSelEvtsOnCC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnSelEvtsOnCC.
      TClass *R__cl = ::TSnSelEvtsOnCC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tmpltwv", (void*)&tmpltwv);
      R__insp.InspectMember("vector<Float_t>", (void*)&tmpltwv, "tmpltwv.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdr", &fHdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCCvT", &hCCvT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLrgCCvT", &hLrgCCvT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCC", &hCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeta", &fMeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCCbyCh", &hCCbyCh);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnSelEvtsOnCC(void *p) {
      return  p ? new(p) ::TSnSelEvtsOnCC : new ::TSnSelEvtsOnCC;
   }
   static void *newArray_TSnSelEvtsOnCC(Long_t nElements, void *p) {
      return p ? new(p) ::TSnSelEvtsOnCC[nElements] : new ::TSnSelEvtsOnCC[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnSelEvtsOnCC(void *p) {
      delete ((::TSnSelEvtsOnCC*)p);
   }
   static void deleteArray_TSnSelEvtsOnCC(void *p) {
      delete [] ((::TSnSelEvtsOnCC*)p);
   }
   static void destruct_TSnSelEvtsOnCC(void *p) {
      typedef ::TSnSelEvtsOnCC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnSelEvtsOnCC

//______________________________________________________________________________
void TSnClusterTimes::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnClusterTimes.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnClusterTimes::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnClusterTimes::Class(),this);
   }
}

//______________________________________________________________________________
void TSnClusterTimes::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnClusterTimes.
      TClass *R__cl = ::TSnClusterTimes::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimes", (void*)&fTimes);
      R__insp.InspectMember("vector<std::pair<Double_t,Double_t> >", (void*)&fTimes, "fTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTmSep", &fMaxTmSep);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnClusterTimes(void *p) {
      return  p ? new(p) ::TSnClusterTimes : new ::TSnClusterTimes;
   }
   static void *newArray_TSnClusterTimes(Long_t nElements, void *p) {
      return p ? new(p) ::TSnClusterTimes[nElements] : new ::TSnClusterTimes[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnClusterTimes(void *p) {
      delete ((::TSnClusterTimes*)p);
   }
   static void deleteArray_TSnClusterTimes(void *p) {
      delete [] ((::TSnClusterTimes*)p);
   }
   static void destruct_TSnClusterTimes(void *p) {
      typedef ::TSnClusterTimes current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnClusterTimes

//______________________________________________________________________________
void TSnPlotCCMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnPlotCCMod.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnPlotCCMod::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnPlotCCMod::Class(),this);
   }
}

//______________________________________________________________________________
void TSnPlotCCMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnPlotCCMod.
      TClass *R__cl = ::TSnPlotCCMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdr", &fHdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hAvgCCvT", &hAvgCCvT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeta", &fMeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvtIdOut", &fEvtIdOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCC", &hCC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFFTPeak", &hFFTPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNHighPks", &hNHighPks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNHighPksAllCh", &hNHighPksAllCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcc", &hcc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hccinv", &hccinv);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnPlotCCMod(void *p) {
      return  p ? new(p) ::TSnPlotCCMod : new ::TSnPlotCCMod;
   }
   static void *newArray_TSnPlotCCMod(Long_t nElements, void *p) {
      return p ? new(p) ::TSnPlotCCMod[nElements] : new ::TSnPlotCCMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnPlotCCMod(void *p) {
      delete ((::TSnPlotCCMod*)p);
   }
   static void deleteArray_TSnPlotCCMod(void *p) {
      delete [] ((::TSnPlotCCMod*)p);
   }
   static void destruct_TSnPlotCCMod(void *p) {
      typedef ::TSnPlotCCMod current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnPlotCCMod

//______________________________________________________________________________
void TSnRunEvtOut::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnRunEvtOut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnRunEvtOut::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnRunEvtOut::Class(),this);
   }
}

//______________________________________________________________________________
void TSnRunEvtOut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnRunEvtOut.
      TClass *R__cl = ::TSnRunEvtOut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunEvt", (void*)&fRunEvt);
      R__insp.InspectMember("vector<std::pair<UInt_t,UInt_t> >", (void*)&fRunEvt, "fRunEvt.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnRunEvtOut(void *p) {
      return  p ? new(p) ::TSnRunEvtOut : new ::TSnRunEvtOut;
   }
   static void *newArray_TSnRunEvtOut(Long_t nElements, void *p) {
      return p ? new(p) ::TSnRunEvtOut[nElements] : new ::TSnRunEvtOut[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnRunEvtOut(void *p) {
      delete ((::TSnRunEvtOut*)p);
   }
   static void deleteArray_TSnRunEvtOut(void *p) {
      delete [] ((::TSnRunEvtOut*)p);
   }
   static void destruct_TSnRunEvtOut(void *p) {
      typedef ::TSnRunEvtOut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnRunEvtOut

//______________________________________________________________________________
void TSnPlotCorrelations::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnPlotCorrelations.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnPlotCorrelations::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnPlotCorrelations::Class(),this);
   }
}

//______________________________________________________________________________
void TSnPlotCorrelations::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnPlotCorrelations.
      TClass *R__cl = ::TSnPlotCorrelations::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCC", &hCC);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnPlotCorrelations(void *p) {
      return  p ? new(p) ::TSnPlotCorrelations : new ::TSnPlotCorrelations;
   }
   static void *newArray_TSnPlotCorrelations(Long_t nElements, void *p) {
      return p ? new(p) ::TSnPlotCorrelations[nElements] : new ::TSnPlotCorrelations[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnPlotCorrelations(void *p) {
      delete ((::TSnPlotCorrelations*)p);
   }
   static void deleteArray_TSnPlotCorrelations(void *p) {
      delete [] ((::TSnPlotCorrelations*)p);
   }
   static void destruct_TSnPlotCorrelations(void *p) {
      typedef ::TSnPlotCorrelations current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnPlotCorrelations

//______________________________________________________________________________
void TSnNumHighFFTBins::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnNumHighFFTBins.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnNumHighFFTBins::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnNumHighFFTBins::Class(),this);
   }
}

//______________________________________________________________________________
void TSnNumHighFFTBins::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnNumHighFFTBins.
      TClass *R__cl = ::TSnNumHighFFTBins::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFFT", &fFFT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHighBins[4]", nHighBins);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnNumHighFFTBins(void *p) {
      return  p ? new(p) ::TSnNumHighFFTBins : new ::TSnNumHighFFTBins;
   }
   static void *newArray_TSnNumHighFFTBins(Long_t nElements, void *p) {
      return p ? new(p) ::TSnNumHighFFTBins[nElements] : new ::TSnNumHighFFTBins[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnNumHighFFTBins(void *p) {
      delete ((::TSnNumHighFFTBins*)p);
   }
   static void deleteArray_TSnNumHighFFTBins(void *p) {
      delete [] ((::TSnNumHighFFTBins*)p);
   }
   static void destruct_TSnNumHighFFTBins(void *p) {
      typedef ::TSnNumHighFFTBins current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnNumHighFFTBins

//______________________________________________________________________________
void TSnSelEvtsOnHighFFTBins::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnSelEvtsOnHighFFTBins.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnSelEvtsOnHighFFTBins::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnSelEvtsOnHighFFTBins::Class(),this);
   }
}

//______________________________________________________________________________
void TSnSelEvtsOnHighFFTBins::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnSelEvtsOnHighFFTBins.
      TClass *R__cl = ::TSnSelEvtsOnHighFFTBins::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdr", &fHdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeta", &fMeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNHighPks", &hNHighPks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNHighPksAllCh", &hNHighPksAllCh);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnSelEvtsOnHighFFTBins(void *p) {
      return  p ? new(p) ::TSnSelEvtsOnHighFFTBins : new ::TSnSelEvtsOnHighFFTBins;
   }
   static void *newArray_TSnSelEvtsOnHighFFTBins(Long_t nElements, void *p) {
      return p ? new(p) ::TSnSelEvtsOnHighFFTBins[nElements] : new ::TSnSelEvtsOnHighFFTBins[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnSelEvtsOnHighFFTBins(void *p) {
      delete ((::TSnSelEvtsOnHighFFTBins*)p);
   }
   static void deleteArray_TSnSelEvtsOnHighFFTBins(void *p) {
      delete [] ((::TSnSelEvtsOnHighFFTBins*)p);
   }
   static void destruct_TSnSelEvtsOnHighFFTBins(void *p) {
      typedef ::TSnSelEvtsOnHighFFTBins current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnSelEvtsOnHighFFTBins

//______________________________________________________________________________
void TSnCountEventsMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnCountEventsMod.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnCountEventsMod::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnCountEventsMod::Class(),this);
   }
}

//______________________________________________________________________________
void TSnCountEventsMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnCountEventsMod.
      TClass *R__cl = ::TSnCountEventsMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumEvts", &fNumEvts);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnCountEventsMod(void *p) {
      return  p ? new(p) ::TSnCountEventsMod : new ::TSnCountEventsMod;
   }
   static void *newArray_TSnCountEventsMod(Long_t nElements, void *p) {
      return p ? new(p) ::TSnCountEventsMod[nElements] : new ::TSnCountEventsMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnCountEventsMod(void *p) {
      delete ((::TSnCountEventsMod*)p);
   }
   static void deleteArray_TSnCountEventsMod(void *p) {
      delete [] ((::TSnCountEventsMod*)p);
   }
   static void destruct_TSnCountEventsMod(void *p) {
      typedef ::TSnCountEventsMod current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnCountEventsMod

//______________________________________________________________________________
namespace ROOT {
   void pairlEunsignedsPintcOunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<unsigned int,unsigned int>.
      typedef ::ROOT::Shadow::pairlEunsignedsPintcOunsignedsPintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<unsigned int,unsigned int>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<unsigned int,unsigned int> : new pair<unsigned int,unsigned int>;
   }
   static void *newArray_pairlEunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<unsigned int,unsigned int>[nElements] : new pair<unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((pair<unsigned int,unsigned int>*)p);
   }
   static void deleteArray_pairlEunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((pair<unsigned int,unsigned int>*)p);
   }
   static void destruct_pairlEunsignedsPintcOunsignedsPintgR(void *p) {
      typedef pair<unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<unsigned int,unsigned int>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEpairlEdoublecOdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEdoublecOdoublegRsPgR_Dictionary();
   static void *new_vectorlEpairlEdoublecOdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEdoublecOdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEdoublecOdoublegRsPgR(void *p);
   static void deleteArray_vectorlEpairlEdoublecOdoublegRsPgR(void *p);
   static void destruct_vectorlEpairlEdoublecOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<double,double> >*)
   {
      vector<pair<double,double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<double,double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<double,double> >", -2, "prec_stl/vector", 49,
                  typeid(vector<pair<double,double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEdoublecOdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<double,double> >) );
      instance.SetNew(&new_vectorlEpairlEdoublecOdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEdoublecOdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEdoublecOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEdoublecOdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEdoublecOdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<double,double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<double,double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEdoublecOdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<double,double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEdoublecOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<double,double> > : new vector<pair<double,double> >;
   }
   static void *newArray_vectorlEpairlEdoublecOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<double,double> >[nElements] : new vector<pair<double,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEdoublecOdoublegRsPgR(void *p) {
      delete ((vector<pair<double,double> >*)p);
   }
   static void deleteArray_vectorlEpairlEdoublecOdoublegRsPgR(void *p) {
      delete [] ((vector<pair<double,double> >*)p);
   }
   static void destruct_vectorlEpairlEdoublecOdoublegRsPgR(void *p) {
      typedef vector<pair<double,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<double,double> >

namespace ROOT {
   void vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void *new_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<unsigned int,unsigned int> >*)
   {
      vector<pair<unsigned int,unsigned int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<unsigned int,unsigned int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<unsigned int,unsigned int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<pair<unsigned int,unsigned int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<unsigned int,unsigned int> >) );
      instance.SetNew(&new_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<unsigned int,unsigned int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<unsigned int,unsigned int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<unsigned int,unsigned int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<unsigned int,unsigned int> > : new vector<pair<unsigned int,unsigned int> >;
   }
   static void *newArray_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<unsigned int,unsigned int> >[nElements] : new vector<pair<unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((vector<pair<unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((vector<pair<unsigned int,unsigned int> >*)p);
   }
   static void destruct_vectorlEpairlEunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef vector<pair<unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<unsigned int,unsigned int> >

/********************************************************
* ana/G__ana.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__ana();

extern "C" void G__set_cpp_environmentG__ana() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("ana/TSnCorrelateChans.h");
  G__add_compiledheader("ana/TSnCorrelateWvs.h");
  G__add_compiledheader("ana/TSnCorrelateWaves.h");
  G__add_compiledheader("ana/TSnCluster.h");
  G__add_compiledheader("ana/TSnCorrelateWavesMod.h");
  G__add_compiledheader("ana/TSnSelEvtsOnCC.h");
  G__add_compiledheader("ana/TSnPlotCCMod.h");
  G__add_compiledheader("ana/TSnPlotCorrelations.h");
  G__add_compiledheader("ana/TSnNumHighFFTBins.h");
  G__add_compiledheader("ana/TSnSelEvtsOnHighFFTBins.h");
  G__add_compiledheader("ana/TSnCountEventsMod.h");
  G__cpp_reset_tagtableG__ana();
}
#include <new>
extern "C" int G__cpp_dllrevG__ana() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSnCorrelateChans */
static int G__G__ana_492_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateChans* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCorrelateChans[n];
     } else {
       p = new((void*) gvp) TSnCorrelateChans[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCorrelateChans;
     } else {
       p = new((void*) gvp) TSnCorrelateChans;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_492_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateChans* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnCorrelateChans((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnCorrelateChans((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_492_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnCorrelateChans::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_492_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateChans::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_492_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnCorrelateChans::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_492_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnCorrelateChans::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_492_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnCorrelateChans*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_492_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateChans::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_492_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCorrelateChans::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_492_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateChans::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_492_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCorrelateChans::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_492_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnCorrelateChans* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnCorrelateChans(*(TSnCorrelateChans*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnCorrelateChans G__TTSnCorrelateChans;
static int G__G__ana_492_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnCorrelateChans*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnCorrelateChans*) (soff+(sizeof(TSnCorrelateChans)*i)))->~G__TTSnCorrelateChans();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnCorrelateChans*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnCorrelateChans*) (soff))->~G__TTSnCorrelateChans();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_492_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateChans* dest = (TSnCorrelateChans*) G__getstructoffset();
   *dest = *(TSnCorrelateChans*) libp->para[0].ref;
   const TSnCorrelateChans& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnCorrCoef */
static int G__G__ana_499_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrCoef* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCorrCoef[n];
     } else {
       p = new((void*) gvp) TSnCorrCoef[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCorrCoef;
     } else {
       p = new((void*) gvp) TSnCorrCoef;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_499_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrCoef* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnCorrCoef((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnCorrCoef((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_499_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnCorrCoef::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_499_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrCoef::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_499_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnCorrCoef::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_499_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnCorrCoef::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_499_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnCorrCoef*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_499_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrCoef::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_499_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCorrCoef::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_499_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrCoef::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_499_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCorrCoef::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_499_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnCorrCoef* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnCorrCoef(*(TSnCorrCoef*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnCorrCoef G__TTSnCorrCoef;
static int G__G__ana_499_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnCorrCoef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnCorrCoef*) (soff+(sizeof(TSnCorrCoef)*i)))->~G__TTSnCorrCoef();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnCorrCoef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnCorrCoef*) (soff))->~G__TTSnCorrCoef();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_499_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrCoef* dest = (TSnCorrCoef*) G__getstructoffset();
   *dest = *(TSnCorrCoef*) libp->para[0].ref;
   const TSnCorrCoef& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnCorrelateWvs */
static int G__G__ana_500_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateWvs* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCorrelateWvs[n];
     } else {
       p = new((void*) gvp) TSnCorrelateWvs[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCorrelateWvs;
     } else {
       p = new((void*) gvp) TSnCorrelateWvs;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_500_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateWvs* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnCorrelateWvs(
(const Char_t*) G__int(libp->para[0]), *((vector<Float_t>*) G__int(libp->para[1]))
, (const Char_t*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TSnCorrelateWvs(
(const Char_t*) G__int(libp->para[0]), *((vector<Float_t>*) G__int(libp->para[1]))
, (const Char_t*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_500_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnCorrelateWvs::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_500_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateWvs::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_500_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnCorrelateWvs::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_500_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnCorrelateWvs::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_500_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnCorrelateWvs*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_500_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateWvs::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_500_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCorrelateWvs::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_500_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateWvs::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_500_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCorrelateWvs::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_500_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnCorrelateWvs* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnCorrelateWvs(*(TSnCorrelateWvs*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnCorrelateWvs G__TTSnCorrelateWvs;
static int G__G__ana_500_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnCorrelateWvs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnCorrelateWvs*) (soff+(sizeof(TSnCorrelateWvs)*i)))->~G__TTSnCorrelateWvs();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnCorrelateWvs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnCorrelateWvs*) (soff))->~G__TTSnCorrelateWvs();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_500_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateWvs* dest = (TSnCorrelateWvs*) G__getstructoffset();
   *dest = *(TSnCorrelateWvs*) libp->para[0].ref;
   const TSnCorrelateWvs& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnClust */
static int G__G__ana_501_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnClust* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnClust[n];
     } else {
       p = new((void*) gvp) TSnClust[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnClust;
     } else {
       p = new((void*) gvp) TSnClust;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnClust));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_501_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnClust* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnClust((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnClust((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnClust));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_501_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnClust::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_501_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnClust::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_501_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnClust::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_501_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnClust::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_501_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnClust*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_501_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnClust::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_501_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnClust::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_501_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnClust::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_501_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnClust::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_501_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnClust* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnClust(*(TSnClust*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnClust));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnClust G__TTSnClust;
static int G__G__ana_501_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnClust*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnClust*) (soff+(sizeof(TSnClust)*i)))->~G__TTSnClust();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnClust*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnClust*) (soff))->~G__TTSnClust();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_501_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnClust* dest = (TSnClust*) G__getstructoffset();
   *dest = *(TSnClust*) libp->para[0].ref;
   const TSnClust& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnCorrelateWaves */
static int G__G__ana_502_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateWaves* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCorrelateWaves[n];
     } else {
       p = new((void*) gvp) TSnCorrelateWaves[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCorrelateWaves;
     } else {
       p = new((void*) gvp) TSnCorrelateWaves;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateWaves* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnCorrelateWaves(
(const Char_t*) G__int(libp->para[0]), (TSnCalWvData*) G__int(libp->para[1])
, *((vector<Float_t>*) G__int(libp->para[2])));
   } else {
     p = new((void*) gvp) TSnCorrelateWaves(
(const Char_t*) G__int(libp->para[0]), (TSnCalWvData*) G__int(libp->para[1])
, *((vector<Float_t>*) G__int(libp->para[2])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnCorrelateWaves*) G__getstructoffset())->Correlate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSnCorrelateWaves*) G__getstructoffset())->GetCC((const UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSnCorrelateWaves*) G__getstructoffset())->GetCCInv((const UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSnCorrelateWaves*) G__getstructoffset())->GetAvgCC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnCorrelateWaves::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateWaves::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnCorrelateWaves::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnCorrelateWaves::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnCorrelateWaves*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateWaves::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCorrelateWaves::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateWaves::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_502_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCorrelateWaves::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_502_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnCorrelateWaves* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnCorrelateWaves(*(TSnCorrelateWaves*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnCorrelateWaves G__TTSnCorrelateWaves;
static int G__G__ana_502_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnCorrelateWaves*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnCorrelateWaves*) (soff+(sizeof(TSnCorrelateWaves)*i)))->~G__TTSnCorrelateWaves();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnCorrelateWaves*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnCorrelateWaves*) (soff))->~G__TTSnCorrelateWaves();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_502_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateWaves* dest = (TSnCorrelateWaves*) G__getstructoffset();
   *dest = *(TSnCorrelateWaves*) libp->para[0].ref;
   const TSnCorrelateWaves& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnClusterTimes */
static int G__G__ana_503_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnClusterTimes* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnClusterTimes[n];
     } else {
       p = new((void*) gvp) TSnClusterTimes[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnClusterTimes;
     } else {
       p = new((void*) gvp) TSnClusterTimes;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnClusterTimes));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnClusterTimes*) G__getstructoffset())->Set(*((pair<Double_t,Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<Double_t,Double_t> >& obj = ((TSnClusterTimes*) G__getstructoffset())->Get();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSnClusterTimes*) G__getstructoffset())->GetStartTm((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSnClusterTimes*) G__getstructoffset())->GetStopTm((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSnClusterTimes*) G__getstructoffset())->GetMaxTmSep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnClusterTimes*) G__getstructoffset())->SetMaxTmSep((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnClusterTimes::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnClusterTimes::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnClusterTimes::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnClusterTimes::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnClusterTimes*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnClusterTimes::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnClusterTimes::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnClusterTimes::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_503_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnClusterTimes::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_503_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnClusterTimes* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnClusterTimes(*(TSnClusterTimes*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnClusterTimes));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnClusterTimes G__TTSnClusterTimes;
static int G__G__ana_503_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnClusterTimes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnClusterTimes*) (soff+(sizeof(TSnClusterTimes)*i)))->~G__TTSnClusterTimes();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnClusterTimes*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnClusterTimes*) (soff))->~G__TTSnClusterTimes();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_503_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnClusterTimes* dest = (TSnClusterTimes*) G__getstructoffset();
   *dest = *(TSnClusterTimes*) libp->para[0].ref;
   const TSnClusterTimes& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnCluster */
static int G__G__ana_508_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCluster[n];
     } else {
       p = new((void*) gvp) TSnCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCluster;
     } else {
       p = new((void*) gvp) TSnCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_508_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnCluster((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) TSnCluster((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_508_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_508_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_508_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_508_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_508_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_508_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_508_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_508_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_508_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_508_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnCluster(*(TSnCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnCluster G__TTSnCluster;
static int G__G__ana_508_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnCluster*) (soff+(sizeof(TSnCluster)*i)))->~G__TTSnCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnCluster*) (soff))->~G__TTSnCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_508_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCluster* dest = (TSnCluster*) G__getstructoffset();
   *dest = *(TSnCluster*) libp->para[0].ref;
   const TSnCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnCorrelateWavesMod */
static int G__G__ana_509_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateWavesMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCorrelateWavesMod[n];
     } else {
       p = new((void*) gvp) TSnCorrelateWavesMod[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCorrelateWavesMod;
     } else {
       p = new((void*) gvp) TSnCorrelateWavesMod;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_509_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateWavesMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnCorrelateWavesMod((const Char_t*) G__int(libp->para[0]), *((vector<Float_t>*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) TSnCorrelateWavesMod((const Char_t*) G__int(libp->para[0]), *((vector<Float_t>*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_509_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnCorrelateWavesMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_509_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateWavesMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_509_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnCorrelateWavesMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_509_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnCorrelateWavesMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_509_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnCorrelateWavesMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_509_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateWavesMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_509_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCorrelateWavesMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_509_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCorrelateWavesMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_509_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCorrelateWavesMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_509_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnCorrelateWavesMod* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnCorrelateWavesMod(*(TSnCorrelateWavesMod*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnCorrelateWavesMod G__TTSnCorrelateWavesMod;
static int G__G__ana_509_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnCorrelateWavesMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnCorrelateWavesMod*) (soff+(sizeof(TSnCorrelateWavesMod)*i)))->~G__TTSnCorrelateWavesMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnCorrelateWavesMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnCorrelateWavesMod*) (soff))->~G__TTSnCorrelateWavesMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_509_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCorrelateWavesMod* dest = (TSnCorrelateWavesMod*) G__getstructoffset();
   *dest = *(TSnCorrelateWavesMod*) libp->para[0].ref;
   const TSnCorrelateWavesMod& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnSelEvtsOnCC */
static int G__G__ana_510_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSelEvtsOnCC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSelEvtsOnCC[n];
     } else {
       p = new((void*) gvp) TSnSelEvtsOnCC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSelEvtsOnCC;
     } else {
       p = new((void*) gvp) TSnSelEvtsOnCC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_510_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSelEvtsOnCC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnSelEvtsOnCC((const Char_t*) G__int(libp->para[0]), *((vector<Float_t>*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) TSnSelEvtsOnCC((const Char_t*) G__int(libp->para[0]), *((vector<Float_t>*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_510_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSelEvtsOnCC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_510_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSelEvtsOnCC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_510_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnSelEvtsOnCC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_510_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSelEvtsOnCC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_510_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSelEvtsOnCC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_510_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSelEvtsOnCC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_510_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSelEvtsOnCC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_510_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSelEvtsOnCC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_510_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSelEvtsOnCC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_510_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnSelEvtsOnCC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnSelEvtsOnCC(*(TSnSelEvtsOnCC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnSelEvtsOnCC G__TTSnSelEvtsOnCC;
static int G__G__ana_510_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnSelEvtsOnCC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnSelEvtsOnCC*) (soff+(sizeof(TSnSelEvtsOnCC)*i)))->~G__TTSnSelEvtsOnCC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnSelEvtsOnCC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnSelEvtsOnCC*) (soff))->~G__TTSnSelEvtsOnCC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_510_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSelEvtsOnCC* dest = (TSnSelEvtsOnCC*) G__getstructoffset();
   *dest = *(TSnSelEvtsOnCC*) libp->para[0].ref;
   const TSnSelEvtsOnCC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnRunEvtOut */
static int G__G__ana_573_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRunEvtOut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRunEvtOut[n];
     } else {
       p = new((void*) gvp) TSnRunEvtOut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnRunEvtOut;
     } else {
       p = new((void*) gvp) TSnRunEvtOut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnRunEvtOut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRunEvtOut*) G__getstructoffset())->Set(*((pair<UInt_t,UInt_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<UInt_t,UInt_t> >& obj = ((TSnRunEvtOut*) G__getstructoffset())->Get();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSnRunEvtOut*) G__getstructoffset())->GetRunNum((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSnRunEvtOut*) G__getstructoffset())->GetEvtNum((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSnRunEvtOut*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnRunEvtOut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRunEvtOut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnRunEvtOut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnRunEvtOut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnRunEvtOut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRunEvtOut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRunEvtOut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnRunEvtOut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_573_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnRunEvtOut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_573_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnRunEvtOut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnRunEvtOut(*(TSnRunEvtOut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnRunEvtOut));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnRunEvtOut G__TTSnRunEvtOut;
static int G__G__ana_573_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnRunEvtOut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnRunEvtOut*) (soff+(sizeof(TSnRunEvtOut)*i)))->~G__TTSnRunEvtOut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnRunEvtOut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnRunEvtOut*) (soff))->~G__TTSnRunEvtOut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_573_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnRunEvtOut* dest = (TSnRunEvtOut*) G__getstructoffset();
   *dest = *(TSnRunEvtOut*) libp->para[0].ref;
   const TSnRunEvtOut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<unsigned int,unsigned int> */
static int G__G__ana_574_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<unsigned int,unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<unsigned int,unsigned int>[n];
     } else {
       p = new((void*) gvp) pair<unsigned int,unsigned int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<unsigned int,unsigned int>;
     } else {
       p = new((void*) gvp) pair<unsigned int,unsigned int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_574_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<unsigned int,unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<unsigned int,unsigned int>(*(unsigned int*) G__UIntref(&libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
   } else {
     p = new((void*) gvp) pair<unsigned int,unsigned int>(*(unsigned int*) G__UIntref(&libp->para[0]), *(unsigned int*) G__UIntref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_574_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<unsigned int,unsigned int>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<unsigned int,unsigned int>(*(pair<unsigned int,unsigned int>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<unsigned int,unsigned int> G__TpairlEunsignedsPintcOunsignedsPintgR;
static int G__G__ana_574_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<unsigned int,unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<unsigned int,unsigned int>*) (soff+(sizeof(pair<unsigned int,unsigned int>)*i)))->~G__TpairlEunsignedsPintcOunsignedsPintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<unsigned int,unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<unsigned int,unsigned int>*) (soff))->~G__TpairlEunsignedsPintcOunsignedsPintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > > */
static int G__G__ana_576_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reference obj = ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->at((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_reference obj = ((const vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->at((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator* pobj;
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator xobj = ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->begin();
         pobj = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator* pobj;
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator xobj = ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->end();
         pobj = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reverse_iterator* pobj;
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reverse_iterator xobj = ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->rbegin();
         pobj = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reverse_iterator* pobj;
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reverse_iterator xobj = ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->rend();
         pobj = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->resize((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->resize((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]), *((pair<unsigned int,unsigned int>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reference obj = ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->operator[]((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_reference obj = ((const vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->operator[]((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >[n];
     } else {
       p = new((void*) gvp) vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >;
     } else {
       p = new((void*) gvp) vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]), *(pair<unsigned int,unsigned int>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]), *(pair<unsigned int,unsigned int>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >(*(vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >(*(vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >(*((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >(*((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >& obj = ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->operator=(*(vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->reserve((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<unsigned int,unsigned int>& obj = ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<unsigned int,unsigned int>& obj = ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->push_back(*(pair<unsigned int,unsigned int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->swap(*(vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator* pobj;
         vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator xobj = ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->insert(*((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])), *(pair<unsigned int,unsigned int>*) libp->para[1].ref);
         pobj = new vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->insert(*((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])), *((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_iterator*) G__int(libp->para[1]))
, *((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->insert(*((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])), (vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type) G__int(libp->para[1])
, *(pair<unsigned int,unsigned int>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->erase(*((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->erase(*((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator*) G__int(libp->para[0])), *((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_576_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > > G__TvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR;
static int G__G__ana_576_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) (soff+(sizeof(vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >)*i)))->~G__TvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*) (soff))->~G__TvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnPlotCCMod */
static int G__G__ana_579_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnPlotCCMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnPlotCCMod[n];
     } else {
       p = new((void*) gvp) TSnPlotCCMod[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnPlotCCMod;
     } else {
       p = new((void*) gvp) TSnPlotCCMod;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_579_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnPlotCCMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnPlotCCMod((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnPlotCCMod((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_579_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnPlotCCMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_579_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnPlotCCMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_579_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnPlotCCMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_579_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnPlotCCMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_579_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotCCMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_579_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnPlotCCMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_579_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnPlotCCMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_579_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnPlotCCMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_579_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnPlotCCMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_579_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnPlotCCMod* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnPlotCCMod(*(TSnPlotCCMod*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnPlotCCMod G__TTSnPlotCCMod;
static int G__G__ana_579_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnPlotCCMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnPlotCCMod*) (soff+(sizeof(TSnPlotCCMod)*i)))->~G__TTSnPlotCCMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnPlotCCMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnPlotCCMod*) (soff))->~G__TTSnPlotCCMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_579_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnPlotCCMod* dest = (TSnPlotCCMod*) G__getstructoffset();
   *dest = *(TSnPlotCCMod*) libp->para[0].ref;
   const TSnPlotCCMod& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnPlotCorrelations */
static int G__G__ana_580_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnPlotCorrelations* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnPlotCorrelations[n];
     } else {
       p = new((void*) gvp) TSnPlotCorrelations[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnPlotCorrelations;
     } else {
       p = new((void*) gvp) TSnPlotCorrelations;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_580_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnPlotCorrelations* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnPlotCorrelations((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnPlotCorrelations((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_580_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnPlotCorrelations::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_580_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnPlotCorrelations::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_580_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnPlotCorrelations::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_580_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnPlotCorrelations::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_580_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotCorrelations*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_580_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnPlotCorrelations::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_580_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnPlotCorrelations::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_580_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnPlotCorrelations::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_580_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnPlotCorrelations::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_580_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnPlotCorrelations* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnPlotCorrelations(*(TSnPlotCorrelations*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnPlotCorrelations G__TTSnPlotCorrelations;
static int G__G__ana_580_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnPlotCorrelations*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnPlotCorrelations*) (soff+(sizeof(TSnPlotCorrelations)*i)))->~G__TTSnPlotCorrelations();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnPlotCorrelations*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnPlotCorrelations*) (soff))->~G__TTSnPlotCorrelations();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_580_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnPlotCorrelations* dest = (TSnPlotCorrelations*) G__getstructoffset();
   *dest = *(TSnPlotCorrelations*) libp->para[0].ref;
   const TSnPlotCorrelations& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnNumHighFFTBins */
static int G__G__ana_582_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnNumHighFFTBins* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnNumHighFFTBins[n];
     } else {
       p = new((void*) gvp) TSnNumHighFFTBins[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnNumHighFFTBins;
     } else {
       p = new((void*) gvp) TSnNumHighFFTBins;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnNumHighFFTBins* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnNumHighFFTBins((const Char_t*) G__int(libp->para[0]), (TSnCalFFTData*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSnNumHighFFTBins((const Char_t*) G__int(libp->para[0]), (TSnCalFFTData*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSnNumHighFFTBins*) G__getstructoffset())->GetNumHighBins((UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnNumHighFFTBins*) G__getstructoffset())->Calculate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnNumHighFFTBins::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnNumHighFFTBins::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnNumHighFFTBins::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnNumHighFFTBins::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnNumHighFFTBins*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnNumHighFFTBins::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnNumHighFFTBins::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnNumHighFFTBins::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_582_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnNumHighFFTBins::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_582_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnNumHighFFTBins* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnNumHighFFTBins(*(TSnNumHighFFTBins*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnNumHighFFTBins G__TTSnNumHighFFTBins;
static int G__G__ana_582_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnNumHighFFTBins*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnNumHighFFTBins*) (soff+(sizeof(TSnNumHighFFTBins)*i)))->~G__TTSnNumHighFFTBins();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnNumHighFFTBins*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnNumHighFFTBins*) (soff))->~G__TTSnNumHighFFTBins();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_582_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnNumHighFFTBins* dest = (TSnNumHighFFTBins*) G__getstructoffset();
   *dest = *(TSnNumHighFFTBins*) libp->para[0].ref;
   const TSnNumHighFFTBins& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnSelEvtsOnHighFFTBins */
static int G__G__ana_583_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSelEvtsOnHighFFTBins* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSelEvtsOnHighFFTBins[n];
     } else {
       p = new((void*) gvp) TSnSelEvtsOnHighFFTBins[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSelEvtsOnHighFFTBins;
     } else {
       p = new((void*) gvp) TSnSelEvtsOnHighFFTBins;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_583_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSelEvtsOnHighFFTBins* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnSelEvtsOnHighFFTBins((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnSelEvtsOnHighFFTBins((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_583_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSelEvtsOnHighFFTBins::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_583_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSelEvtsOnHighFFTBins::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_583_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnSelEvtsOnHighFFTBins::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_583_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSelEvtsOnHighFFTBins::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_583_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSelEvtsOnHighFFTBins*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_583_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSelEvtsOnHighFFTBins::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_583_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSelEvtsOnHighFFTBins::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_583_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSelEvtsOnHighFFTBins::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_583_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSelEvtsOnHighFFTBins::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_583_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnSelEvtsOnHighFFTBins* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnSelEvtsOnHighFFTBins(*(TSnSelEvtsOnHighFFTBins*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnSelEvtsOnHighFFTBins G__TTSnSelEvtsOnHighFFTBins;
static int G__G__ana_583_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnSelEvtsOnHighFFTBins*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnSelEvtsOnHighFFTBins*) (soff+(sizeof(TSnSelEvtsOnHighFFTBins)*i)))->~G__TTSnSelEvtsOnHighFFTBins();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnSelEvtsOnHighFFTBins*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnSelEvtsOnHighFFTBins*) (soff))->~G__TTSnSelEvtsOnHighFFTBins();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_583_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSelEvtsOnHighFFTBins* dest = (TSnSelEvtsOnHighFFTBins*) G__getstructoffset();
   *dest = *(TSnSelEvtsOnHighFFTBins*) libp->para[0].ref;
   const TSnSelEvtsOnHighFFTBins& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnCountEventsMod */
static int G__G__ana_584_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCountEventsMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCountEventsMod[n];
     } else {
       p = new((void*) gvp) TSnCountEventsMod[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnCountEventsMod;
     } else {
       p = new((void*) gvp) TSnCountEventsMod;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_584_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCountEventsMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnCountEventsMod((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnCountEventsMod((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_584_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnCountEventsMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_584_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCountEventsMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_584_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnCountEventsMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_584_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnCountEventsMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_584_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnCountEventsMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_584_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCountEventsMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_584_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCountEventsMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_584_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnCountEventsMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__ana_584_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnCountEventsMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__ana_584_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnCountEventsMod* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnCountEventsMod(*(TSnCountEventsMod*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnCountEventsMod G__TTSnCountEventsMod;
static int G__G__ana_584_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnCountEventsMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnCountEventsMod*) (soff+(sizeof(TSnCountEventsMod)*i)))->~G__TTSnCountEventsMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnCountEventsMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnCountEventsMod*) (soff))->~G__TTSnCountEventsMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__ana_584_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnCountEventsMod* dest = (TSnCountEventsMod*) G__getstructoffset();
   *dest = *(TSnCountEventsMod*) libp->para[0].ref;
   const TSnCountEventsMod& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSnCorrelateChans */

/* TSnCorrCoef */

/* TSnCorrelateWvs */

/* TSnClust */

/* TSnCorrelateWaves */

/* TSnClusterTimes */

/* TSnCluster */

/* TSnCorrelateWavesMod */

/* TSnSelEvtsOnCC */

/* TSnRunEvtOut */

/* pair<unsigned int,unsigned int> */

/* vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > > */

/* TSnPlotCCMod */

/* TSnPlotCorrelations */

/* TSnNumHighFFTBins */

/* TSnSelEvtsOnHighFFTBins */

/* TSnCountEventsMod */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__ana {
 public:
  G__Sizep2memfuncG__ana(): p(&G__Sizep2memfuncG__ana::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__ana::*p)();
};

size_t G__get_sizep2memfuncG__ana()
{
  G__Sizep2memfuncG__ana a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__ana() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans))) {
     TSnCorrelateChans *G__Lderived;
     G__Lderived=(TSnCorrelateChans*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans),G__get_linked_tagnum(&G__G__anaLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans),G__get_linked_tagnum(&G__G__anaLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef))) {
     TSnCorrCoef *G__Lderived;
     G__Lderived=(TSnCorrCoef*)0x1000;
     {
       TSnRecoResult *G__Lpbase=(TSnRecoResult*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef),G__get_linked_tagnum(&G__G__anaLN_TSnRecoResult),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs))) {
     TSnCorrelateWvs *G__Lderived;
     G__Lderived=(TSnCorrelateWvs*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs),G__get_linked_tagnum(&G__G__anaLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs),G__get_linked_tagnum(&G__G__anaLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnClust))) {
     TSnClust *G__Lderived;
     G__Lderived=(TSnClust*)0x1000;
     {
       TSnRecoResult *G__Lpbase=(TSnRecoResult*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnClust),G__get_linked_tagnum(&G__G__anaLN_TSnRecoResult),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnClust),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnClust),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves))) {
     TSnCorrelateWaves *G__Lderived;
     G__Lderived=(TSnCorrelateWaves*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnClusterTimes))) {
     TSnClusterTimes *G__Lderived;
     G__Lderived=(TSnClusterTimes*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnClusterTimes),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnCluster))) {
     TSnCluster *G__Lderived;
     G__Lderived=(TSnCluster*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCluster),G__get_linked_tagnum(&G__G__anaLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCluster),G__get_linked_tagnum(&G__G__anaLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCluster),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCluster),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod))) {
     TSnCorrelateWavesMod *G__Lderived;
     G__Lderived=(TSnCorrelateWavesMod*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod),G__get_linked_tagnum(&G__G__anaLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod),G__get_linked_tagnum(&G__G__anaLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC))) {
     TSnSelEvtsOnCC *G__Lderived;
     G__Lderived=(TSnSelEvtsOnCC*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC),G__get_linked_tagnum(&G__G__anaLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC),G__get_linked_tagnum(&G__G__anaLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnRunEvtOut))) {
     TSnRunEvtOut *G__Lderived;
     G__Lderived=(TSnRunEvtOut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnRunEvtOut),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod))) {
     TSnPlotCCMod *G__Lderived;
     G__Lderived=(TSnPlotCCMod*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod),G__get_linked_tagnum(&G__G__anaLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod),G__get_linked_tagnum(&G__G__anaLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations))) {
     TSnPlotCorrelations *G__Lderived;
     G__Lderived=(TSnPlotCorrelations*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations),G__get_linked_tagnum(&G__G__anaLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations),G__get_linked_tagnum(&G__G__anaLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins))) {
     TSnNumHighFFTBins *G__Lderived;
     G__Lderived=(TSnNumHighFFTBins*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins))) {
     TSnSelEvtsOnHighFFTBins *G__Lderived;
     G__Lderived=(TSnSelEvtsOnHighFFTBins*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins),G__get_linked_tagnum(&G__G__anaLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins),G__get_linked_tagnum(&G__G__anaLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod))) {
     TSnCountEventsMod *G__Lderived;
     G__Lderived=(TSnCountEventsMod*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod),G__get_linked_tagnum(&G__G__anaLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod),G__get_linked_tagnum(&G__G__anaLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod),G__get_linked_tagnum(&G__G__anaLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod),G__get_linked_tagnum(&G__G__anaLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__ana() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__anaLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__anaLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__anaLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__anaLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__anaLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__anaLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__anaLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BranchPtr_t*>",117,G__get_linked_tagnum(&G__G__anaLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TAMBranchInfo::BranchPtr_t*>",117,G__get_linked_tagnum(&G__G__anaLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__anaLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__anaLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__anaLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__anaLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TIterator*>",117,G__get_linked_tagnum(&G__G__anaLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlETIteratormUcOallocatorlETIteratormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlETIteratormUcOallocatorlETIteratormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__G__anaLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Double_t,Double_t>",117,G__get_linked_tagnum(&G__G__anaLN_pairlEdoublecOdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<Double_t,Double_t> >",117,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<Double_t,Double_t> >",117,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<double,double> >",117,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__G__anaLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,UInt_t>",117,G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,UInt_t> >",117,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,UInt_t> >",117,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR),256,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR),1,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR),257,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,unsigned int> >",117,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSnCorrelateChans */
static void G__setup_memvarTSnCorrelateChans(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans));
   { TSnCorrelateChans *p; p=(TSnCorrelateChans*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,98,0,1,-1,G__defined_typename("UChar_t"),-2,1,G__FastAllocString(4096).Format("kNChCmbs=%lluULL",(unsigned long long)TSnCorrelateChans::kNChCmbs).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnCalWvData),-1,-1,4,"fData=",0,"event data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventMetadata),-1,-1,4,"fMeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventHeader),-1,-1,4,"fHdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hCC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnCorrCoef */
static void G__setup_memvarTSnCorrCoef(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef));
   { TSnCorrCoef *p; p=(TSnCorrCoef*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__anaLN_TArrayF),-1,-1,4,"corrcoef=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnCorrelateWvs */
static void G__setup_memvarTSnCorrelateWvs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs));
   { TSnCorrelateWvs *p; p=(TSnCorrelateWvs*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnCalWvData),-1,-1,4,"fData=",0,"event data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventMetadata),-1,-1,4,"fMeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventHeader),-1,-1,4,"fHdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnPowerReading),-1,-1,4,"fPwr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnWindData),-1,-1,4,"fWind=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__anaLN_TString),-1,-1,4,"fFFT=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__anaLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"wvtp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef),-1,-1,4,"fCC=",0,"correlation coefficients");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hCC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hPrCC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hpcNS=",0,"parallel channels NS");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hpcEW=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hCCAvg=",0,"Avg C.C. of parallel chans");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hVvsCC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hWndvsCC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hPwrvsCC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hPwrvsWnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hPwr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnClust),-1,-1,4,"fClust=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hAvgCCvT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnClust */
static void G__setup_memvarTSnClust(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnClust));
   { TSnClust *p; p=(TSnClust*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__anaLN_TArrayI),-1,-1,4,"cluster=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnCorrelateWaves */
static void G__setup_memvarTSnCorrelateWaves(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves));
   { TSnCorrelateWaves *p; p=(TSnCorrelateWaves*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCCWave[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCCWaveInv[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnCalWvData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__anaLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"tpwave=",0,"template waveform");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnClusterTimes */
static void G__setup_memvarTSnClusterTimes(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnClusterTimes));
   { TSnClusterTimes *p; p=(TSnClusterTimes*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),G__defined_typename("vector<std::pair<Double_t,Double_t> >"),-1,4,"fTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxTmSep=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnCluster */
static void G__setup_memvarTSnCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCluster));
   { TSnCluster *p; p=(TSnCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventHeader),-1,-1,4,"fHdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"maxtmsep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__anaLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"evtTmPassCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnClusterTimes),-1,-1,4,"fClustTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnCorrelateWavesMod */
static void G__setup_memvarTSnCorrelateWavesMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod));
   { TSnCorrelateWavesMod *p; p=(TSnCorrelateWavesMod*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnCalWvData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__anaLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"tmpltwv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hCC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hCCInv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnSelEvtsOnCC */
static void G__setup_memvarTSnSelEvtsOnCC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC));
   { TSnSelEvtsOnCC *p; p=(TSnSelEvtsOnCC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnCalWvData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__anaLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"tmpltwv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventHeader),-1,-1,4,"fHdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hCCvT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hLrgCCvT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH1F),-1,-1,4,"hCC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventMetadata),-1,-1,4,"fMeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hCCbyCh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnRunEvtOut */
static void G__setup_memvarTSnRunEvtOut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnRunEvtOut));
   { TSnRunEvtOut *p; p=(TSnRunEvtOut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),G__defined_typename("vector<std::pair<UInt_t,UInt_t> >"),-1,4,"fRunEvt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<unsigned int,unsigned int> */
static void G__setup_memvarpairlEunsignedsPintcOunsignedsPintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR));
   { pair<unsigned int,unsigned int> *p; p=(pair<unsigned int,unsigned int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),104,0,0,-1,-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),104,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > > */
static void G__setup_memvarvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   { vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > > *p; p=(vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TSnPlotCCMod */
static void G__setup_memvarTSnPlotCCMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod));
   { TSnPlotCCMod *p; p=(TSnPlotCCMod*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventHeader),-1,-1,4,"fHdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH2F),-1,-1,4,"hAvgCCvT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventMetadata),-1,-1,4,"fMeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnRunEvtOut),-1,-1,4,"fEvtIdOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH1F),-1,-1,4,"hCC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnCalWvData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hFFTPeak=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hNHighPks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH1F),-1,-1,4,"hNHighPksAllCh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hcc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hccinv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnPlotCorrelations */
static void G__setup_memvarTSnPlotCorrelations(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations));
   { TSnPlotCorrelations *p; p=(TSnPlotCorrelations*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hCC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,1,"hCC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnNumHighFFTBins */
static void G__setup_memvarTSnNumHighFFTBins(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins));
   { TSnNumHighFFTBins *p; p=(TSnNumHighFFTBins*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnCalFFTData),-1,-1,4,"fFFT=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nHighBins[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnSelEvtsOnHighFFTBins */
static void G__setup_memvarTSnSelEvtsOnHighFFTBins(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins));
   { TSnSelEvtsOnHighFFTBins *p; p=(TSnSelEvtsOnHighFFTBins*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnCalWvData),-1,-1,4,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventHeader),-1,-1,4,"fHdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TSnEventMetadata),-1,-1,4,"fMeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TObjArray),-1,-1,4,"hNHighPks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TH1F),-1,-1,4,"hNHighPksAllCh=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnCountEventsMod */
static void G__setup_memvarTSnCountEventsMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod));
   { TSnCountEventsMod *p; p=(TSnCountEventsMod*)0x1000; if (p) { }
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fNumEvts=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__anaLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__ana() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSnCorrelateChans(void) {
   /* TSnCorrelateChans */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans));
   G__memfunc_setup("TSnCorrelateChans",1699,G__G__ana_492_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnCorrelateChans",1699,G__G__ana_492_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_492_0_6, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnCorrelateChans::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_492_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateChans::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_492_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnCorrelateChans::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_492_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnCorrelateChans::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_492_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_492_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateChans::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_492_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCorrelateChans::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_492_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateChans::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_492_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCorrelateChans::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnCorrelateChans", 1699, G__G__ana_492_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans), -1, 0, 1, 1, 1, 0, "u 'TSnCorrelateChans' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnCorrelateChans", 1825, G__G__ana_492_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_492_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateChans), -1, 1, 1, 1, 1, 0, "u 'TSnCorrelateChans' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnCorrCoef(void) {
   /* TSnCorrCoef */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef));
   G__memfunc_setup("TSnCorrCoef",1064,G__G__ana_499_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnCorrCoef",1064,G__G__ana_499_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyFrom",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TSnRecoResult' - 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_499_0_4, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnCorrCoef::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_499_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrCoef::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_499_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnCorrCoef::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_499_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnCorrCoef::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_499_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_499_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrCoef::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_499_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCorrCoef::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_499_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrCoef::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_499_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCorrCoef::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnCorrCoef", 1064, G__G__ana_499_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef), -1, 0, 1, 1, 1, 0, "u 'TSnCorrCoef' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnCorrCoef", 1190, G__G__ana_499_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_499_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnCorrCoef), -1, 1, 1, 1, 1, 0, "u 'TSnCorrCoef' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnCorrelateWvs(void) {
   /* TSnCorrelateWvs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs));
   G__memfunc_setup("TSnCorrelateWvs",1526,G__G__ana_500_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnCorrelateWvs",1526,G__G__ana_500_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - wvtmplt "
"C - 'Char_t' 10 - fftNm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_500_0_6, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnCorrelateWvs::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_500_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateWvs::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_500_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnCorrelateWvs::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_500_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnCorrelateWvs::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_500_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_500_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateWvs::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_500_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCorrelateWvs::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_500_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateWvs::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_500_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCorrelateWvs::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnCorrelateWvs", 1526, G__G__ana_500_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs), -1, 0, 1, 1, 1, 0, "u 'TSnCorrelateWvs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnCorrelateWvs", 1652, G__G__ana_500_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_500_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWvs), -1, 1, 1, 1, 1, 0, "u 'TSnCorrelateWvs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnClust(void) {
   /* TSnClust */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnClust));
   G__memfunc_setup("TSnClust",800,G__G__ana_501_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnClust), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnClust",800,G__G__ana_501_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnClust), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyFrom",815,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TSnRecoResult' - 11 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_501_0_4, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnClust::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_501_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnClust::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_501_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnClust::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_501_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnClust::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_501_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_501_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnClust::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_501_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnClust::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_501_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnClust::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_501_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnClust::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnClust", 800, G__G__ana_501_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnClust), -1, 0, 1, 1, 1, 0, "u 'TSnClust' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnClust", 926, G__G__ana_501_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_501_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnClust), -1, 1, 1, 1, 1, 0, "u 'TSnClust' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnCorrelateWaves(void) {
   /* TSnCorrelateWaves */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves));
   G__memfunc_setup("TSnCorrelateWaves",1724,G__G__ana_502_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnCorrelateWaves",1724,G__G__ana_502_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name U 'TSnCalWvData' - 0 - dt "
"u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - wv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Correlate",929,G__G__ana_502_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCC",422,G__G__ana_502_0_4, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "b - 'UChar_t' 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCCInv",723,G__G__ana_502_0_5, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "b - 'UChar_t' 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAvgCC",708,G__G__ana_502_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ana_502_0_7, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnCorrelateWaves::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_502_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateWaves::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_502_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnCorrelateWaves::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_502_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnCorrelateWaves::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_502_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_502_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateWaves::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_502_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCorrelateWaves::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_502_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateWaves::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_502_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCorrelateWaves::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnCorrelateWaves", 1724, G__G__ana_502_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves), -1, 0, 1, 1, 1, 0, "u 'TSnCorrelateWaves' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnCorrelateWaves", 1850, G__G__ana_502_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_502_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWaves), -1, 1, 1, 1, 1, 0, "u 'TSnCorrelateWaves' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnClusterTimes(void) {
   /* TSnClusterTimes */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnClusterTimes));
   G__memfunc_setup("TSnClusterTimes",1529,G__G__ana_503_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnClusterTimes), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__ana_503_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<double,double>' 'pair<Double_t,Double_t>' 0 - ss", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__G__ana_503_0_3, 117, G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR), G__defined_typename("vector<std::pair<Double_t,Double_t> >"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartTm",1007,G__G__ana_503_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStopTm",903,G__G__ana_503_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxTmSep",1071,G__G__ana_503_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxTmSep",1083,G__G__ana_503_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mxtm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ana_503_0_8, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnClusterTimes::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_503_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnClusterTimes::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_503_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnClusterTimes::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_503_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnClusterTimes::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_503_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_503_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnClusterTimes::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_503_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnClusterTimes::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_503_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnClusterTimes::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_503_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnClusterTimes::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnClusterTimes", 1529, G__G__ana_503_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnClusterTimes), -1, 0, 1, 1, 1, 0, "u 'TSnClusterTimes' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnClusterTimes", 1655, G__G__ana_503_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_503_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnClusterTimes), -1, 1, 1, 1, 1, 0, "u 'TSnClusterTimes' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnCluster(void) {
   /* TSnCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCluster));
   G__memfunc_setup("TSnCluster",1015,G__G__ana_508_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnCluster",1015,G__G__ana_508_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCluster), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name d - 'Double_t' 0 - maxsep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_508_0_6, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_508_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_508_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_508_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_508_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_508_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_508_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_508_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_508_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnCluster", 1015, G__G__ana_508_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnCluster), -1, 0, 1, 1, 1, 0, "u 'TSnCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnCluster", 1141, G__G__ana_508_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_508_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnCluster), -1, 1, 1, 1, 1, 0, "u 'TSnCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnCorrelateWavesMod(void) {
   /* TSnCorrelateWavesMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod));
   G__memfunc_setup("TSnCorrelateWavesMod",2012,G__G__ana_509_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnCorrelateWavesMod",2012,G__G__ana_509_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - tmpltsig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_509_0_5, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnCorrelateWavesMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_509_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateWavesMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_509_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnCorrelateWavesMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_509_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnCorrelateWavesMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_509_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_509_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateWavesMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_509_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCorrelateWavesMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_509_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCorrelateWavesMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_509_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCorrelateWavesMod::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnCorrelateWavesMod", 2012, G__G__ana_509_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod), -1, 0, 1, 1, 1, 0, "u 'TSnCorrelateWavesMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnCorrelateWavesMod", 2138, G__G__ana_509_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_509_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnCorrelateWavesMod), -1, 1, 1, 1, 1, 0, "u 'TSnCorrelateWavesMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnSelEvtsOnCC(void) {
   /* TSnSelEvtsOnCC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC));
   G__memfunc_setup("TSnSelEvtsOnCC",1310,G__G__ana_510_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnSelEvtsOnCC",1310,G__G__ana_510_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - tmpltsig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_510_0_5, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnSelEvtsOnCC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_510_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSelEvtsOnCC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_510_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnSelEvtsOnCC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_510_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnSelEvtsOnCC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_510_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_510_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSelEvtsOnCC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_510_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSelEvtsOnCC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_510_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSelEvtsOnCC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_510_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSelEvtsOnCC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnSelEvtsOnCC", 1310, G__G__ana_510_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC), -1, 0, 1, 1, 1, 0, "u 'TSnSelEvtsOnCC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnSelEvtsOnCC", 1436, G__G__ana_510_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_510_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnCC), -1, 1, 1, 1, 1, 0, "u 'TSnSelEvtsOnCC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnRunEvtOut(void) {
   /* TSnRunEvtOut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnRunEvtOut));
   G__memfunc_setup("TSnRunEvtOut",1201,G__G__ana_573_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnRunEvtOut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__G__ana_573_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<unsigned int,unsigned int>' 'pair<UInt_t,UInt_t>' 0 - ss", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__G__ana_573_0_3, 117, G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR), G__defined_typename("vector<std::pair<UInt_t,UInt_t> >"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNum",901,G__G__ana_573_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvtNum",895,G__G__ana_573_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__G__ana_573_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ana_573_0_7, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnRunEvtOut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_573_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRunEvtOut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_573_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnRunEvtOut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_573_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnRunEvtOut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_573_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_573_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRunEvtOut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_573_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRunEvtOut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_573_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnRunEvtOut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_573_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnRunEvtOut::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnRunEvtOut", 1201, G__G__ana_573_0_19, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnRunEvtOut), -1, 0, 1, 1, 1, 0, "u 'TSnRunEvtOut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnRunEvtOut", 1327, G__G__ana_573_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_573_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnRunEvtOut), -1, 1, 1, 1, 1, 0, "u 'TSnRunEvtOut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEunsignedsPintcOunsignedsPintgR(void) {
   /* pair<unsigned int,unsigned int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR));
   G__memfunc_setup("pair<unsigned int,unsigned int>",3042,G__G__ana_574_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<unsigned int,unsigned int>",3042,G__G__ana_574_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR), -1, 0, 2, 1, 1, 0, 
"h - - 11 - a h - - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR), -1, 1, 1, 1, 4, 0, "u 'pair<unsigned int,unsigned int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<unsigned int,unsigned int>", 3042, G__G__ana_574_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR), -1, 0, 1, 1, 1, 0, "u 'pair<unsigned int,unsigned int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<unsigned int,unsigned int>", 3168, G__G__ana_574_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR(void) {
   /* vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__memfunc_setup("at",213,G__G__ana_576_0_1, 117, G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__G__ana_576_0_2, 117, G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__G__ana_576_0_3, 117, G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__G__ana_576_0_4, 117, G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__G__ana_576_0_5, 117, G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__G__ana_576_0_6, 117, G__get_linked_tagnum(&G__G__anaLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__G__ana_576_0_7, 107, -1, G__defined_typename("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__G__ana_576_0_8, 107, -1, G__defined_typename("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__G__ana_576_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__G__ana_576_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type' 0 - sz u 'pair<unsigned int,unsigned int>' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__G__ana_576_0_11, 107, -1, G__defined_typename("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__G__ana_576_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__ana_576_0_13, 117, G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__G__ana_576_0_14, 117, G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >",8056,G__G__ana_576_0_15, 105, G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >",8056,G__G__ana_576_0_16, 105, G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type' 0 - n u 'pair<unsigned int,unsigned int>' - 11 '(pair<unsigned int,unsigned int>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >",8056,G__G__ana_576_0_17, 105, G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >",8056,G__G__ana_576_0_18, 105, G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator' 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_iterator' 10 - first u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator' 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__ana_576_0_19, 117, G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__G__ana_576_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__G__ana_576_0_21, 117, G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__G__ana_576_0_22, 117, G__get_linked_tagnum(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__G__ana_576_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<unsigned int,unsigned int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__G__ana_576_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__ana_576_0_25, 117, G__get_linked_tagnum(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator' - 0 - position u 'pair<unsigned int,unsigned int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__ana_576_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator' - 0 - position u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator' 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_iterator' 10 - first "
"u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator' 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__G__ana_576_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator' - 0 - position k - 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::size_type' 0 - n "
"u 'pair<unsigned int,unsigned int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__G__ana_576_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__G__ana_576_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__G__ana_576_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator' - 0 - first u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__G__ana_576_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >", 8182, G__G__ana_576_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnPlotCCMod(void) {
   /* TSnPlotCCMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod));
   G__memfunc_setup("TSnPlotCCMod",1114,G__G__ana_579_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnPlotCCMod",1114,G__G__ana_579_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_579_0_6, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnPlotCCMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_579_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnPlotCCMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_579_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnPlotCCMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_579_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnPlotCCMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_579_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_579_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnPlotCCMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_579_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnPlotCCMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_579_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnPlotCCMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_579_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnPlotCCMod::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnPlotCCMod", 1114, G__G__ana_579_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod), -1, 0, 1, 1, 1, 0, "u 'TSnPlotCCMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnPlotCCMod", 1240, G__G__ana_579_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_579_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnPlotCCMod), -1, 1, 1, 1, 1, 0, "u 'TSnPlotCCMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnPlotCorrelations(void) {
   /* TSnPlotCorrelations */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations));
   G__memfunc_setup("TSnPlotCorrelations",1961,G__G__ana_580_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnPlotCorrelations",1961,G__G__ana_580_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_580_0_6, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnPlotCorrelations::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_580_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnPlotCorrelations::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_580_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnPlotCorrelations::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_580_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnPlotCorrelations::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_580_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_580_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnPlotCorrelations::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_580_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnPlotCorrelations::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_580_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnPlotCorrelations::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_580_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnPlotCorrelations::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnPlotCorrelations", 1961, G__G__ana_580_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations), -1, 0, 1, 1, 1, 0, "u 'TSnPlotCorrelations' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnPlotCorrelations", 2087, G__G__ana_580_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_580_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnPlotCorrelations), -1, 1, 1, 1, 1, 0, "u 'TSnPlotCorrelations' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnNumHighFFTBins(void) {
   /* TSnNumHighFFTBins */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins));
   G__memfunc_setup("TSnNumHighFFTBins",1585,G__G__ana_582_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnNumHighFFTBins",1585,G__G__ana_582_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name U 'TSnCalFFTData' - 0 - fft", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumHighBins",1372,G__G__ana_582_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__G__ana_582_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__ana_582_0_5, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnNumHighFFTBins::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_582_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnNumHighFFTBins::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_582_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnNumHighFFTBins::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_582_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnNumHighFFTBins::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_582_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_582_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnNumHighFFTBins::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_582_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnNumHighFFTBins::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_582_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnNumHighFFTBins::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_582_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnNumHighFFTBins::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnNumHighFFTBins", 1585, G__G__ana_582_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins), -1, 0, 1, 1, 1, 0, "u 'TSnNumHighFFTBins' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnNumHighFFTBins", 1711, G__G__ana_582_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_582_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnNumHighFFTBins), -1, 1, 1, 1, 1, 0, "u 'TSnNumHighFFTBins' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnSelEvtsOnHighFFTBins(void) {
   /* TSnSelEvtsOnHighFFTBins */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins));
   G__memfunc_setup("TSnSelEvtsOnHighFFTBins",2180,G__G__ana_583_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnSelEvtsOnHighFFTBins",2180,G__G__ana_583_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_583_0_6, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnSelEvtsOnHighFFTBins::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_583_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSelEvtsOnHighFFTBins::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_583_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnSelEvtsOnHighFFTBins::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_583_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnSelEvtsOnHighFFTBins::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_583_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_583_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSelEvtsOnHighFFTBins::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_583_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSelEvtsOnHighFFTBins::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_583_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSelEvtsOnHighFFTBins::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_583_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSelEvtsOnHighFFTBins::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnSelEvtsOnHighFFTBins", 2180, G__G__ana_583_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins), -1, 0, 1, 1, 1, 0, "u 'TSnSelEvtsOnHighFFTBins' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnSelEvtsOnHighFFTBins", 2306, G__G__ana_583_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_583_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnSelEvtsOnHighFFTBins), -1, 1, 1, 1, 1, 0, "u 'TSnSelEvtsOnHighFFTBins' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnCountEventsMod(void) {
   /* TSnCountEventsMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod));
   G__memfunc_setup("TSnCountEventsMod",1715,G__G__ana_584_0_1, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnCountEventsMod",1715,G__G__ana_584_0_2, 105, G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__ana_584_0_6, 85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnCountEventsMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__ana_584_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCountEventsMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__ana_584_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnCountEventsMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__ana_584_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnCountEventsMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__anaLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__ana_584_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__ana_584_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCountEventsMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__ana_584_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCountEventsMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__ana_584_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnCountEventsMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__ana_584_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnCountEventsMod::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnCountEventsMod", 1715, G__G__ana_584_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod), -1, 0, 1, 1, 1, 0, "u 'TSnCountEventsMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnCountEventsMod", 1841, G__G__ana_584_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__ana_584_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__anaLN_TSnCountEventsMod), -1, 1, 1, 1, 1, 0, "u 'TSnCountEventsMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__ana() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__ana() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__ana() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__anaLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__anaLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__G__anaLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__G__anaLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__anaLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__anaLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__anaLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__anaLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__anaLN_TTask = { "TTask" , 99 , -1 };
G__linked_taginfo G__G__anaLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR = { "vector<TAMBranchInfo::BranchPtr_t*,allocator<TAMBranchInfo::BranchPtr_t*> >" , 99 , -1 };
G__linked_taginfo G__G__anaLN_reverse_iteratorlEvectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TAMBranchInfo::BranchPtr_t*,allocator<TAMBranchInfo::BranchPtr_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TAModule = { "TAModule" , 99 , -1 };
G__linked_taginfo G__G__anaLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__G__anaLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__anaLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR = { "vector<TIterator*,allocator<TIterator*> >" , 99 , -1 };
G__linked_taginfo G__G__anaLN_reverse_iteratorlEvectorlETIteratormUcOallocatorlETIteratormUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TIterator*,allocator<TIterator*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnCalWvData = { "TSnCalWvData" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnEventMetadata = { "TSnEventMetadata" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnEventHeader = { "TSnEventHeader" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnCorrelateChans = { "TSnCorrelateChans" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnRecoResult = { "TSnRecoResult" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnPowerReading = { "TSnPowerReading" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnWindData = { "TSnWindData" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnCorrCoef = { "TSnCorrCoef" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnCorrelateWvs = { "TSnCorrelateWvs" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnClust = { "TSnClust" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnCorrelateWaves = { "TSnCorrelateWaves" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnClusterTimes = { "TSnClusterTimes" , 99 , -1 };
G__linked_taginfo G__G__anaLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR = { "vector<pair<double,double>,allocator<pair<double,double> > >" , 99 , -1 };
G__linked_taginfo G__G__anaLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<double,double>,allocator<pair<double,double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnCluster = { "TSnCluster" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnCorrelateWavesMod = { "TSnCorrelateWavesMod" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnSelEvtsOnCC = { "TSnSelEvtsOnCC" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnRunEvtOut = { "TSnRunEvtOut" , 99 , -1 };
G__linked_taginfo G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR = { "pair<unsigned int,unsigned int>" , 115 , -1 };
G__linked_taginfo G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR = { "vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator = { "vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__G__anaLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnPlotCCMod = { "TSnPlotCCMod" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnPlotCorrelations = { "TSnPlotCorrelations" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnCalFFTData = { "TSnCalFFTData" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnNumHighFFTBins = { "TSnNumHighFFTBins" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnSelEvtsOnHighFFTBins = { "TSnSelEvtsOnHighFFTBins" , 99 , -1 };
G__linked_taginfo G__G__anaLN_TSnCountEventsMod = { "TSnCountEventsMod" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__ana() {
  G__G__anaLN_TClass.tagnum = -1 ;
  G__G__anaLN_TBuffer.tagnum = -1 ;
  G__G__anaLN_TMemberInspector.tagnum = -1 ;
  G__G__anaLN_TObject.tagnum = -1 ;
  G__G__anaLN_TNamed.tagnum = -1 ;
  G__G__anaLN_TString.tagnum = -1 ;
  G__G__anaLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__G__anaLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__G__anaLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__anaLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__anaLN_TObjArray.tagnum = -1 ;
  G__G__anaLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__anaLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__anaLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__anaLN_TTask.tagnum = -1 ;
  G__G__anaLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR.tagnum = -1 ;
  G__G__anaLN_reverse_iteratorlEvectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__anaLN_TAModule.tagnum = -1 ;
  G__G__anaLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__G__anaLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__anaLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR.tagnum = -1 ;
  G__G__anaLN_reverse_iteratorlEvectorlETIteratormUcOallocatorlETIteratormUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__anaLN_TSnCalWvData.tagnum = -1 ;
  G__G__anaLN_TH2F.tagnum = -1 ;
  G__G__anaLN_TSnEventMetadata.tagnum = -1 ;
  G__G__anaLN_TSnEventHeader.tagnum = -1 ;
  G__G__anaLN_TH1F.tagnum = -1 ;
  G__G__anaLN_TSnCorrelateChans.tagnum = -1 ;
  G__G__anaLN_TSnRecoResult.tagnum = -1 ;
  G__G__anaLN_TArrayF.tagnum = -1 ;
  G__G__anaLN_TArrayI.tagnum = -1 ;
  G__G__anaLN_TSnPowerReading.tagnum = -1 ;
  G__G__anaLN_TSnWindData.tagnum = -1 ;
  G__G__anaLN_TSnCorrCoef.tagnum = -1 ;
  G__G__anaLN_TSnCorrelateWvs.tagnum = -1 ;
  G__G__anaLN_TSnClust.tagnum = -1 ;
  G__G__anaLN_TSnCorrelateWaves.tagnum = -1 ;
  G__G__anaLN_TSnClusterTimes.tagnum = -1 ;
  G__G__anaLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR.tagnum = -1 ;
  G__G__anaLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__anaLN_TSnCluster.tagnum = -1 ;
  G__G__anaLN_TSnCorrelateWavesMod.tagnum = -1 ;
  G__G__anaLN_TSnSelEvtsOnCC.tagnum = -1 ;
  G__G__anaLN_TSnRunEvtOut.tagnum = -1 ;
  G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR.tagnum = -1 ;
  G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__G__anaLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__anaLN_TSnPlotCCMod.tagnum = -1 ;
  G__G__anaLN_TSnPlotCorrelations.tagnum = -1 ;
  G__G__anaLN_TSnCalFFTData.tagnum = -1 ;
  G__G__anaLN_TSnNumHighFFTBins.tagnum = -1 ;
  G__G__anaLN_TSnSelEvtsOnHighFFTBins.tagnum = -1 ;
  G__G__anaLN_TSnCountEventsMod.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__ana() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__anaLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TString);
   G__get_linked_tagnum_fwd(&G__G__anaLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__anaLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TTask);
   G__get_linked_tagnum_fwd(&G__G__anaLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_reverse_iteratorlEvectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TAModule);
   G__get_linked_tagnum_fwd(&G__G__anaLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_reverse_iteratorlEvectorlETIteratormUcOallocatorlETIteratormUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TSnCalWvData);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TH2F);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TSnEventMetadata);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TSnEventHeader);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TH1F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnCorrelateChans),sizeof(TSnCorrelateChans),-1,324864,(char*)NULL,G__setup_memvarTSnCorrelateChans,G__setup_memfuncTSnCorrelateChans);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TSnRecoResult);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TSnPowerReading);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TSnWindData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnCorrCoef),sizeof(TSnCorrCoef),-1,324864,(char*)NULL,G__setup_memvarTSnCorrCoef,G__setup_memfuncTSnCorrCoef);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnCorrelateWvs),sizeof(TSnCorrelateWvs),-1,324864,(char*)NULL,G__setup_memvarTSnCorrelateWvs,G__setup_memfuncTSnCorrelateWvs);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnClust),sizeof(TSnClust),-1,324864,(char*)NULL,G__setup_memvarTSnClust,G__setup_memfuncTSnClust);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnCorrelateWaves),sizeof(TSnCorrelateWaves),-1,324864,(char*)NULL,G__setup_memvarTSnCorrelateWaves,G__setup_memfuncTSnCorrelateWaves);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnClusterTimes),sizeof(TSnClusterTimes),-1,292096,(char*)NULL,G__setup_memvarTSnClusterTimes,G__setup_memfuncTSnClusterTimes);
   G__get_linked_tagnum_fwd(&G__G__anaLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnCluster),sizeof(TSnCluster),-1,324864,(char*)NULL,G__setup_memvarTSnCluster,G__setup_memfuncTSnCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnCorrelateWavesMod),sizeof(TSnCorrelateWavesMod),-1,324864,(char*)NULL,G__setup_memvarTSnCorrelateWavesMod,G__setup_memfuncTSnCorrelateWavesMod);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnSelEvtsOnCC),sizeof(TSnSelEvtsOnCC),-1,324864,(char*)NULL,G__setup_memvarTSnSelEvtsOnCC,G__setup_memfuncTSnSelEvtsOnCC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnRunEvtOut),sizeof(TSnRunEvtOut),-1,292096,(char*)NULL,G__setup_memvarTSnRunEvtOut,G__setup_memfuncTSnRunEvtOut);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_pairlEunsignedsPintcOunsignedsPintgR),sizeof(pair<unsigned int,unsigned int>),-1,35072,(char*)NULL,G__setup_memvarpairlEunsignedsPintcOunsignedsPintgR,G__setup_memfuncpairlEunsignedsPintcOunsignedsPintgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),sizeof(vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >),-1,36608,(char*)NULL,G__setup_memvarvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR,G__setup_memfuncvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__anaLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__G__anaLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnPlotCCMod),sizeof(TSnPlotCCMod),-1,323840,(char*)NULL,G__setup_memvarTSnPlotCCMod,G__setup_memfuncTSnPlotCCMod);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnPlotCorrelations),sizeof(TSnPlotCorrelations),-1,323840,(char*)NULL,G__setup_memvarTSnPlotCorrelations,G__setup_memfuncTSnPlotCorrelations);
   G__get_linked_tagnum_fwd(&G__G__anaLN_TSnCalFFTData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnNumHighFFTBins),sizeof(TSnNumHighFFTBins),-1,324864,(char*)NULL,G__setup_memvarTSnNumHighFFTBins,G__setup_memfuncTSnNumHighFFTBins);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnSelEvtsOnHighFFTBins),sizeof(TSnSelEvtsOnHighFFTBins),-1,324864,(char*)NULL,G__setup_memvarTSnSelEvtsOnHighFFTBins,G__setup_memfuncTSnSelEvtsOnHighFFTBins);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__anaLN_TSnCountEventsMod),sizeof(TSnCountEventsMod),-1,323840,(char*)NULL,G__setup_memvarTSnCountEventsMod,G__setup_memfuncTSnCountEventsMod);
}
extern "C" void G__cpp_setupG__ana(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__ana()");
  G__set_cpp_environmentG__ana();
  G__cpp_setup_tagtableG__ana();

  G__cpp_setup_inheritanceG__ana();

  G__cpp_setup_typetableG__ana();

  G__cpp_setup_memvarG__ana();

  G__cpp_setup_memfuncG__ana();
  G__cpp_setup_globalG__ana();
  G__cpp_setup_funcG__ana();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__ana();
  return;
}
class G__cpp_setup_initG__ana {
  public:
    G__cpp_setup_initG__ana() { G__add_setup_func("G__ana",(G__incsetup)(&G__cpp_setupG__ana)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__ana() { G__remove_setup_func("G__ana"); }
};
G__cpp_setup_initG__ana G__cpp_setup_initializerG__ana;

