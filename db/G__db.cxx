//
// File generated by /data/users/jtatar/Software/root/bin/rootcint at Mon Mar 24 20:10:12 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dbdIG__db
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__db.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace NSnDatabase {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NSnDatabase_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("NSnDatabase", 0 /*version*/, "./db/NSnDatabase.h", 4,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NSnDatabase_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NSnDatabase_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void TSnConnection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TSnConnection(void *p);
   static void deleteArray_TSnConnection(void *p);
   static void destruct_TSnConnection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnConnection*)
   {
      ::TSnConnection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnConnection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnConnection", ::TSnConnection::Class_Version(), "./db/TSnConnection.h", 6,
                  typeid(::TSnConnection), DefineBehavior(ptr, ptr),
                  &::TSnConnection::Dictionary, isa_proxy, 4,
                  sizeof(::TSnConnection) );
      instance.SetDelete(&delete_TSnConnection);
      instance.SetDeleteArray(&deleteArray_TSnConnection);
      instance.SetDestructor(&destruct_TSnConnection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnConnection*)
   {
      return GenerateInitInstanceLocal((::TSnConnection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnConnection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnDbKey_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TSnDbKey(void *p);
   static void deleteArray_TSnDbKey(void *p);
   static void destruct_TSnDbKey(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnDbKey*)
   {
      ::TSnDbKey *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnDbKey >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnDbKey", ::TSnDbKey::Class_Version(), "./db/TSnDbKey.h", 12,
                  typeid(::TSnDbKey), DefineBehavior(ptr, ptr),
                  &::TSnDbKey::Dictionary, isa_proxy, 4,
                  sizeof(::TSnDbKey) );
      instance.SetDelete(&delete_TSnDbKey);
      instance.SetDeleteArray(&deleteArray_TSnDbKey);
      instance.SetDestructor(&destruct_TSnDbKey);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnDbKey*)
   {
      return GenerateInitInstanceLocal((::TSnDbKey*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnDbKey*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnDatabase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnDatabase(void *p = 0);
   static void *newArray_TSnDatabase(Long_t size, void *p);
   static void delete_TSnDatabase(void *p);
   static void deleteArray_TSnDatabase(void *p);
   static void destruct_TSnDatabase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnDatabase*)
   {
      ::TSnDatabase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnDatabase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnDatabase", ::TSnDatabase::Class_Version(), "./db/TSnDatabase.h", 12,
                  typeid(::TSnDatabase), DefineBehavior(ptr, ptr),
                  &::TSnDatabase::Dictionary, isa_proxy, 4,
                  sizeof(::TSnDatabase) );
      instance.SetNew(&new_TSnDatabase);
      instance.SetNewArray(&newArray_TSnDatabase);
      instance.SetDelete(&delete_TSnDatabase);
      instance.SetDeleteArray(&deleteArray_TSnDatabase);
      instance.SetDestructor(&destruct_TSnDatabase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnDatabase*)
   {
      return GenerateInitInstanceLocal((::TSnDatabase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnDatabase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSnConnection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnConnection::Class_Name()
{
   return "TSnConnection";
}

//______________________________________________________________________________
const char *TSnConnection::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnConnection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnConnection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnConnection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnConnection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnConnection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnConnection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnConnection*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnDbKey::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnDbKey::Class_Name()
{
   return "TSnDbKey";
}

//______________________________________________________________________________
const char *TSnDbKey::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnDbKey*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnDbKey::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnDbKey*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnDbKey::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnDbKey*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnDbKey::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnDbKey*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnDatabase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnDatabase::Class_Name()
{
   return "TSnDatabase";
}

//______________________________________________________________________________
const char *TSnDatabase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnDatabase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnDatabase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnDatabase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnDatabase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnDatabase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnDatabase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnDatabase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSnDatabase::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnDatabase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnDatabase::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnDatabase::Class(),this);
   }
}

//______________________________________________________________________________
void TSnDatabase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnDatabase.
      TClass *R__cl = ::TSnDatabase::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fConnections", &fConnections);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCache", &fCache);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnDatabase(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSnDatabase : new ::TSnDatabase;
   }
   static void *newArray_TSnDatabase(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSnDatabase[nElements] : new ::TSnDatabase[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnDatabase(void *p) {
      delete ((::TSnDatabase*)p);
   }
   static void deleteArray_TSnDatabase(void *p) {
      delete [] ((::TSnDatabase*)p);
   }
   static void destruct_TSnDatabase(void *p) {
      typedef ::TSnDatabase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnDatabase

//______________________________________________________________________________
void TSnConnection::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnConnection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnConnection::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnConnection::Class(),this);
   }
}

//______________________________________________________________________________
void TSnConnection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnConnection.
      TClass *R__cl = ::TSnConnection::IsA();
      if (R__cl || R__insp.IsA()) { }
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSnConnection(void *p) {
      delete ((::TSnConnection*)p);
   }
   static void deleteArray_TSnConnection(void *p) {
      delete [] ((::TSnConnection*)p);
   }
   static void destruct_TSnConnection(void *p) {
      typedef ::TSnConnection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnConnection

//______________________________________________________________________________
void TSnDbKey::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnDbKey.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnDbKey::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnDbKey::Class(),this);
   }
}

//______________________________________________________________________________
void TSnDbKey::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnDbKey.
      TClass *R__cl = ::TSnDbKey::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSnDbKey(void *p) {
      delete ((::TSnDbKey*)p);
   }
   static void deleteArray_TSnDbKey(void *p) {
      delete [] ((::TSnDbKey*)p);
   }
   static void destruct_TSnDbKey(void *p) {
      typedef ::TSnDbKey current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnDbKey

/********************************************************
* db/G__db.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__db();

extern "C" void G__set_cpp_environmentG__db() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("db/TSnDatabase.h");
  G__add_compiledheader("db/NSnDatabase.h");
  G__add_compiledheader("db/TSnConnection.h");
  G__add_compiledheader("db/TSnDbKey.h");
  G__cpp_reset_tagtableG__db();
}
#include <new>
extern "C" int G__cpp_dllrevG__db() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* NSnDatabase */

/* TSnConnection */
static int G__G__db_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnConnection*) G__getstructoffset())->IsOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnConnection*) G__getstructoffset())->Disconnect();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSnConnection*) G__getstructoffset())->Open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnConnection*) G__getstructoffset())->Activate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnConnection*) G__getstructoffset())->Deactivate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnConnection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnConnection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnConnection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnConnection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnConnection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnConnection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnConnection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnConnection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnConnection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnConnection G__TTSnConnection;
static int G__G__db_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnConnection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnConnection*) (soff+(sizeof(TSnConnection)*i)))->~G__TTSnConnection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnConnection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnConnection*) (soff))->~G__TTSnConnection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__db_172_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnConnection* dest = (TSnConnection*) G__getstructoffset();
   *dest = *(TSnConnection*) libp->para[0].ref;
   const TSnConnection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnDbKey */
static int G__G__db_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnDbKey*) G__getstructoffset())->AsString();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnDbKey*) G__getstructoffset())->IsSameClass(*(TObject*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnDbKey::GetSQLTimestampUTC(*(TTimeStamp*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TSnDbKey::GetTimestampFromStr(*(TTimeStamp*) libp->para[0].ref, (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnDbKey::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnDbKey::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnDbKey::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnDbKey::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnDbKey*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnDbKey::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnDbKey::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnDbKey::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnDbKey::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnDbKey G__TTSnDbKey;
static int G__G__db_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnDbKey*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnDbKey*) (soff+(sizeof(TSnDbKey)*i)))->~G__TTSnDbKey();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnDbKey*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnDbKey*) (soff))->~G__TTSnDbKey();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__db_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnDbKey* dest = (TSnDbKey*) G__getstructoffset();
   *dest = *(TSnDbKey*) libp->para[0].ref;
   const TSnDbKey& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnDatabase */
static int G__G__db_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnDatabase* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnDatabase[n];
     } else {
       p = new((void*) gvp) TSnDatabase[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnDatabase;
     } else {
       p = new((void*) gvp) TSnDatabase;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__dbLN_TSnDatabase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnDatabase* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnDatabase((const Bool_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnDatabase((const Bool_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__dbLN_TSnDatabase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSnDatabase*) G__getstructoffset())->OpenConnection((TSnConnection*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnDatabase*) G__getstructoffset())->GetConnection((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSnDatabase*) G__getstructoffset())->GetConnection((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnDatabase*) G__getstructoffset())->CloseConnection((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TObject& obj = ((TSnDatabase*) G__getstructoffset())->Get(*(TSnDbKey*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSnDatabase*) G__getstructoffset())->WriteNoCache(*(TSnDbKey*) libp->para[0].ref, *(TObject*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TSnDatabase*) G__getstructoffset())->Write(*(TSnDbKey*) libp->para[0].ref, *(TObject*) libp->para[1].ref
, (const Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TSnDatabase*) G__getstructoffset())->Write(*(TSnDbKey*) libp->para[0].ref, *(TObject*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSnDatabase*) G__getstructoffset())->Reclaim(*(TSnDbKey*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSnDatabase& obj = TSnDatabase::GetDB();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnDatabase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnDatabase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnDatabase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnDatabase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnDatabase*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnDatabase*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnDatabase*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnDatabase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnDatabase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnDatabase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnDatabase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__db_174_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnDatabase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__db_174_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnDatabase* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnDatabase(*(TSnDatabase*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__dbLN_TSnDatabase));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnDatabase G__TTSnDatabase;
static int G__G__db_174_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnDatabase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnDatabase*) (soff+(sizeof(TSnDatabase)*i)))->~G__TTSnDatabase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnDatabase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnDatabase*) (soff))->~G__TTSnDatabase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__db_174_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnDatabase* dest = (TSnDatabase*) G__getstructoffset();
   *dest = *(TSnDatabase*) libp->para[0].ref;
   const TSnDatabase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* NSnDatabase */

/* TSnConnection */

/* TSnDbKey */

/* TSnDatabase */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__db {
 public:
  G__Sizep2memfuncG__db(): p(&G__Sizep2memfuncG__db::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__db::*p)();
};

size_t G__get_sizep2memfuncG__db()
{
  G__Sizep2memfuncG__db a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__db() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__dbLN_TSnConnection))) {
     TSnConnection *G__Lderived;
     G__Lderived=(TSnConnection*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__dbLN_TSnConnection),G__get_linked_tagnum(&G__G__dbLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__dbLN_TSnConnection),G__get_linked_tagnum(&G__G__dbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__dbLN_TSnDbKey))) {
     TSnDbKey *G__Lderived;
     G__Lderived=(TSnDbKey*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__dbLN_TSnDbKey),G__get_linked_tagnum(&G__G__dbLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__db() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__dbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__dbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__dbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__dbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__dbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__dbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__dbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__dbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__dbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__dbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* NSnDatabase */
static void G__setup_memvarNSnDatabase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__dbLN_NSnDatabase));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__dbLN_NSnDatabasecLcLEWriteType),-1,-2,1,G__FastAllocString(4096).Format("kWrtUndef=%lldLL",(long long)NSnDatabase::kWrtUndef).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__dbLN_NSnDatabasecLcLEWriteType),-1,-2,1,G__FastAllocString(4096).Format("kInsert=%lldLL",(long long)NSnDatabase::kInsert).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__dbLN_NSnDatabasecLcLEWriteType),-1,-2,1,G__FastAllocString(4096).Format("kUpdate=%lldLL",(long long)NSnDatabase::kUpdate).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__dbLN_NSnDatabasecLcLEWriteType),-1,-2,1,G__FastAllocString(4096).Format("kNotWritten=%lldLL",(long long)NSnDatabase::kNotWritten).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnConnection */
static void G__setup_memvarTSnConnection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__dbLN_TSnConnection));
   { TSnConnection *p; p=(TSnConnection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__dbLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnDbKey */
static void G__setup_memvarTSnDbKey(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__dbLN_TSnDbKey));
   { TSnDbKey *p; p=(TSnDbKey*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__dbLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnDatabase */
static void G__setup_memvarTSnDatabase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__dbLN_TSnDatabase));
   { TSnDatabase *p; p=(TSnDatabase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__dbLN_THashTable),-1,-1,4,"fConnections=",0,"the list of connections");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__dbLN_TMap),-1,-1,4,"fCache=",0,"cache of data already obtained from DB");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__dbLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__db() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncNSnDatabase(void) {
   /* NSnDatabase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__dbLN_NSnDatabase));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnConnection(void) {
   /* TSnConnection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__dbLN_TSnConnection));
   G__memfunc_setup("IsOpen",590,G__G__db_172_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Disconnect",1034,G__G__db_172_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Open",402,G__G__db_172_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Activate",817,G__G__db_172_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Deactivate",1018,G__G__db_172_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__G__db_172_0_8, 85, G__get_linked_tagnum(&G__G__dbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnConnection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__db_172_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnConnection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__db_172_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnConnection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__db_172_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnConnection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__dbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__db_172_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__db_172_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnConnection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__db_172_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnConnection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__db_172_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnConnection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__db_172_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnConnection::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSnConnection", 1443, G__G__db_172_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__db_172_0_21, (int) ('u'), G__get_linked_tagnum(&G__G__dbLN_TSnConnection), -1, 1, 1, 1, 1, 0, "u 'TSnConnection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnDbKey(void) {
   /* TSnDbKey */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__dbLN_TSnDbKey));
   G__memfunc_setup("GetFromDb",858,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__G__dbLN_TObject), -1, 0, 1, 1, 2, 0, "u 'TSnDatabase' - 1 - db", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("WriteToDb",884,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__dbLN_NSnDatabasecLcLEWriteType), -1, 0, 2, 1, 2, 0, 
"u 'TSnDatabase' - 1 - db u 'TObject' - 11 - obj", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsEqual",692,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Hash",388,(G__InterfaceMethod) NULL,107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AsString",811,G__G__db_173_0_6, 117, G__get_linked_tagnum(&G__G__dbLN_TString), -1, 0, 0, 1, 1, 8, "", "convert this key into a string", (void*) NULL, 3);
   G__memfunc_setup("IsSameClass",1080,G__G__db_173_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TObject' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSQLTimestampUTC",1712,G__G__db_173_0_8, 67, -1, G__defined_typename("Char_t"), 0, 1, 3, 1, 1, "u 'TTimeStamp' - 11 - ts", (char*)NULL, (void*) G__func2void( (const Char_t* (*)(const TTimeStamp&))(&TSnDbKey::GetSQLTimestampUTC) ), 0);
   G__memfunc_setup("GetTimestampFromStr",1953,G__G__db_173_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"u 'TTimeStamp' - 1 - ts C - 'Char_t' 10 - result", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TTimeStamp&, const Char_t*))(&TSnDbKey::GetTimestampFromStr) ), 0);
   G__memfunc_setup("Class",502,G__G__db_173_0_10, 85, G__get_linked_tagnum(&G__G__dbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnDbKey::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__db_173_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnDbKey::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__db_173_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnDbKey::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__db_173_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnDbKey::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__dbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__db_173_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__db_173_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnDbKey::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__db_173_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnDbKey::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__db_173_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnDbKey::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__db_173_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnDbKey::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSnDbKey", 866, G__G__db_173_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__db_173_0_23, (int) ('u'), G__get_linked_tagnum(&G__G__dbLN_TSnDbKey), -1, 1, 1, 1, 1, 0, "u 'TSnDbKey' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnDatabase(void) {
   /* TSnDatabase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__dbLN_TSnDatabase));
   G__memfunc_setup("AddToCache",928,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'TSnDbKey' - 11 - key u 'TObject' - 1 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnDatabase",1066,G__G__db_174_0_2, 105, G__get_linked_tagnum(&G__G__dbLN_TSnDatabase), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnDatabase",1066,G__G__db_174_0_3, 105, G__get_linked_tagnum(&G__G__dbLN_TSnDatabase), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 - -", "this one allocates memory", (void*) NULL, 0);
   G__memfunc_setup("OpenConnection",1442,G__G__db_174_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TSnConnection' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConnection",1328,G__G__db_174_0_5, 85, G__get_linked_tagnum(&G__G__dbLN_TSnConnection), -1, 0, 1, 1, 1, 9, "C - 'Char_t' 10 - cname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConnection",1328,G__G__db_174_0_6, 85, G__get_linked_tagnum(&G__G__dbLN_TSnConnection), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - cname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseConnection",1542,G__G__db_174_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - cname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__G__db_174_0_8, 117, G__get_linked_tagnum(&G__G__dbLN_TObject), -1, 1, 1, 1, 1, 1, "u 'TSnDbKey' - 1 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteNoCache",1180,G__G__db_174_0_9, 105, G__get_linked_tagnum(&G__G__dbLN_NSnDatabasecLcLEWriteType), -1, 0, 2, 1, 1, 0, 
"u 'TSnDbKey' - 1 - key u 'TObject' - 11 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__G__db_174_0_10, 105, G__get_linked_tagnum(&G__G__dbLN_NSnDatabasecLcLEWriteType), -1, 0, 3, 1, 1, 0, 
"u 'TSnDbKey' - 1 - key u 'TObject' - 1 - obj "
"g - 'Bool_t' 10 'kTRUE' cache", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reclaim",701,G__G__db_174_0_11, 85, G__get_linked_tagnum(&G__G__dbLN_TObject), -1, 0, 1, 1, 1, 0, "u 'TSnDbKey' - 1 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDB",422,G__G__db_174_0_12, 117, G__get_linked_tagnum(&G__G__dbLN_TSnDatabase), -1, 1, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TSnDatabase& (*)())(&TSnDatabase::GetDB) ), 0);
   G__memfunc_setup("Class",502,G__G__db_174_0_13, 85, G__get_linked_tagnum(&G__G__dbLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnDatabase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__db_174_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnDatabase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__db_174_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnDatabase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__db_174_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnDatabase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__db_174_0_17, 85, G__get_linked_tagnum(&G__G__dbLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__db_174_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__db_174_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__db_174_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__db_174_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnDatabase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__db_174_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnDatabase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__db_174_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnDatabase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__db_174_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnDatabase::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnDatabase", 1066, G__G__db_174_0_25, (int) ('i'), G__get_linked_tagnum(&G__G__dbLN_TSnDatabase), -1, 0, 1, 1, 1, 0, "u 'TSnDatabase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnDatabase", 1192, G__G__db_174_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__db_174_0_27, (int) ('u'), G__get_linked_tagnum(&G__G__dbLN_TSnDatabase), -1, 1, 1, 1, 1, 0, "u 'TSnDatabase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__db() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__db() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__db() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__dbLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__dbLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__dbLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__dbLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__dbLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__dbLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__dbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__dbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__dbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__dbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__dbLN_THashTable = { "THashTable" , 99 , -1 };
G__linked_taginfo G__G__dbLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__G__dbLN_NSnDatabase = { "NSnDatabase" , 110 , -1 };
G__linked_taginfo G__G__dbLN_NSnDatabasecLcLEWriteType = { "NSnDatabase::EWriteType" , 101 , -1 };
G__linked_taginfo G__G__dbLN_TSnConnection = { "TSnConnection" , 99 , -1 };
G__linked_taginfo G__G__dbLN_TSnDbKey = { "TSnDbKey" , 99 , -1 };
G__linked_taginfo G__G__dbLN_TSnDatabase = { "TSnDatabase" , 99 , -1 };
G__linked_taginfo G__G__dbLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__db() {
  G__G__dbLN_TClass.tagnum = -1 ;
  G__G__dbLN_TBuffer.tagnum = -1 ;
  G__G__dbLN_TMemberInspector.tagnum = -1 ;
  G__G__dbLN_TObject.tagnum = -1 ;
  G__G__dbLN_TNamed.tagnum = -1 ;
  G__G__dbLN_TString.tagnum = -1 ;
  G__G__dbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__dbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__dbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__dbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__dbLN_THashTable.tagnum = -1 ;
  G__G__dbLN_TMap.tagnum = -1 ;
  G__G__dbLN_NSnDatabase.tagnum = -1 ;
  G__G__dbLN_NSnDatabasecLcLEWriteType.tagnum = -1 ;
  G__G__dbLN_TSnConnection.tagnum = -1 ;
  G__G__dbLN_TSnDbKey.tagnum = -1 ;
  G__G__dbLN_TSnDatabase.tagnum = -1 ;
  G__G__dbLN_TTimeStamp.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__db() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__dbLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__dbLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__dbLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__dbLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__dbLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__dbLN_TString);
   G__get_linked_tagnum_fwd(&G__G__dbLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__dbLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__dbLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__dbLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__dbLN_THashTable);
   G__get_linked_tagnum_fwd(&G__G__dbLN_TMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__dbLN_NSnDatabase),0,-1,0,(char*)NULL,G__setup_memvarNSnDatabase,G__setup_memfuncNSnDatabase);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__dbLN_NSnDatabasecLcLEWriteType),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__dbLN_TSnConnection),sizeof(TSnConnection),-1,324869,(char*)NULL,G__setup_memvarTSnConnection,G__setup_memfuncTSnConnection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__dbLN_TSnDbKey),sizeof(TSnDbKey),-1,292100,"ABC for database keys",G__setup_memvarTSnDbKey,G__setup_memfuncTSnDbKey);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__dbLN_TSnDatabase),sizeof(TSnDatabase),-1,296192,"a database",G__setup_memvarTSnDatabase,G__setup_memfuncTSnDatabase);
   G__get_linked_tagnum_fwd(&G__G__dbLN_TTimeStamp);
}
extern "C" void G__cpp_setupG__db(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__db()");
  G__set_cpp_environmentG__db();
  G__cpp_setup_tagtableG__db();

  G__cpp_setup_inheritanceG__db();

  G__cpp_setup_typetableG__db();

  G__cpp_setup_memvarG__db();

  G__cpp_setup_memfuncG__db();
  G__cpp_setup_globalG__db();
  G__cpp_setup_funcG__db();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__db();
  return;
}
class G__cpp_setup_initG__db {
  public:
    G__cpp_setup_initG__db() { G__add_setup_func("G__db",(G__incsetup)(&G__cpp_setupG__db)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__db() { G__remove_setup_func("G__db"); }
};
G__cpp_setup_initG__db G__cpp_setup_initializerG__db;

