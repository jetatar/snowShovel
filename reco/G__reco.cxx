//
// File generated by /data/users/jtatar/Software/root/bin/rootcint at Wed Apr 30 16:57:15 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME recodIG__reco
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__reco.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace NSnChanCorl {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NSnChanCorl_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("NSnChanCorl", 0 /*version*/, "./reco/NSnChanCorl.h", 11,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NSnChanCorl_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NSnChanCorl_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void TSnMinimizer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnMinimizer(void *p = 0);
   static void *newArray_TSnMinimizer(Long_t size, void *p);
   static void delete_TSnMinimizer(void *p);
   static void deleteArray_TSnMinimizer(void *p);
   static void destruct_TSnMinimizer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnMinimizer*)
   {
      ::TSnMinimizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnMinimizer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnMinimizer", ::TSnMinimizer::Class_Version(), "./reco/TSnMinimizer.h", 12,
                  typeid(::TSnMinimizer), DefineBehavior(ptr, ptr),
                  &::TSnMinimizer::Dictionary, isa_proxy, 4,
                  sizeof(::TSnMinimizer) );
      instance.SetNew(&new_TSnMinimizer);
      instance.SetNewArray(&newArray_TSnMinimizer);
      instance.SetDelete(&delete_TSnMinimizer);
      instance.SetDeleteArray(&deleteArray_TSnMinimizer);
      instance.SetDestructor(&destruct_TSnMinimizer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnMinimizer*)
   {
      return GenerateInitInstanceLocal((::TSnMinimizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnMinimizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnFittingModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnFittingModule(void *p = 0);
   static void *newArray_TSnFittingModule(Long_t size, void *p);
   static void delete_TSnFittingModule(void *p);
   static void deleteArray_TSnFittingModule(void *p);
   static void destruct_TSnFittingModule(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnFittingModule*)
   {
      ::TSnFittingModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnFittingModule >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnFittingModule", ::TSnFittingModule::Class_Version(), "./reco/TSnFittingModule.h", 17,
                  typeid(::TSnFittingModule), DefineBehavior(ptr, ptr),
                  &::TSnFittingModule::Dictionary, isa_proxy, 4,
                  sizeof(::TSnFittingModule) );
      instance.SetNew(&new_TSnFittingModule);
      instance.SetNewArray(&newArray_TSnFittingModule);
      instance.SetDelete(&delete_TSnFittingModule);
      instance.SetDeleteArray(&deleteArray_TSnFittingModule);
      instance.SetDestructor(&destruct_TSnFittingModule);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnFittingModule*)
   {
      return GenerateInitInstanceLocal((::TSnFittingModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnFittingModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnChanTimeCorlMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnChanTimeCorlMod(void *p = 0);
   static void *newArray_TSnChanTimeCorlMod(Long_t size, void *p);
   static void delete_TSnChanTimeCorlMod(void *p);
   static void deleteArray_TSnChanTimeCorlMod(void *p);
   static void destruct_TSnChanTimeCorlMod(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnChanTimeCorlMod*)
   {
      ::TSnChanTimeCorlMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnChanTimeCorlMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnChanTimeCorlMod", ::TSnChanTimeCorlMod::Class_Version(), "./reco/TSnChanTimeCorlMod.h", 10,
                  typeid(::TSnChanTimeCorlMod), DefineBehavior(ptr, ptr),
                  &::TSnChanTimeCorlMod::Dictionary, isa_proxy, 4,
                  sizeof(::TSnChanTimeCorlMod) );
      instance.SetNew(&new_TSnChanTimeCorlMod);
      instance.SetNewArray(&newArray_TSnChanTimeCorlMod);
      instance.SetDelete(&delete_TSnChanTimeCorlMod);
      instance.SetDeleteArray(&deleteArray_TSnChanTimeCorlMod);
      instance.SetDestructor(&destruct_TSnChanTimeCorlMod);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnChanTimeCorlMod*)
   {
      return GenerateInitInstanceLocal((::TSnChanTimeCorlMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnChanTimeCorlMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnFitChanOffsetMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnFitChanOffsetMod(void *p = 0);
   static void *newArray_TSnFitChanOffsetMod(Long_t size, void *p);
   static void delete_TSnFitChanOffsetMod(void *p);
   static void deleteArray_TSnFitChanOffsetMod(void *p);
   static void destruct_TSnFitChanOffsetMod(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnFitChanOffsetMod*)
   {
      ::TSnFitChanOffsetMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnFitChanOffsetMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnFitChanOffsetMod", ::TSnFitChanOffsetMod::Class_Version(), "./reco/TSnFitChanOffsetMod.h", 10,
                  typeid(::TSnFitChanOffsetMod), DefineBehavior(ptr, ptr),
                  &::TSnFitChanOffsetMod::Dictionary, isa_proxy, 4,
                  sizeof(::TSnFitChanOffsetMod) );
      instance.SetNew(&new_TSnFitChanOffsetMod);
      instance.SetNewArray(&newArray_TSnFitChanOffsetMod);
      instance.SetDelete(&delete_TSnFitChanOffsetMod);
      instance.SetDeleteArray(&deleteArray_TSnFitChanOffsetMod);
      instance.SetDestructor(&destruct_TSnFitChanOffsetMod);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnFitChanOffsetMod*)
   {
      return GenerateInitInstanceLocal((::TSnFitChanOffsetMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnFitChanOffsetMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnChanTimeCorlAltEvtsMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnChanTimeCorlAltEvtsMod(void *p = 0);
   static void *newArray_TSnChanTimeCorlAltEvtsMod(Long_t size, void *p);
   static void delete_TSnChanTimeCorlAltEvtsMod(void *p);
   static void deleteArray_TSnChanTimeCorlAltEvtsMod(void *p);
   static void destruct_TSnChanTimeCorlAltEvtsMod(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnChanTimeCorlAltEvtsMod*)
   {
      ::TSnChanTimeCorlAltEvtsMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnChanTimeCorlAltEvtsMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnChanTimeCorlAltEvtsMod", ::TSnChanTimeCorlAltEvtsMod::Class_Version(), "./reco/TSnChanTimeCorlAltEvtsMod.h", 9,
                  typeid(::TSnChanTimeCorlAltEvtsMod), DefineBehavior(ptr, ptr),
                  &::TSnChanTimeCorlAltEvtsMod::Dictionary, isa_proxy, 4,
                  sizeof(::TSnChanTimeCorlAltEvtsMod) );
      instance.SetNew(&new_TSnChanTimeCorlAltEvtsMod);
      instance.SetNewArray(&newArray_TSnChanTimeCorlAltEvtsMod);
      instance.SetDelete(&delete_TSnChanTimeCorlAltEvtsMod);
      instance.SetDeleteArray(&deleteArray_TSnChanTimeCorlAltEvtsMod);
      instance.SetDestructor(&destruct_TSnChanTimeCorlAltEvtsMod);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnChanTimeCorlAltEvtsMod*)
   {
      return GenerateInitInstanceLocal((::TSnChanTimeCorlAltEvtsMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnChanTimeCorlAltEvtsMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnFitChanOffsetAltEvtsMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnFitChanOffsetAltEvtsMod(void *p = 0);
   static void *newArray_TSnFitChanOffsetAltEvtsMod(Long_t size, void *p);
   static void delete_TSnFitChanOffsetAltEvtsMod(void *p);
   static void deleteArray_TSnFitChanOffsetAltEvtsMod(void *p);
   static void destruct_TSnFitChanOffsetAltEvtsMod(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnFitChanOffsetAltEvtsMod*)
   {
      ::TSnFitChanOffsetAltEvtsMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnFitChanOffsetAltEvtsMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnFitChanOffsetAltEvtsMod", ::TSnFitChanOffsetAltEvtsMod::Class_Version(), "./reco/TSnFitChanOffsetAltEvtsMod.h", 13,
                  typeid(::TSnFitChanOffsetAltEvtsMod), DefineBehavior(ptr, ptr),
                  &::TSnFitChanOffsetAltEvtsMod::Dictionary, isa_proxy, 4,
                  sizeof(::TSnFitChanOffsetAltEvtsMod) );
      instance.SetNew(&new_TSnFitChanOffsetAltEvtsMod);
      instance.SetNewArray(&newArray_TSnFitChanOffsetAltEvtsMod);
      instance.SetDelete(&delete_TSnFitChanOffsetAltEvtsMod);
      instance.SetDeleteArray(&deleteArray_TSnFitChanOffsetAltEvtsMod);
      instance.SetDestructor(&destruct_TSnFitChanOffsetAltEvtsMod);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnFitChanOffsetAltEvtsMod*)
   {
      return GenerateInitInstanceLocal((::TSnFitChanOffsetAltEvtsMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnFitChanOffsetAltEvtsMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnAngleFromChanCorlMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnAngleFromChanCorlMod(void *p = 0);
   static void *newArray_TSnAngleFromChanCorlMod(Long_t size, void *p);
   static void delete_TSnAngleFromChanCorlMod(void *p);
   static void deleteArray_TSnAngleFromChanCorlMod(void *p);
   static void destruct_TSnAngleFromChanCorlMod(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnAngleFromChanCorlMod*)
   {
      ::TSnAngleFromChanCorlMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnAngleFromChanCorlMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnAngleFromChanCorlMod", ::TSnAngleFromChanCorlMod::Class_Version(), "./reco/TSnAngleFromChanCorlMod.h", 13,
                  typeid(::TSnAngleFromChanCorlMod), DefineBehavior(ptr, ptr),
                  &::TSnAngleFromChanCorlMod::Dictionary, isa_proxy, 4,
                  sizeof(::TSnAngleFromChanCorlMod) );
      instance.SetNew(&new_TSnAngleFromChanCorlMod);
      instance.SetNewArray(&newArray_TSnAngleFromChanCorlMod);
      instance.SetDelete(&delete_TSnAngleFromChanCorlMod);
      instance.SetDeleteArray(&deleteArray_TSnAngleFromChanCorlMod);
      instance.SetDestructor(&destruct_TSnAngleFromChanCorlMod);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnAngleFromChanCorlMod*)
   {
      return GenerateInitInstanceLocal((::TSnAngleFromChanCorlMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnAngleFromChanCorlMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnAngleFromSingleChanOffsets_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnAngleFromSingleChanOffsets(void *p = 0);
   static void *newArray_TSnAngleFromSingleChanOffsets(Long_t size, void *p);
   static void delete_TSnAngleFromSingleChanOffsets(void *p);
   static void deleteArray_TSnAngleFromSingleChanOffsets(void *p);
   static void destruct_TSnAngleFromSingleChanOffsets(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnAngleFromSingleChanOffsets*)
   {
      ::TSnAngleFromSingleChanOffsets *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnAngleFromSingleChanOffsets >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnAngleFromSingleChanOffsets", ::TSnAngleFromSingleChanOffsets::Class_Version(), "./reco/TSnAngleFromSingleChanOffsets.h", 16,
                  typeid(::TSnAngleFromSingleChanOffsets), DefineBehavior(ptr, ptr),
                  &::TSnAngleFromSingleChanOffsets::Dictionary, isa_proxy, 4,
                  sizeof(::TSnAngleFromSingleChanOffsets) );
      instance.SetNew(&new_TSnAngleFromSingleChanOffsets);
      instance.SetNewArray(&newArray_TSnAngleFromSingleChanOffsets);
      instance.SetDelete(&delete_TSnAngleFromSingleChanOffsets);
      instance.SetDeleteArray(&deleteArray_TSnAngleFromSingleChanOffsets);
      instance.SetDestructor(&destruct_TSnAngleFromSingleChanOffsets);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnAngleFromSingleChanOffsets*)
   {
      return GenerateInitInstanceLocal((::TSnAngleFromSingleChanOffsets*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnAngleFromSingleChanOffsets*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnSaveRecoResultsMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnSaveRecoResultsMod(void *p = 0);
   static void *newArray_TSnSaveRecoResultsMod(Long_t size, void *p);
   static void delete_TSnSaveRecoResultsMod(void *p);
   static void deleteArray_TSnSaveRecoResultsMod(void *p);
   static void destruct_TSnSaveRecoResultsMod(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnSaveRecoResultsMod*)
   {
      ::TSnSaveRecoResultsMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnSaveRecoResultsMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnSaveRecoResultsMod", ::TSnSaveRecoResultsMod::Class_Version(), "./reco/TSnSaveRecoResultsMod.h", 14,
                  typeid(::TSnSaveRecoResultsMod), DefineBehavior(ptr, ptr),
                  &::TSnSaveRecoResultsMod::Dictionary, isa_proxy, 4,
                  sizeof(::TSnSaveRecoResultsMod) );
      instance.SetNew(&new_TSnSaveRecoResultsMod);
      instance.SetNewArray(&newArray_TSnSaveRecoResultsMod);
      instance.SetDelete(&delete_TSnSaveRecoResultsMod);
      instance.SetDeleteArray(&deleteArray_TSnSaveRecoResultsMod);
      instance.SetDestructor(&destruct_TSnSaveRecoResultsMod);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnSaveRecoResultsMod*)
   {
      return GenerateInitInstanceLocal((::TSnSaveRecoResultsMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnSaveRecoResultsMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnSaveRecoResultsModcLcLTSnRecoResultWrapper_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper(void *p = 0);
   static void *newArray_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper(Long_t size, void *p);
   static void delete_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper(void *p);
   static void deleteArray_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper(void *p);
   static void destruct_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnSaveRecoResultsMod::TSnRecoResultWrapper*)
   {
      ::TSnSaveRecoResultsMod::TSnRecoResultWrapper *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnSaveRecoResultsMod::TSnRecoResultWrapper >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnSaveRecoResultsMod::TSnRecoResultWrapper", ::TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class_Version(), "./reco/TSnSaveRecoResultsMod.h", 16,
                  typeid(::TSnSaveRecoResultsMod::TSnRecoResultWrapper), DefineBehavior(ptr, ptr),
                  &::TSnSaveRecoResultsMod::TSnRecoResultWrapper::Dictionary, isa_proxy, 4,
                  sizeof(::TSnSaveRecoResultsMod::TSnRecoResultWrapper) );
      instance.SetNew(&new_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper);
      instance.SetNewArray(&newArray_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper);
      instance.SetDelete(&delete_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper);
      instance.SetDeleteArray(&deleteArray_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper);
      instance.SetDestructor(&destruct_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnSaveRecoResultsMod::TSnRecoResultWrapper*)
   {
      return GenerateInitInstanceLocal((::TSnSaveRecoResultsMod::TSnRecoResultWrapper*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnSaveRecoResultsMod::TSnRecoResultWrapper*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnSaveCorlDataMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnSaveCorlDataMod(void *p = 0);
   static void *newArray_TSnSaveCorlDataMod(Long_t size, void *p);
   static void delete_TSnSaveCorlDataMod(void *p);
   static void deleteArray_TSnSaveCorlDataMod(void *p);
   static void destruct_TSnSaveCorlDataMod(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnSaveCorlDataMod*)
   {
      ::TSnSaveCorlDataMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnSaveCorlDataMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnSaveCorlDataMod", ::TSnSaveCorlDataMod::Class_Version(), "./reco/TSnSaveCorlDataMod.h", 13,
                  typeid(::TSnSaveCorlDataMod), DefineBehavior(ptr, ptr),
                  &::TSnSaveCorlDataMod::Dictionary, isa_proxy, 4,
                  sizeof(::TSnSaveCorlDataMod) );
      instance.SetNew(&new_TSnSaveCorlDataMod);
      instance.SetNewArray(&newArray_TSnSaveCorlDataMod);
      instance.SetDelete(&delete_TSnSaveCorlDataMod);
      instance.SetDeleteArray(&deleteArray_TSnSaveCorlDataMod);
      instance.SetDestructor(&destruct_TSnSaveCorlDataMod);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnSaveCorlDataMod*)
   {
      return GenerateInitInstanceLocal((::TSnSaveCorlDataMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnSaveCorlDataMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSnMinimizer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnMinimizer::Class_Name()
{
   return "TSnMinimizer";
}

//______________________________________________________________________________
const char *TSnMinimizer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnMinimizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnMinimizer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnMinimizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnMinimizer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnMinimizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnMinimizer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnMinimizer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnFittingModule::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnFittingModule::Class_Name()
{
   return "TSnFittingModule";
}

//______________________________________________________________________________
const char *TSnFittingModule::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnFittingModule*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnFittingModule::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnFittingModule*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnFittingModule::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnFittingModule*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnFittingModule::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnFittingModule*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnChanTimeCorlMod::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnChanTimeCorlMod::Class_Name()
{
   return "TSnChanTimeCorlMod";
}

//______________________________________________________________________________
const char *TSnChanTimeCorlMod::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnChanTimeCorlMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnChanTimeCorlMod::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnChanTimeCorlMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnChanTimeCorlMod::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnChanTimeCorlMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnChanTimeCorlMod::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnChanTimeCorlMod*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnFitChanOffsetMod::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnFitChanOffsetMod::Class_Name()
{
   return "TSnFitChanOffsetMod";
}

//______________________________________________________________________________
const char *TSnFitChanOffsetMod::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnFitChanOffsetMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnFitChanOffsetMod::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnFitChanOffsetMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnFitChanOffsetMod::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnFitChanOffsetMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnFitChanOffsetMod::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnFitChanOffsetMod*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnChanTimeCorlAltEvtsMod::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnChanTimeCorlAltEvtsMod::Class_Name()
{
   return "TSnChanTimeCorlAltEvtsMod";
}

//______________________________________________________________________________
const char *TSnChanTimeCorlAltEvtsMod::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnChanTimeCorlAltEvtsMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnChanTimeCorlAltEvtsMod::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnChanTimeCorlAltEvtsMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnChanTimeCorlAltEvtsMod::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnChanTimeCorlAltEvtsMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnChanTimeCorlAltEvtsMod::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnChanTimeCorlAltEvtsMod*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnFitChanOffsetAltEvtsMod::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnFitChanOffsetAltEvtsMod::Class_Name()
{
   return "TSnFitChanOffsetAltEvtsMod";
}

//______________________________________________________________________________
const char *TSnFitChanOffsetAltEvtsMod::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnFitChanOffsetAltEvtsMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnFitChanOffsetAltEvtsMod::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnFitChanOffsetAltEvtsMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnFitChanOffsetAltEvtsMod::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnFitChanOffsetAltEvtsMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnFitChanOffsetAltEvtsMod::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnFitChanOffsetAltEvtsMod*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnAngleFromChanCorlMod::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnAngleFromChanCorlMod::Class_Name()
{
   return "TSnAngleFromChanCorlMod";
}

//______________________________________________________________________________
const char *TSnAngleFromChanCorlMod::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnAngleFromChanCorlMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnAngleFromChanCorlMod::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnAngleFromChanCorlMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnAngleFromChanCorlMod::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnAngleFromChanCorlMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnAngleFromChanCorlMod::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnAngleFromChanCorlMod*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnAngleFromSingleChanOffsets::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnAngleFromSingleChanOffsets::Class_Name()
{
   return "TSnAngleFromSingleChanOffsets";
}

//______________________________________________________________________________
const char *TSnAngleFromSingleChanOffsets::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnAngleFromSingleChanOffsets*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnAngleFromSingleChanOffsets::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnAngleFromSingleChanOffsets*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnAngleFromSingleChanOffsets::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnAngleFromSingleChanOffsets*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnAngleFromSingleChanOffsets::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnAngleFromSingleChanOffsets*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnSaveRecoResultsMod::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnSaveRecoResultsMod::Class_Name()
{
   return "TSnSaveRecoResultsMod";
}

//______________________________________________________________________________
const char *TSnSaveRecoResultsMod::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveRecoResultsMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnSaveRecoResultsMod::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveRecoResultsMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnSaveRecoResultsMod::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveRecoResultsMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnSaveRecoResultsMod::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveRecoResultsMod*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnSaveRecoResultsMod::TSnRecoResultWrapper::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class_Name()
{
   return "TSnSaveRecoResultsMod::TSnRecoResultWrapper";
}

//______________________________________________________________________________
const char *TSnSaveRecoResultsMod::TSnRecoResultWrapper::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveRecoResultsMod::TSnRecoResultWrapper*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnSaveRecoResultsMod::TSnRecoResultWrapper::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveRecoResultsMod::TSnRecoResultWrapper*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnSaveRecoResultsMod::TSnRecoResultWrapper::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveRecoResultsMod::TSnRecoResultWrapper*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveRecoResultsMod::TSnRecoResultWrapper*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnSaveCorlDataMod::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnSaveCorlDataMod::Class_Name()
{
   return "TSnSaveCorlDataMod";
}

//______________________________________________________________________________
const char *TSnSaveCorlDataMod::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveCorlDataMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnSaveCorlDataMod::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveCorlDataMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnSaveCorlDataMod::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveCorlDataMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnSaveCorlDataMod::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSaveCorlDataMod*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSnMinimizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnMinimizer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnMinimizer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnMinimizer::Class(),this);
   }
}

//______________________________________________________________________________
void TSnMinimizer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnMinimizer.
      TClass *R__cl = ::TSnMinimizer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMini", &fMini);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFcn", &fFcn);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnMinimizer(void *p) {
      return  p ? new(p) ::TSnMinimizer : new ::TSnMinimizer;
   }
   static void *newArray_TSnMinimizer(Long_t nElements, void *p) {
      return p ? new(p) ::TSnMinimizer[nElements] : new ::TSnMinimizer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnMinimizer(void *p) {
      delete ((::TSnMinimizer*)p);
   }
   static void deleteArray_TSnMinimizer(void *p) {
      delete [] ((::TSnMinimizer*)p);
   }
   static void destruct_TSnMinimizer(void *p) {
      typedef ::TSnMinimizer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnMinimizer

//______________________________________________________________________________
void TSnFittingModule::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnFittingModule.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnFittingModule::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnFittingModule::Class(),this);
   }
}

//______________________________________________________________________________
void TSnFittingModule::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnFittingModule.
      TClass *R__cl = ::TSnFittingModule::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMiniNm", &fMiniNm);
      R__insp.InspectMember(fMiniNm, "fMiniNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlgoNm", &fAlgoNm);
      R__insp.InspectMember(fAlgoNm, "fAlgoNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMini", &fMini);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnFittingModule(void *p) {
      return  p ? new(p) ::TSnFittingModule : new ::TSnFittingModule;
   }
   static void *newArray_TSnFittingModule(Long_t nElements, void *p) {
      return p ? new(p) ::TSnFittingModule[nElements] : new ::TSnFittingModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnFittingModule(void *p) {
      delete ((::TSnFittingModule*)p);
   }
   static void deleteArray_TSnFittingModule(void *p) {
      delete [] ((::TSnFittingModule*)p);
   }
   static void destruct_TSnFittingModule(void *p) {
      typedef ::TSnFittingModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnFittingModule

//______________________________________________________________________________
void TSnChanTimeCorlMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnChanTimeCorlMod.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnChanTimeCorlMod::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnChanTimeCorlMod::Class(),this);
   }
}

//______________________________________________________________________________
void TSnChanTimeCorlMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnChanTimeCorlMod.
      TClass *R__cl = ::TSnChanTimeCorlMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWvDatNm", &fWvDatNm);
      R__insp.InspectMember(fWvDatNm, "fWvDatNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorlNm", &fCorlNm);
      R__insp.InspectMember(fCorlNm, "fCorlNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDat", &fDat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorls", &fCorls);
      TSnCalDatModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnChanTimeCorlMod(void *p) {
      return  p ? new(p) ::TSnChanTimeCorlMod : new ::TSnChanTimeCorlMod;
   }
   static void *newArray_TSnChanTimeCorlMod(Long_t nElements, void *p) {
      return p ? new(p) ::TSnChanTimeCorlMod[nElements] : new ::TSnChanTimeCorlMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnChanTimeCorlMod(void *p) {
      delete ((::TSnChanTimeCorlMod*)p);
   }
   static void deleteArray_TSnChanTimeCorlMod(void *p) {
      delete [] ((::TSnChanTimeCorlMod*)p);
   }
   static void destruct_TSnChanTimeCorlMod(void *p) {
      typedef ::TSnChanTimeCorlMod current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnChanTimeCorlMod

//______________________________________________________________________________
void TSnFitChanOffsetMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnFitChanOffsetMod.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnFitChanOffsetMod::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnFitChanOffsetMod::Class(),this);
   }
}

//______________________________________________________________________________
void TSnFitChanOffsetMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnFitChanOffsetMod.
      TClass *R__cl = ::TSnFitChanOffsetMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorlNm", &fCorlNm);
      R__insp.InspectMember(fCorlNm, "fCorlNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDtsNm", &fDtsNm);
      R__insp.InspectMember(fDtsNm, "fDtsNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCsig", &fCsig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorl", &fCorl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDts", &fDts);
      TSnFittingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnFitChanOffsetMod(void *p) {
      return  p ? new(p) ::TSnFitChanOffsetMod : new ::TSnFitChanOffsetMod;
   }
   static void *newArray_TSnFitChanOffsetMod(Long_t nElements, void *p) {
      return p ? new(p) ::TSnFitChanOffsetMod[nElements] : new ::TSnFitChanOffsetMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnFitChanOffsetMod(void *p) {
      delete ((::TSnFitChanOffsetMod*)p);
   }
   static void deleteArray_TSnFitChanOffsetMod(void *p) {
      delete [] ((::TSnFitChanOffsetMod*)p);
   }
   static void destruct_TSnFitChanOffsetMod(void *p) {
      typedef ::TSnFitChanOffsetMod current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnFitChanOffsetMod

//______________________________________________________________________________
void TSnChanTimeCorlAltEvtsMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnChanTimeCorlAltEvtsMod.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnChanTimeCorlAltEvtsMod::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnChanTimeCorlAltEvtsMod::Class(),this);
   }
}

//______________________________________________________________________________
void TSnChanTimeCorlAltEvtsMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnChanTimeCorlAltEvtsMod.
      TClass *R__cl = ::TSnChanTimeCorlAltEvtsMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtBrA", &fEvtBrA);
      R__insp.InspectMember(fEvtBrA, "fEvtBrA.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtBrB", &fEvtBrB);
      R__insp.InspectMember(fEvtBrB, "fEvtBrB.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorlNm", &fCorlNm);
      R__insp.InspectMember(fCorlNm, "fCorlNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorlType", &fCorlType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnvNmA", &fEnvNmA);
      R__insp.InspectMember(fEnvNmA, "fEnvNmA.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnvNmB", &fEnvNmB);
      R__insp.InspectMember(fEnvNmB, "fEnvNmB.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDatA", &fDatA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDatB", &fDatB);
      TSnCalDatModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnChanTimeCorlAltEvtsMod(void *p) {
      return  p ? new(p) ::TSnChanTimeCorlAltEvtsMod : new ::TSnChanTimeCorlAltEvtsMod;
   }
   static void *newArray_TSnChanTimeCorlAltEvtsMod(Long_t nElements, void *p) {
      return p ? new(p) ::TSnChanTimeCorlAltEvtsMod[nElements] : new ::TSnChanTimeCorlAltEvtsMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnChanTimeCorlAltEvtsMod(void *p) {
      delete ((::TSnChanTimeCorlAltEvtsMod*)p);
   }
   static void deleteArray_TSnChanTimeCorlAltEvtsMod(void *p) {
      delete [] ((::TSnChanTimeCorlAltEvtsMod*)p);
   }
   static void destruct_TSnChanTimeCorlAltEvtsMod(void *p) {
      typedef ::TSnChanTimeCorlAltEvtsMod current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnChanTimeCorlAltEvtsMod

//______________________________________________________________________________
void TSnFitChanOffsetAltEvtsMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnFitChanOffsetAltEvtsMod.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnFitChanOffsetAltEvtsMod::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnFitChanOffsetAltEvtsMod::Class(),this);
   }
}

//______________________________________________________________________________
void TSnFitChanOffsetAltEvtsMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnFitChanOffsetAltEvtsMod.
      TClass *R__cl = ::TSnFitChanOffsetAltEvtsMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorlNm", &fCorlNm);
      R__insp.InspectMember(fCorlNm, "fCorlNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDtsNm", &fDtsNm);
      R__insp.InspectMember(fDtsNm, "fDtsNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnvNmA", &fEnvNmA);
      R__insp.InspectMember(fEnvNmA, "fEnvNmA.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnvNmB", &fEnvNmB);
      R__insp.InspectMember(fEnvNmB, "fEnvNmB.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitType", &fFitType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnvNoiseCut", &fEnvNoiseCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnvMaxFrac", &fEnvMaxFrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorl", &fCorl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDts", &fDts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnvA", &fEnvA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnvB", &fEnvB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEnvCorl", &fEnvCorl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeta", &fMeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdr", &fHdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNt", &fNt);
      TSnFittingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnFitChanOffsetAltEvtsMod(void *p) {
      return  p ? new(p) ::TSnFitChanOffsetAltEvtsMod : new ::TSnFitChanOffsetAltEvtsMod;
   }
   static void *newArray_TSnFitChanOffsetAltEvtsMod(Long_t nElements, void *p) {
      return p ? new(p) ::TSnFitChanOffsetAltEvtsMod[nElements] : new ::TSnFitChanOffsetAltEvtsMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnFitChanOffsetAltEvtsMod(void *p) {
      delete ((::TSnFitChanOffsetAltEvtsMod*)p);
   }
   static void deleteArray_TSnFitChanOffsetAltEvtsMod(void *p) {
      delete [] ((::TSnFitChanOffsetAltEvtsMod*)p);
   }
   static void destruct_TSnFitChanOffsetAltEvtsMod(void *p) {
      typedef ::TSnFitChanOffsetAltEvtsMod current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnFitChanOffsetAltEvtsMod

//______________________________________________________________________________
void TSnAngleFromChanCorlMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnAngleFromChanCorlMod.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnAngleFromChanCorlMod::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnAngleFromChanCorlMod::Class(),this);
   }
}

//______________________________________________________________________________
void TSnAngleFromChanCorlMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnAngleFromChanCorlMod.
      TClass *R__cl = ::TSnAngleFromChanCorlMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChDtsNm", &fChDtsNm);
      R__insp.InspectMember(fChDtsNm, "fChDtsNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeoNm", &fGeoNm);
      R__insp.InspectMember(fGeoNm, "fGeoNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorlNm", &fCorlNm);
      R__insp.InspectMember(fCorlNm, "fCorlNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecAngNm", &fRecAngNm);
      R__insp.InspectMember(fRecAngNm, "fRecAngNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNgTopFern", &fNgTopFern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCsig", &fCsig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDts", &fDts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeo", &fGeo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorls", &fCorls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosCh[4]", fPosCh);
      TSnFittingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnAngleFromChanCorlMod(void *p) {
      return  p ? new(p) ::TSnAngleFromChanCorlMod : new ::TSnAngleFromChanCorlMod;
   }
   static void *newArray_TSnAngleFromChanCorlMod(Long_t nElements, void *p) {
      return p ? new(p) ::TSnAngleFromChanCorlMod[nElements] : new ::TSnAngleFromChanCorlMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnAngleFromChanCorlMod(void *p) {
      delete ((::TSnAngleFromChanCorlMod*)p);
   }
   static void deleteArray_TSnAngleFromChanCorlMod(void *p) {
      delete [] ((::TSnAngleFromChanCorlMod*)p);
   }
   static void destruct_TSnAngleFromChanCorlMod(void *p) {
      typedef ::TSnAngleFromChanCorlMod current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnAngleFromChanCorlMod

//______________________________________________________________________________
void TSnAngleFromSingleChanOffsets::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnAngleFromSingleChanOffsets.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnAngleFromSingleChanOffsets::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnAngleFromSingleChanOffsets::Class(),this);
   }
}

//______________________________________________________________________________
void TSnAngleFromSingleChanOffsets::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnAngleFromSingleChanOffsets.
      TClass *R__cl = ::TSnAngleFromSingleChanOffsets::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChDtsNm", &fChDtsNm);
      R__insp.InspectMember(fChDtsNm, "fChDtsNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChOffsNm", &fChOffsNm);
      R__insp.InspectMember(fChOffsNm, "fChOffsNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeoNm", &fGeoNm);
      R__insp.InspectMember(fGeoNm, "fGeoNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecAngNm", &fRecAngNm);
      R__insp.InspectMember(fRecAngNm, "fRecAngNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNgTopFern", &fNgTopFern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDts", &fDts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeo", &fGeo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOffsets", &fOffsets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosCh[4]", fPosCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMeta", &fMeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdr", &fHdr);
      TSnFittingModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnAngleFromSingleChanOffsets(void *p) {
      return  p ? new(p) ::TSnAngleFromSingleChanOffsets : new ::TSnAngleFromSingleChanOffsets;
   }
   static void *newArray_TSnAngleFromSingleChanOffsets(Long_t nElements, void *p) {
      return p ? new(p) ::TSnAngleFromSingleChanOffsets[nElements] : new ::TSnAngleFromSingleChanOffsets[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnAngleFromSingleChanOffsets(void *p) {
      delete ((::TSnAngleFromSingleChanOffsets*)p);
   }
   static void deleteArray_TSnAngleFromSingleChanOffsets(void *p) {
      delete [] ((::TSnAngleFromSingleChanOffsets*)p);
   }
   static void destruct_TSnAngleFromSingleChanOffsets(void *p) {
      typedef ::TSnAngleFromSingleChanOffsets current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnAngleFromSingleChanOffsets

//______________________________________________________________________________
void TSnSaveRecoResultsMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnSaveRecoResultsMod.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnSaveRecoResultsMod::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnSaveRecoResultsMod::Class(),this);
   }
}

//______________________________________________________________________________
void TSnSaveRecoResultsMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnSaveRecoResultsMod.
      TClass *R__cl = ::TSnSaveRecoResultsMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutTreeNm", &fOutTreeNm);
      R__insp.InspectMember(fOutTreeNm, "fOutTreeNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutTreeTitle", &fOutTreeTitle);
      R__insp.InspectMember(fOutTreeTitle, "fOutTreeTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOt", &fOt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecoObjNames", &fRecoObjNames);
      R__insp.InspectMember(fRecoObjNames, "fRecoObjNames.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAltTag", &fAltTag);
      R__insp.InspectMember(fAltTag, "fAltTag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveAltEvt", &fSaveAltEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveHeader", &fSaveHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBufSz", &fBufSz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSplit", &fSplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMakeBranches", &fMakeBranches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAltMetaBrNm", &fAltMetaBrNm);
      R__insp.InspectMember(fAltMetaBrNm, "fAltMetaBrNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAltHdrBrNm", &fAltHdrBrNm);
      R__insp.InspectMember(fAltHdrBrNm, "fAltHdrBrNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdrA", &fHdrA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdrB", &fHdrB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMetaA", &fMetaA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMetaB", &fMetaB);
      TAModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnSaveRecoResultsMod(void *p) {
      return  p ? new(p) ::TSnSaveRecoResultsMod : new ::TSnSaveRecoResultsMod;
   }
   static void *newArray_TSnSaveRecoResultsMod(Long_t nElements, void *p) {
      return p ? new(p) ::TSnSaveRecoResultsMod[nElements] : new ::TSnSaveRecoResultsMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnSaveRecoResultsMod(void *p) {
      delete ((::TSnSaveRecoResultsMod*)p);
   }
   static void deleteArray_TSnSaveRecoResultsMod(void *p) {
      delete [] ((::TSnSaveRecoResultsMod*)p);
   }
   static void destruct_TSnSaveRecoResultsMod(void *p) {
      typedef ::TSnSaveRecoResultsMod current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnSaveRecoResultsMod

//______________________________________________________________________________
void TSnSaveRecoResultsMod::TSnRecoResultWrapper::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnSaveRecoResultsMod::TSnRecoResultWrapper.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class(),this);
   }
}

//______________________________________________________________________________
void TSnSaveRecoResultsMod::TSnRecoResultWrapper::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnSaveRecoResultsMod::TSnRecoResultWrapper.
      TClass *R__cl = ::TSnSaveRecoResultsMod::TSnRecoResultWrapper::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRR", &fRR);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper(void *p) {
      return  p ? new(p) ::TSnSaveRecoResultsMod::TSnRecoResultWrapper : new ::TSnSaveRecoResultsMod::TSnRecoResultWrapper;
   }
   static void *newArray_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper(Long_t nElements, void *p) {
      return p ? new(p) ::TSnSaveRecoResultsMod::TSnRecoResultWrapper[nElements] : new ::TSnSaveRecoResultsMod::TSnRecoResultWrapper[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper(void *p) {
      delete ((::TSnSaveRecoResultsMod::TSnRecoResultWrapper*)p);
   }
   static void deleteArray_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper(void *p) {
      delete [] ((::TSnSaveRecoResultsMod::TSnRecoResultWrapper*)p);
   }
   static void destruct_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper(void *p) {
      typedef ::TSnSaveRecoResultsMod::TSnRecoResultWrapper current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnSaveRecoResultsMod::TSnRecoResultWrapper

//______________________________________________________________________________
void TSnSaveCorlDataMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnSaveCorlDataMod.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnSaveCorlDataMod::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnSaveCorlDataMod::Class(),this);
   }
}

//______________________________________________________________________________
void TSnSaveCorlDataMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnSaveCorlDataMod.
      TClass *R__cl = ::TSnSaveCorlDataMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtBrA", &fEvtBrA);
      R__insp.InspectMember(fEvtBrA, "fEvtBrA.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorlNm", &fCorlNm);
      R__insp.InspectMember(fCorlNm, "fCorlNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutTreeNm", &fOutTreeNm);
      R__insp.InspectMember(fOutTreeNm, "fOutTreeNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutTreeTitle", &fOutTreeTitle);
      R__insp.InspectMember(fOutTreeTitle, "fOutTreeTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAltTag", &fAltTag);
      R__insp.InspectMember(fAltTag, "fAltTag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveHeader", &fSaveHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveData", &fSaveData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOt", &fOt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSaveAltEvt", &fSaveAltEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBufSz", &fBufSz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSplit", &fSplit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDatA", &fDatA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDatB", &fDatB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorls", &fCorls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdrA", &fHdrA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHdrB", &fHdrB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMetaA", &fMetaA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMetaB", &fMetaB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMakeBranches", &fMakeBranches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtBrB", &fEvtBrB);
      R__insp.InspectMember(fEvtBrB, "fEvtBrB.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAltMetaBrNm", &fAltMetaBrNm);
      R__insp.InspectMember(fAltMetaBrNm, "fAltMetaBrNm.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAltHdrBrNm", &fAltHdrBrNm);
      R__insp.InspectMember(fAltHdrBrNm, "fAltHdrBrNm.");
      TSnCalDatModule::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnSaveCorlDataMod(void *p) {
      return  p ? new(p) ::TSnSaveCorlDataMod : new ::TSnSaveCorlDataMod;
   }
   static void *newArray_TSnSaveCorlDataMod(Long_t nElements, void *p) {
      return p ? new(p) ::TSnSaveCorlDataMod[nElements] : new ::TSnSaveCorlDataMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnSaveCorlDataMod(void *p) {
      delete ((::TSnSaveCorlDataMod*)p);
   }
   static void deleteArray_TSnSaveCorlDataMod(void *p) {
      delete [] ((::TSnSaveCorlDataMod*)p);
   }
   static void destruct_TSnSaveCorlDataMod(void *p) {
      typedef ::TSnSaveCorlDataMod current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnSaveCorlDataMod

/********************************************************
* reco/G__reco.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__reco();

extern "C" void G__set_cpp_environmentG__reco() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("reco/NSnChanCorl.h");
  G__add_compiledheader("reco/TSnMinimizer.h");
  G__add_compiledheader("reco/TSnFittingModule.h");
  G__add_compiledheader("reco/TSnChanTimeCorlMod.h");
  G__add_compiledheader("reco/TSnFitChanOffsetMod.h");
  G__add_compiledheader("reco/TSnChanTimeCorlAltEvtsMod.h");
  G__add_compiledheader("reco/TSnFitChanOffsetAltEvtsMod.h");
  G__add_compiledheader("reco/TSnAngleFromChanCorlMod.h");
  G__add_compiledheader("reco/TSnAngleFromSingleChanOffsets.h");
  G__add_compiledheader("reco/TSnSaveRecoResultsMod.h");
  G__add_compiledheader("reco/TSnSaveCorlDataMod.h");
  G__cpp_reset_tagtableG__reco();
}
#include <new>
extern "C" int G__cpp_dllrevG__reco() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* NSnChanCorl */
static int G__G__reco_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) NSnChanCorl::GetC_m_ns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) NSnChanCorl::GetMaxDt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) NSnChanCorl::GetEpsilon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) NSnChanCorl::GetProbFromNormCorl((const Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) NSnChanCorl::GetProbForDTFromCorl((Double_t) G__double(libp->para[0]), *(TSnInterp1DWvData*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) NSnChanCorl::GetLLfromDTsForPlaneWv(*(TArrayD*) libp->para[0].ref, *(TObjArray*) libp->para[1].ref
, (const Float_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TArrayD* pobj;
         TArrayD xobj = NSnChanCorl::GetPlaneWaveOffsets((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])
, *(TArrayD*) libp->para[2].ref, (TVector3*) G__int(libp->para[3])
, (const Double_t) G__double(libp->para[4]));
         pobj = new TArrayD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) NSnChanCorl::GetLLfromEnvelopeCoGs((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (const Float_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) NSnChanCorl::GetLLfromDistandOffset((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (const Float_t) G__double(libp->para[2]), (const Float_t) G__double(libp->para[3])
, (const Float_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnMinimizer */
static int G__G__reco_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnMinimizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnMinimizer[n];
     } else {
       p = new((void*) gvp) TSnMinimizer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnMinimizer;
     } else {
       p = new((void*) gvp) TSnMinimizer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnMinimizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnMinimizer((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSnMinimizer((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnMinimizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnMinimizer(*(TSnMinimizer*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TSnMinimizer(*(TSnMinimizer*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMinimizer::Swap(*(TSnMinimizer*) libp->para[0].ref, *(TSnMinimizer*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSnMinimizer& obj = ((TSnMinimizer*) G__getstructoffset())->operator=(*((TSnMinimizer*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnMinimizer*) G__getstructoffset())->GetMinimizer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSnMinimizer*) G__getstructoffset())->GetMinimizer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::Minimizer& obj = ((const TSnMinimizer*) G__getstructoffset())->GetMiniSafe();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::Minimizer& obj = ((TSnMinimizer*) G__getstructoffset())->GetMiniSafe();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnMinimizer*) G__getstructoffset())->GetFunctor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSnMinimizer*) G__getstructoffset())->GetFunctor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSnMinimizer*) G__getstructoffset())->GetMinimizerName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSnMinimizer*) G__getstructoffset())->GetAlgorithmName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnMinimizer*) G__getstructoffset())->SetFunctor(*(ROOT::Math::Functor*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnMinimizer*) G__getstructoffset())->ResetMinimizer((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnMinimizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnMinimizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnMinimizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMinimizer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnMinimizer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnMinimizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnMinimizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnMinimizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnMinimizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnMinimizer G__TTSnMinimizer;
static int G__G__reco_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnMinimizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnMinimizer*) (soff+(sizeof(TSnMinimizer)*i)))->~G__TTSnMinimizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnMinimizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnMinimizer*) (soff))->~G__TTSnMinimizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnFittingModule */
static int G__G__reco_495_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnFittingModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFittingModule[n];
     } else {
       p = new((void*) gvp) TSnFittingModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFittingModule;
     } else {
       p = new((void*) gvp) TSnFittingModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnFittingModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFittingModule(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TSnFittingModule(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFittingModule(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSnFittingModule(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFittingModule((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSnFittingModule((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSnFittingModule*) G__getstructoffset())->AssertMini((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnFittingModule*) G__getstructoffset())->GetMinimizerName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnFittingModule*) G__getstructoffset())->GetAlgorithmName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnFittingModule*) G__getstructoffset())->GetMinimizer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSnFittingModule*) G__getstructoffset())->GetMinimizer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSnMinimizer& obj = ((const TSnFittingModule*) G__getstructoffset())->GetMinimizerSafe();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSnMinimizer& obj = ((TSnFittingModule*) G__getstructoffset())->GetMinimizerSafe();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::Minimizer& obj = ((const TSnFittingModule*) G__getstructoffset())->GetMiniSafe();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::Minimizer& obj = ((TSnFittingModule*) G__getstructoffset())->GetMiniSafe();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ROOT::Math::Functor& obj = ((const TSnFittingModule*) G__getstructoffset())->GetFunctorSafe();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSnFittingModule*) G__getstructoffset())->GetDefMinTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFittingModule*) G__getstructoffset())->SetFunctor(*(ROOT::Math::Functor*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFittingModule*) G__getstructoffset())->ResetMinimizer((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnFittingModule::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFittingModule::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnFittingModule::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnFittingModule::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFittingModule*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFittingModule::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnFittingModule::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFittingModule::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_495_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnFittingModule::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__reco_495_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnFittingModule* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnFittingModule(*(TSnFittingModule*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnFittingModule G__TTSnFittingModule;
static int G__G__reco_495_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnFittingModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnFittingModule*) (soff+(sizeof(TSnFittingModule)*i)))->~G__TTSnFittingModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnFittingModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnFittingModule*) (soff))->~G__TTSnFittingModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__reco_495_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnFittingModule* dest = (TSnFittingModule*) G__getstructoffset();
   *dest = *(TSnFittingModule*) libp->para[0].ref;
   const TSnFittingModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnChanTimeCorlMod */
static int G__G__reco_500_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnChanTimeCorlMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnChanTimeCorlMod[n];
     } else {
       p = new((void*) gvp) TSnChanTimeCorlMod[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnChanTimeCorlMod;
     } else {
       p = new((void*) gvp) TSnChanTimeCorlMod;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnChanTimeCorlMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnChanTimeCorlMod((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSnChanTimeCorlMod((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnChanTimeCorlMod::GetChanCorlInterpName((const UChar_t) G__int(libp->para[0]), (const UChar_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnChanTimeCorlMod*) G__getstructoffset())->GetWvDataName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnChanTimeCorlMod*) G__getstructoffset())->GetChanCorlName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlMod*) G__getstructoffset())->SetWvDataName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlMod*) G__getstructoffset())->SetChanCorlName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnChanTimeCorlMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnChanTimeCorlMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnChanTimeCorlMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnChanTimeCorlMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnChanTimeCorlMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnChanTimeCorlMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnChanTimeCorlMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_500_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnChanTimeCorlMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__reco_500_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnChanTimeCorlMod* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnChanTimeCorlMod(*(TSnChanTimeCorlMod*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnChanTimeCorlMod G__TTSnChanTimeCorlMod;
static int G__G__reco_500_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnChanTimeCorlMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnChanTimeCorlMod*) (soff+(sizeof(TSnChanTimeCorlMod)*i)))->~G__TTSnChanTimeCorlMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnChanTimeCorlMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnChanTimeCorlMod*) (soff))->~G__TTSnChanTimeCorlMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__reco_500_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnChanTimeCorlMod* dest = (TSnChanTimeCorlMod*) G__getstructoffset();
   *dest = *(TSnChanTimeCorlMod*) libp->para[0].ref;
   const TSnChanTimeCorlMod& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnFitChanOffsetMod */
static int G__G__reco_502_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnFitChanOffsetMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetMod[n];
     } else {
       p = new((void*) gvp) TSnFitChanOffsetMod[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetMod;
     } else {
       p = new((void*) gvp) TSnFitChanOffsetMod;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnFitChanOffsetMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetMod((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetMod((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetMod((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetMod((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnFitChanOffsetMod*) G__getstructoffset())->GetChanDelayLL((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnFitChanOffsetMod*) G__getstructoffset())->GetTimeOffsetsName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnFitChanOffsetMod*) G__getstructoffset())->GetCorrelationsName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSnFitChanOffsetMod*) G__getstructoffset())->GetCorlConstraintSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetMod*) G__getstructoffset())->SetTimeOffsetsName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetMod*) G__getstructoffset())->SetCorrelationsName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetMod*) G__getstructoffset())->SetCorlConstraintSigma((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnFitChanOffsetMod::GetParName((const UChar_t) G__int(libp->para[0]), (const UChar_t) G__int(libp->para[1]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnFitChanOffsetMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFitChanOffsetMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnFitChanOffsetMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnFitChanOffsetMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFitChanOffsetMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnFitChanOffsetMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFitChanOffsetMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_502_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnFitChanOffsetMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__reco_502_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnFitChanOffsetMod* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnFitChanOffsetMod(*(TSnFitChanOffsetMod*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnFitChanOffsetMod G__TTSnFitChanOffsetMod;
static int G__G__reco_502_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnFitChanOffsetMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnFitChanOffsetMod*) (soff+(sizeof(TSnFitChanOffsetMod)*i)))->~G__TTSnFitChanOffsetMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnFitChanOffsetMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnFitChanOffsetMod*) (soff))->~G__TTSnFitChanOffsetMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnChanTimeCorlAltEvtsMod */
static int G__G__reco_503_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnChanTimeCorlAltEvtsMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnChanTimeCorlAltEvtsMod[n];
     } else {
       p = new((void*) gvp) TSnChanTimeCorlAltEvtsMod[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnChanTimeCorlAltEvtsMod;
     } else {
       p = new((void*) gvp) TSnChanTimeCorlAltEvtsMod;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnChanTimeCorlAltEvtsMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnChanTimeCorlAltEvtsMod((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnChanTimeCorlAltEvtsMod((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnChanTimeCorlAltEvtsMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnChanTimeCorlAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TSnChanTimeCorlAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnChanTimeCorlAltEvtsMod::GetChanCorlInterpName((const UChar_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->IsCheckingEnvelope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->GetMainEventBrName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->GetAltEventBrName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->GetCorrelationsName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->GetEnvelopeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->GetAltEnvelopeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->GetCorlType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->SetMainEventBrName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->SetAltEventBrName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->SetCorrelationsName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->SetEnvelopeName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->SetAltEnvelopeName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->SetCorlType((const TSnChanTimeCorlAltEvtsMod::ECorlType_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->SetCorlType(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnChanTimeCorlAltEvtsMod::GetCorlTypeStr((const TSnChanTimeCorlAltEvtsMod::ECorlType_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnChanTimeCorlAltEvtsMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnChanTimeCorlAltEvtsMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnChanTimeCorlAltEvtsMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnChanTimeCorlAltEvtsMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnChanTimeCorlAltEvtsMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnChanTimeCorlAltEvtsMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnChanTimeCorlAltEvtsMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnChanTimeCorlAltEvtsMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_503_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnChanTimeCorlAltEvtsMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__reco_503_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnChanTimeCorlAltEvtsMod* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnChanTimeCorlAltEvtsMod(*(TSnChanTimeCorlAltEvtsMod*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnChanTimeCorlAltEvtsMod G__TTSnChanTimeCorlAltEvtsMod;
static int G__G__reco_503_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnChanTimeCorlAltEvtsMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnChanTimeCorlAltEvtsMod*) (soff+(sizeof(TSnChanTimeCorlAltEvtsMod)*i)))->~G__TTSnChanTimeCorlAltEvtsMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnChanTimeCorlAltEvtsMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnChanTimeCorlAltEvtsMod*) (soff))->~G__TTSnChanTimeCorlAltEvtsMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__reco_503_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnChanTimeCorlAltEvtsMod* dest = (TSnChanTimeCorlAltEvtsMod*) G__getstructoffset();
   *dest = *(TSnChanTimeCorlAltEvtsMod*) libp->para[0].ref;
   const TSnChanTimeCorlAltEvtsMod& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnFitChanOffsetAltEvtsMod */
static int G__G__reco_508_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnFitChanOffsetAltEvtsMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetAltEvtsMod[n];
     } else {
       p = new((void*) gvp) TSnFitChanOffsetAltEvtsMod[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetAltEvtsMod;
     } else {
       p = new((void*) gvp) TSnFitChanOffsetAltEvtsMod;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnFitChanOffsetAltEvtsMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetAltEvtsMod((const Char_t*) G__int(libp->para[0]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetAltEvtsMod((const Char_t*) G__int(libp->para[0]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetAltEvtsMod((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetAltEvtsMod((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnFitChanOffsetAltEvtsMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSnFitChanOffsetAltEvtsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->GetTimeOffsetsName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->GetCorrelationsName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->GetEnvelopeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->GetAltEnvelopeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->GetEnvNoiseCut());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->GetEnvMaxFrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->GetFitType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->IsCheckingCorl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->IsCheckingEnvelope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->IsCheckingEnvRiseDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->SetTimeOffsetsName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->SetCorrelationsName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->SetEnvelopeName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->SetAltEnvelopeName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->SetFitType((const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->SetEnvNoiseCut((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->SetEnvMaxFrac((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->SetFitType(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFitChanOffsetAltEvtsMod::GetFitTypeStr((const TSnFitChanOffsetAltEvtsMod::EFitType_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFitChanOffsetAltEvtsMod::GetParName((const TSnFitChanOffsetAltEvtsMod::EPars_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnFitChanOffsetAltEvtsMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFitChanOffsetAltEvtsMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnFitChanOffsetAltEvtsMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnFitChanOffsetAltEvtsMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnFitChanOffsetAltEvtsMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFitChanOffsetAltEvtsMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnFitChanOffsetAltEvtsMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnFitChanOffsetAltEvtsMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_508_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnFitChanOffsetAltEvtsMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__reco_508_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnFitChanOffsetAltEvtsMod* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnFitChanOffsetAltEvtsMod(*(TSnFitChanOffsetAltEvtsMod*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnFitChanOffsetAltEvtsMod G__TTSnFitChanOffsetAltEvtsMod;
static int G__G__reco_508_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnFitChanOffsetAltEvtsMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnFitChanOffsetAltEvtsMod*) (soff+(sizeof(TSnFitChanOffsetAltEvtsMod)*i)))->~G__TTSnFitChanOffsetAltEvtsMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnFitChanOffsetAltEvtsMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnFitChanOffsetAltEvtsMod*) (soff))->~G__TTSnFitChanOffsetAltEvtsMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnAngleFromChanCorlMod */
static int G__G__reco_549_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnAngleFromChanCorlMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAngleFromChanCorlMod[n];
     } else {
       p = new((void*) gvp) TSnAngleFromChanCorlMod[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAngleFromChanCorlMod;
     } else {
       p = new((void*) gvp) TSnAngleFromChanCorlMod;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnAngleFromChanCorlMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAngleFromChanCorlMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSnAngleFromChanCorlMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAngleFromChanCorlMod((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSnAngleFromChanCorlMod((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAngleFromChanCorlMod((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSnAngleFromChanCorlMod((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnAngleFromChanCorlMod*) G__getstructoffset())->GetRecoAngleName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnAngleFromChanCorlMod*) G__getstructoffset())->GetChanOffsetsName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnAngleFromChanCorlMod*) G__getstructoffset())->GetGeometryName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnAngleFromChanCorlMod*) G__getstructoffset())->GetChanCorlsName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnAngleFromChanCorlMod*) G__getstructoffset())->GetNgTopFern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSnAngleFromChanCorlMod*) G__getstructoffset())->GetCorlConstraintSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromChanCorlMod*) G__getstructoffset())->SetRecoAngleName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromChanCorlMod*) G__getstructoffset())->SetChanOffsetsName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromChanCorlMod*) G__getstructoffset())->SetGeometryName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromChanCorlMod*) G__getstructoffset())->SetChanCorlsName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromChanCorlMod*) G__getstructoffset())->SetNgTopFern((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromChanCorlMod*) G__getstructoffset())->SetCorlConstraintSigma((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSnAngleFromChanCorlMod*) G__getstructoffset())->GetAngleLL((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAngleFromChanCorlMod::GetParName((const TSnAngleFromChanCorlMod::EPars_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnAngleFromChanCorlMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAngleFromChanCorlMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnAngleFromChanCorlMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnAngleFromChanCorlMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromChanCorlMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAngleFromChanCorlMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnAngleFromChanCorlMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAngleFromChanCorlMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_549_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnAngleFromChanCorlMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__reco_549_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnAngleFromChanCorlMod* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnAngleFromChanCorlMod(*(TSnAngleFromChanCorlMod*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnAngleFromChanCorlMod G__TTSnAngleFromChanCorlMod;
static int G__G__reco_549_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnAngleFromChanCorlMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnAngleFromChanCorlMod*) (soff+(sizeof(TSnAngleFromChanCorlMod)*i)))->~G__TTSnAngleFromChanCorlMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnAngleFromChanCorlMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnAngleFromChanCorlMod*) (soff))->~G__TTSnAngleFromChanCorlMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnAngleFromSingleChanOffsets */
static int G__G__reco_552_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnAngleFromSingleChanOffsets* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAngleFromSingleChanOffsets[n];
     } else {
       p = new((void*) gvp) TSnAngleFromSingleChanOffsets[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAngleFromSingleChanOffsets;
     } else {
       p = new((void*) gvp) TSnAngleFromSingleChanOffsets;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnAngleFromSingleChanOffsets* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAngleFromSingleChanOffsets(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSnAngleFromSingleChanOffsets(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAngleFromSingleChanOffsets((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSnAngleFromSingleChanOffsets((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAngleFromSingleChanOffsets((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSnAngleFromSingleChanOffsets((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnAngleFromSingleChanOffsets*) G__getstructoffset())->GetRecoAngleName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnAngleFromSingleChanOffsets*) G__getstructoffset())->GetSingleChanDelaysName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnAngleFromSingleChanOffsets*) G__getstructoffset())->GetChanOffsetsName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnAngleFromSingleChanOffsets*) G__getstructoffset())->GetGeometryName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSnAngleFromSingleChanOffsets*) G__getstructoffset())->GetNgTopFern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromSingleChanOffsets*) G__getstructoffset())->SetRecoAngleName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromSingleChanOffsets*) G__getstructoffset())->SetSingleChanDelaysName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromSingleChanOffsets*) G__getstructoffset())->SetChanOffsetsName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromSingleChanOffsets*) G__getstructoffset())->SetGeometryName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromSingleChanOffsets*) G__getstructoffset())->SetNgTopFern((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSnAngleFromSingleChanOffsets*) G__getstructoffset())->GetAngleChi2((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAngleFromSingleChanOffsets::GetParName((const TSnAngleFromSingleChanOffsets::EPars_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnAngleFromSingleChanOffsets::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAngleFromSingleChanOffsets::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnAngleFromSingleChanOffsets::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnAngleFromSingleChanOffsets::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAngleFromSingleChanOffsets*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAngleFromSingleChanOffsets::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnAngleFromSingleChanOffsets::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAngleFromSingleChanOffsets::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_552_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnAngleFromSingleChanOffsets::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__reco_552_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnAngleFromSingleChanOffsets* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnAngleFromSingleChanOffsets(*(TSnAngleFromSingleChanOffsets*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnAngleFromSingleChanOffsets G__TTSnAngleFromSingleChanOffsets;
static int G__G__reco_552_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnAngleFromSingleChanOffsets*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnAngleFromSingleChanOffsets*) (soff+(sizeof(TSnAngleFromSingleChanOffsets)*i)))->~G__TTSnAngleFromSingleChanOffsets();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnAngleFromSingleChanOffsets*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnAngleFromSingleChanOffsets*) (soff))->~G__TTSnAngleFromSingleChanOffsets();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnSaveRecoResultsMod */
static int G__G__reco_558_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSaveRecoResultsMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveRecoResultsMod[n];
     } else {
       p = new((void*) gvp) TSnSaveRecoResultsMod[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveRecoResultsMod;
     } else {
       p = new((void*) gvp) TSnSaveRecoResultsMod;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSaveRecoResultsMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveRecoResultsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TSnSaveRecoResultsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveRecoResultsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TSnSaveRecoResultsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveRecoResultsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSnSaveRecoResultsMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnSaveRecoResultsMod*) G__getstructoffset())->GetTreeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnSaveRecoResultsMod*) G__getstructoffset())->GetOutTreeTitle();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnSaveRecoResultsMod*) G__getstructoffset())->HasAltBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnSaveRecoResultsMod*) G__getstructoffset())->IsSavingHeaders());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMap& obj = ((const TSnSaveRecoResultsMod*) G__getstructoffset())->GetRecoResultNames();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveRecoResultsMod*) G__getstructoffset())->SetTreeName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveRecoResultsMod*) G__getstructoffset())->SetOutTreeTitle((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveRecoResultsMod*) G__getstructoffset())->SetSaveHeaders((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveRecoResultsMod*) G__getstructoffset())->SetAltTreeTag((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveRecoResultsMod*) G__getstructoffset())->SaveRecoResult((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSaveRecoResultsMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSaveRecoResultsMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnSaveRecoResultsMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSaveRecoResultsMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveRecoResultsMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSaveRecoResultsMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSaveRecoResultsMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSaveRecoResultsMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_558_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSaveRecoResultsMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnSaveRecoResultsMod G__TTSnSaveRecoResultsMod;
static int G__G__reco_558_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnSaveRecoResultsMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnSaveRecoResultsMod*) (soff+(sizeof(TSnSaveRecoResultsMod)*i)))->~G__TTSnSaveRecoResultsMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnSaveRecoResultsMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnSaveRecoResultsMod*) (soff))->~G__TTSnSaveRecoResultsMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnSaveRecoResultsMod::TSnRecoResultWrapper */
static int G__G__reco_559_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSaveRecoResultsMod::TSnRecoResultWrapper* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveRecoResultsMod::TSnRecoResultWrapper[n];
     } else {
       p = new((void*) gvp) TSnSaveRecoResultsMod::TSnRecoResultWrapper[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveRecoResultsMod::TSnRecoResultWrapper;
     } else {
       p = new((void*) gvp) TSnSaveRecoResultsMod::TSnRecoResultWrapper;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_559_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSaveRecoResultsMod::TSnRecoResultWrapper* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnSaveRecoResultsMod::TSnRecoResultWrapper((TObject*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnSaveRecoResultsMod::TSnRecoResultWrapper((TObject*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_559_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_559_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_559_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_559_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSaveRecoResultsMod::TSnRecoResultWrapper::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_559_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveRecoResultsMod::TSnRecoResultWrapper*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_559_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSaveRecoResultsMod::TSnRecoResultWrapper::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_559_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSaveRecoResultsMod::TSnRecoResultWrapper::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_559_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSaveRecoResultsMod::TSnRecoResultWrapper::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_559_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSaveRecoResultsMod::TSnRecoResultWrapper::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__reco_559_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnSaveRecoResultsMod::TSnRecoResultWrapper* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnSaveRecoResultsMod::TSnRecoResultWrapper(*(TSnSaveRecoResultsMod::TSnRecoResultWrapper*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnSaveRecoResultsMod::TSnRecoResultWrapper G__TTSnSaveRecoResultsModcLcLTSnRecoResultWrapper;
static int G__G__reco_559_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnSaveRecoResultsMod::TSnRecoResultWrapper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnSaveRecoResultsMod::TSnRecoResultWrapper*) (soff+(sizeof(TSnSaveRecoResultsMod::TSnRecoResultWrapper)*i)))->~G__TTSnSaveRecoResultsModcLcLTSnRecoResultWrapper();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnSaveRecoResultsMod::TSnRecoResultWrapper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnSaveRecoResultsMod::TSnRecoResultWrapper*) (soff))->~G__TTSnSaveRecoResultsModcLcLTSnRecoResultWrapper();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__reco_559_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSaveRecoResultsMod::TSnRecoResultWrapper* dest = (TSnSaveRecoResultsMod::TSnRecoResultWrapper*) G__getstructoffset();
   *dest = *(TSnSaveRecoResultsMod::TSnRecoResultWrapper*) libp->para[0].ref;
   const TSnSaveRecoResultsMod::TSnRecoResultWrapper& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnSaveCorlDataMod */
static int G__G__reco_560_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSaveCorlDataMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveCorlDataMod[n];
     } else {
       p = new((void*) gvp) TSnSaveCorlDataMod[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveCorlDataMod;
     } else {
       p = new((void*) gvp) TSnSaveCorlDataMod;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSaveCorlDataMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveCorlDataMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]), (const Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TSnSaveCorlDataMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]), (const Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveCorlDataMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TSnSaveCorlDataMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSaveCorlDataMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TSnSaveCorlDataMod(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnSaveCorlDataMod*) G__getstructoffset())->GetMainEventBrName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnSaveCorlDataMod*) G__getstructoffset())->GetCorrelationsName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnSaveCorlDataMod*) G__getstructoffset())->GetTreeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnSaveCorlDataMod*) G__getstructoffset())->GetOutTreeTitle();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const TSnSaveCorlDataMod*) G__getstructoffset())->GetAltTreeTag();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnSaveCorlDataMod*) G__getstructoffset())->HasAltBranch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnSaveCorlDataMod*) G__getstructoffset())->IsSavingHeaders());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnSaveCorlDataMod*) G__getstructoffset())->IsSavingWvData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveCorlDataMod*) G__getstructoffset())->SetMainEventBrName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveCorlDataMod*) G__getstructoffset())->SetCorrelationsName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveCorlDataMod*) G__getstructoffset())->SetTreeName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveCorlDataMod*) G__getstructoffset())->SetOutTreeTitle((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveCorlDataMod*) G__getstructoffset())->SetAltTreeTag((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveCorlDataMod*) G__getstructoffset())->SetSaveHeaders((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveCorlDataMod*) G__getstructoffset())->SetSaveWvData((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSaveCorlDataMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSaveCorlDataMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnSaveCorlDataMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSaveCorlDataMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSaveCorlDataMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSaveCorlDataMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSaveCorlDataMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSaveCorlDataMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__reco_560_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSaveCorlDataMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__reco_560_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnSaveCorlDataMod* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnSaveCorlDataMod(*(TSnSaveCorlDataMod*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnSaveCorlDataMod G__TTSnSaveCorlDataMod;
static int G__G__reco_560_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnSaveCorlDataMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnSaveCorlDataMod*) (soff+(sizeof(TSnSaveCorlDataMod)*i)))->~G__TTSnSaveCorlDataMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnSaveCorlDataMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnSaveCorlDataMod*) (soff))->~G__TTSnSaveCorlDataMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__reco_560_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSaveCorlDataMod* dest = (TSnSaveCorlDataMod*) G__getstructoffset();
   *dest = *(TSnSaveCorlDataMod*) libp->para[0].ref;
   const TSnSaveCorlDataMod& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* NSnChanCorl */

/* TSnMinimizer */

/* TSnFittingModule */

/* TSnChanTimeCorlMod */

/* TSnFitChanOffsetMod */

/* TSnChanTimeCorlAltEvtsMod */

/* TSnFitChanOffsetAltEvtsMod */

/* TSnAngleFromChanCorlMod */

/* TSnAngleFromSingleChanOffsets */

/* TSnSaveRecoResultsMod */

/* TSnSaveRecoResultsMod::TSnRecoResultWrapper */

/* TSnSaveCorlDataMod */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__reco {
 public:
  G__Sizep2memfuncG__reco(): p(&G__Sizep2memfuncG__reco::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__reco::*p)();
};

size_t G__get_sizep2memfuncG__reco()
{
  G__Sizep2memfuncG__reco a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__reco() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer))) {
     TSnMinimizer *G__Lderived;
     G__Lderived=(TSnMinimizer*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer),G__get_linked_tagnum(&G__G__recoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule))) {
     TSnFittingModule *G__Lderived;
     G__Lderived=(TSnFittingModule*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule),G__get_linked_tagnum(&G__G__recoLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule),G__get_linked_tagnum(&G__G__recoLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule),G__get_linked_tagnum(&G__G__recoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod))) {
     TSnChanTimeCorlMod *G__Lderived;
     G__Lderived=(TSnChanTimeCorlMod*)0x1000;
     {
       TSnCalDatModule *G__Lpbase=(TSnCalDatModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod),G__get_linked_tagnum(&G__G__recoLN_TSnCalDatModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod),G__get_linked_tagnum(&G__G__recoLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod),G__get_linked_tagnum(&G__G__recoLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod),G__get_linked_tagnum(&G__G__recoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod))) {
     TSnFitChanOffsetMod *G__Lderived;
     G__Lderived=(TSnFitChanOffsetMod*)0x1000;
     {
       TSnFittingModule *G__Lpbase=(TSnFittingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod),G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod),G__get_linked_tagnum(&G__G__recoLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod),G__get_linked_tagnum(&G__G__recoLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod),G__get_linked_tagnum(&G__G__recoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod))) {
     TSnChanTimeCorlAltEvtsMod *G__Lderived;
     G__Lderived=(TSnChanTimeCorlAltEvtsMod*)0x1000;
     {
       TSnCalDatModule *G__Lpbase=(TSnCalDatModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod),G__get_linked_tagnum(&G__G__recoLN_TSnCalDatModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod),G__get_linked_tagnum(&G__G__recoLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod),G__get_linked_tagnum(&G__G__recoLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod),G__get_linked_tagnum(&G__G__recoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod))) {
     TSnFitChanOffsetAltEvtsMod *G__Lderived;
     G__Lderived=(TSnFitChanOffsetAltEvtsMod*)0x1000;
     {
       TSnFittingModule *G__Lpbase=(TSnFittingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod),G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod),G__get_linked_tagnum(&G__G__recoLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod),G__get_linked_tagnum(&G__G__recoLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod),G__get_linked_tagnum(&G__G__recoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod))) {
     TSnAngleFromChanCorlMod *G__Lderived;
     G__Lderived=(TSnAngleFromChanCorlMod*)0x1000;
     {
       TSnFittingModule *G__Lpbase=(TSnFittingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod),G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod),G__get_linked_tagnum(&G__G__recoLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod),G__get_linked_tagnum(&G__G__recoLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod),G__get_linked_tagnum(&G__G__recoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets))) {
     TSnAngleFromSingleChanOffsets *G__Lderived;
     G__Lderived=(TSnAngleFromSingleChanOffsets*)0x1000;
     {
       TSnFittingModule *G__Lpbase=(TSnFittingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets),G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets),G__get_linked_tagnum(&G__G__recoLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets),G__get_linked_tagnum(&G__G__recoLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets),G__get_linked_tagnum(&G__G__recoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod))) {
     TSnSaveRecoResultsMod *G__Lderived;
     G__Lderived=(TSnSaveRecoResultsMod*)0x1000;
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod),G__get_linked_tagnum(&G__G__recoLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod),G__get_linked_tagnum(&G__G__recoLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod),G__get_linked_tagnum(&G__G__recoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper))) {
     TSnSaveRecoResultsMod::TSnRecoResultWrapper *G__Lderived;
     G__Lderived=(TSnSaveRecoResultsMod::TSnRecoResultWrapper*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod))) {
     TSnSaveCorlDataMod *G__Lderived;
     G__Lderived=(TSnSaveCorlDataMod*)0x1000;
     {
       TSnCalDatModule *G__Lpbase=(TSnCalDatModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod),G__get_linked_tagnum(&G__G__recoLN_TSnCalDatModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAModule *G__Lpbase=(TAModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod),G__get_linked_tagnum(&G__G__recoLN_TAModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod),G__get_linked_tagnum(&G__G__recoLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod),G__get_linked_tagnum(&G__G__recoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod),G__get_linked_tagnum(&G__G__recoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__reco() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__recoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__recoLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__recoLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__recoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__recoLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__recoLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__recoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__recoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__recoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__recoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__recoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BranchPtr_t*>",117,G__get_linked_tagnum(&G__G__recoLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__recoLN_reverse_iteratorlEvectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recoLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__recoLN_reverse_iteratorlEvectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recoLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TAMBranchInfo::BranchPtr_t*>",117,G__get_linked_tagnum(&G__G__recoLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__recoLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__recoLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__recoLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__recoLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TIterator*>",117,G__get_linked_tagnum(&G__G__recoLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__recoLN_reverse_iteratorlEvectorlETIteratormUcOallocatorlETIteratormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recoLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__recoLN_reverse_iteratorlEvectorlETIteratormUcOallocatorlETIteratormUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__recoLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__recoLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__recoLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* NSnChanCorl */
static void G__setup_memvarNSnChanCorl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_NSnChanCorl));
   {
   G__memvar_setup((void*)(&NSnChanCorl::kC_m_ns),100,0,1,-1,G__defined_typename("Double_t"),-1,1,"kC_m_ns=",0,"C in m/ns units");
   G__memvar_setup((void*)(&NSnChanCorl::kMaxDt),100,0,1,-1,G__defined_typename("Double_t"),-1,1,"kMaxDt=",0,"max time offset = half the sample window in time (~32ns)");
   G__memvar_setup((void*)(&NSnChanCorl::kEpsilon),100,0,1,-1,G__defined_typename("Double_t"),-1,1,"kEpsilon=",0,"a small number (e.g. below which the -log will not be calculated)");
   }
   G__tag_memvar_reset();
}


   /* TSnMinimizer */
static void G__setup_memvarTSnMinimizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer));
   { TSnMinimizer *p; p=(TSnMinimizer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLMinimizer),-1,-1,4,"fMini=",0,"the minimizer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLFunctor),-1,-1,4,"fFcn=",0,"! wrapper for the fit function (owned)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnFittingModule */
static void G__setup_memvarTSnFittingModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule));
   { TSnFittingModule *p; p=(TSnFittingModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fMiniNm=",0,"name of minimizer to use (default: Minuit2)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fAlgoNm=",0,"name of minimization algorithm to use (default: Migrad)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer),-1,-1,4,"fMini=",0,"the minimizer to be used");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnChanTimeCorlMod */
static void G__setup_memvarTSnChanTimeCorlMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod));
   { TSnChanTimeCorlMod *p; p=(TSnChanTimeCorlMod*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fWvDatNm=",0,"name of the calibrated wv data branch or object: i.e. FPN sub, amp out, filtered, etc. (no default!)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fCorlNm=",0,"name of the output correlations array (default: CrossChanCorls.)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnCalWvData),-1,-1,4,"fDat=",0,"! the event data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TObjArray),-1,-1,4,"fCorls=",0,"! the output correlations of this event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnFitChanOffsetMod */
static void G__setup_memvarTSnFitChanOffsetMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod));
   { TSnFitChanOffsetMod *p; p=(TSnFitChanOffsetMod*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fCorlNm=",0,"name of input channel correlations (default: CrossChanCorls.)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fDtsNm=",0,"name of output time offset object (default: ChanTimeOffsets.)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCsig=",0,"sigma of gaussian that determines how strict the time constraints are applied (default: 1/(2*sampRate))");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__recoLN_TObjArray),-1,-1,4,"fCorl=",0,"! the correlation functions");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TObjArray),-1,-1,4,"fDts=",0,"! the output time offsets for this event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnChanTimeCorlAltEvtsMod */
static void G__setup_memvarTSnChanTimeCorlAltEvtsMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod));
   { TSnChanTimeCorlAltEvtsMod *p; p=(TSnChanTimeCorlAltEvtsMod*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsModcLcLECorlType_t),-1,-2,1,G__FastAllocString(4096).Format("kWrapCorl=%lldLL",(long long)TSnChanTimeCorlAltEvtsMod::kWrapCorl).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsModcLcLECorlType_t),-1,-2,1,G__FastAllocString(4096).Format("kScanToEnvMax=%lldLL",(long long)TSnChanTimeCorlAltEvtsMod::kScanToEnvMax).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fEvtBrA=",0,"name of event branch A - no default");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fEvtBrB=",0,"name of event branch B (need not be in same tree if a loader is being used) - no default");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fCorlNm=",0,"name of output correlations (default: SingleChanCorls.)");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsModcLcLECorlType_t),-1,-1,4,"fCorlType=",0,"type of correlation (default kWrapCorl)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fEnvNmA=",0,"name of envelope for event A - no default (only for corl types that need it)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fEnvNmB=",0,"name of envelope for event B - no default (only for corl types that need it)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnCalWvData),-1,-1,4,"fDatA=",0,"! the event data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnCalWvData),-1,-1,4,"fDatB=",0,"! the event data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnFitChanOffsetAltEvtsMod */
static void G__setup_memvarTSnFitChanOffsetAltEvtsMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod));
   { TSnFitChanOffsetAltEvtsMod *p; p=(TSnFitChanOffsetAltEvtsMod*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEPars_t),-1,-2,1,G__FastAllocString(4096).Format("kDt=%lldLL",(long long)TSnFitChanOffsetAltEvtsMod::kDt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEPars_t),-1,-2,1,G__FastAllocString(4096).Format("kNpars=%lldLL",(long long)TSnFitChanOffsetAltEvtsMod::kNpars).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEFitType_t),-1,-2,1,G__FastAllocString(4096).Format("kCorlOnly=%lldLL",(long long)TSnFitChanOffsetAltEvtsMod::kCorlOnly).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEFitType_t),-1,-2,1,G__FastAllocString(4096).Format("kEnvRiseDistOnly=%lldLL",(long long)TSnFitChanOffsetAltEvtsMod::kEnvRiseDistOnly).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEFitType_t),-1,-2,1,G__FastAllocString(4096).Format("kCorlAndEnvRiseDist=%lldLL",(long long)TSnFitChanOffsetAltEvtsMod::kCorlAndEnvRiseDist).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEFitType_t),-1,-2,1,G__FastAllocString(4096).Format("kEnvMatchOnly=%lldLL",(long long)TSnFitChanOffsetAltEvtsMod::kEnvMatchOnly).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEFitType_t),-1,-2,1,G__FastAllocString(4096).Format("kCorlAndEnvMatch=%lldLL",(long long)TSnFitChanOffsetAltEvtsMod::kCorlAndEnvMatch).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,1,G__FastAllocString(4096).Format("kMakeScanNtp=%lluULL",(unsigned long long)TSnFitChanOffsetAltEvtsMod::kMakeScanNtp).data(),0,"verbosity level at which an ntuple with a scan of the fit space will be recorded");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,1,G__FastAllocString(4096).Format("kDebugFit=%lluULL",(unsigned long long)TSnFitChanOffsetAltEvtsMod::kDebugFit).data(),0,"verbosity level at which fit debugging plots will be drawn each event");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fCorlNm=",0,"name of input channel correlations (default: SingleChanCorls.)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fDtsNm=",0,"name of output time offset object (default: SingleChanTimeOffsets.)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fEnvNmA=",0,"name of envelope obj in the event for run A");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fEnvNmB=",0,"name of envelope obj in the event for run B");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEFitType_t),-1,-1,4,"fFitType=",0,"type of fit to perform, see EFitType_t enum (default: kCorlOnly)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fEnvNoiseCut=",0,"y-value at which the start envelope rise (default: 40)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fEnvMaxFrac=",0,"fractional y-value at which to stop envelope rise (default: 0.95)");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnInterp1DWvData),-1,-1,4,"fCorl=",0,"! the correlation fcn for the current chan");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TObjArray),-1,-1,4,"fDts=",0,"! the output time offsets for this event");
   G__memvar_setup((void*)0,70,0,1,-1,G__defined_typename("Float_t"),-1,4,"fEnvA=",0,"! envelope data");
   G__memvar_setup((void*)0,70,0,1,-1,G__defined_typename("Float_t"),-1,4,"fEnvB=",0,"! envelope data (alt event)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnInterp1DWvData),-1,-1,4,"fEnvCorl=",0,"! envelope matching correlation fcn");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventMetadata),-1,-1,4,"fMeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventHeader),-1,-1,4,"fHdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TNtuple),-1,-1,4,"fNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnAngleFromChanCorlMod */
static void G__setup_memvarTSnAngleFromChanCorlMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod));
   { TSnAngleFromChanCorlMod *p; p=(TSnAngleFromChanCorlMod*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlModcLcLEPars_t),-1,-2,1,G__FastAllocString(4096).Format("kTheta=%lldLL",(long long)TSnAngleFromChanCorlMod::kTheta).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlModcLcLEPars_t),-1,-2,1,G__FastAllocString(4096).Format("kPhi=%lldLL",(long long)TSnAngleFromChanCorlMod::kPhi).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlModcLcLEPars_t),-1,-2,1,G__FastAllocString(4096).Format("kNpars=%lldLL",(long long)TSnAngleFromChanCorlMod::kNpars).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fChDtsNm=",0,"name of published channel offsets object (default: ChanDtOffets)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fGeoNm=",0,"name of published geoemtry object (default: AriannaGeo)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fCorlNm=",0,"name of the published channel correlation objects (default: CrossChanCorls.)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fRecAngNm=",0,"name of output reco direction object (default: AngleFromChanCorl.)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNgTopFern=",0,"group index of refraction at the top of the fern where the LPDAs are (default: 1.33)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCsig=",0,"sigma of gaussian that determines how strict the time constraints are applied (default: 1/(2*sampRate))");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnRecoChanOffsets),-1,-1,4,"fDts=",0,"! global channel offsets");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnGeoStnSite),-1,-1,4,"fGeo=",0,"! top geometry volume");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__recoLN_TObjArray),-1,-1,4,"fCorls=",0,"! channel correlations for this event");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TVector3),-1,-1,4,"fPosCh[4]=",0,"! convenient storage of lpda positions. assumed not to change event to event.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnAngleFromSingleChanOffsets */
static void G__setup_memvarTSnAngleFromSingleChanOffsets(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets));
   { TSnAngleFromSingleChanOffsets *p; p=(TSnAngleFromSingleChanOffsets*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsetscLcLEPars_t),-1,-2,1,G__FastAllocString(4096).Format("kTheta=%lldLL",(long long)TSnAngleFromSingleChanOffsets::kTheta).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsetscLcLEPars_t),-1,-2,1,G__FastAllocString(4096).Format("kPhi=%lldLL",(long long)TSnAngleFromSingleChanOffsets::kPhi).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsetscLcLEPars_t),-1,-2,1,G__FastAllocString(4096).Format("kNpars=%lldLL",(long long)TSnAngleFromSingleChanOffsets::kNpars).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,1,G__FastAllocString(4096).Format("kDrawParSpace=%lluULL",(unsigned long long)TSnAngleFromSingleChanOffsets::kDrawParSpace).data(),0,"verbosity level at which to display the fit space");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fChDtsNm=",0,"name of channel delays object in an event (default: SingleChanTimeOffsets.)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fChOffsNm=",0,"name of published channel offsets object (default: SingleChanTimeOffsets)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fGeoNm=",0,"name of published geoemtry object (default: AriannaGeo)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fRecAngNm=",0,"name of output reco direction object (default: AngleFromSingleChanOffsets.)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fNgTopFern=",0,"group index of refraction at the top of the fern where the LPDAs are (default: 1.33)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnRecoSingleChanOffsetSet),-1,-1,4,"fDts=",0,"! the single channel time offsets");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnGeoStnSite),-1,-1,4,"fGeo=",0,"! top geometry volume");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__G__recoLN_TSnRecoChanOffsets),-1,-1,4,"fOffsets=",0,"! a priori known channel offsets");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TVector3),-1,-1,4,"fPosCh[4]=",0,"! convenient storage of lpda positions. assumed not to change event to event.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventMetadata),-1,-1,4,"fMeta=",0,"! event meta data for debugging");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventHeader),-1,-1,4,"fHdr=",0,"! event header for debugging");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnSaveRecoResultsMod */
static void G__setup_memvarTSnSaveRecoResultsMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod));
   { TSnSaveRecoResultsMod *p; p=(TSnSaveRecoResultsMod*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fOutTreeNm=",0,"name of the output tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fOutTreeTitle=",0,"title of the output tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TTree),-1,-1,4,"fOt=",0,"the output tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TMap),-1,-1,4,"fRecoObjNames=",0,"name of each reco obj that should be stored (mapped to a local copy of it)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fAltTag=",0,"alternate tree tag (no default)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSaveAltEvt=",0,"whether to save alternate event header and metadata (default: false). useful for, e.g. TTSnRecoSingleChanOffsetSet.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSaveHeader=",0,"whether to save the event header (default: true). necessary to align event numbers across trees.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBufSz=",0,"buffer size for new branch(es)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSplit=",0,"split level for new branch(es)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMakeBranches=",0,"whether branches need to be made (in first event)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fAltMetaBrNm=",0,"name of the alternate event metadata branch");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fAltHdrBrNm=",0,"name of the alternate event header branch");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventHeader),-1,-1,4,"fHdrA=",0,"! main event header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventHeader),-1,-1,4,"fHdrB=",0,"! alternate event header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventMetadata),-1,-1,4,"fMetaA=",0,"! main event metadata");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventMetadata),-1,-1,4,"fMetaB=",0,"! main event metadata");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnSaveRecoResultsMod::TSnRecoResultWrapper */
static void G__setup_memvarTSnSaveRecoResultsModcLcLTSnRecoResultWrapper(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper));
   { TSnSaveRecoResultsMod::TSnRecoResultWrapper *p; p=(TSnSaveRecoResultsMod::TSnRecoResultWrapper*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fRR)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__recoLN_TObject),-1,-1,1,"fRR=",0,"the reco result");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnSaveCorlDataMod */
static void G__setup_memvarTSnSaveCorlDataMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod));
   { TSnSaveCorlDataMod *p; p=(TSnSaveCorlDataMod*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fEvtBrA=",0,"name of main event branch - no default");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fCorlNm=",0,"name of the correlations array (default: CrossChanCorls.)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fOutTreeNm=",0,"name of the output tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fOutTreeTitle=",0,"title of the output tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fAltTag=",0,"alternate tree tag (no default). if not specified, no alternate event data will be saved");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSaveHeader=",0,"whether to save the event header (default: true). necessary to align event numbers across trees.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSaveData=",0,"whether to save the data (default: true)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TTree),-1,-1,4,"fOt=",0,"the output tree");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSaveAltEvt=",0,"whether to save alternate event header and metadata (default: false). useful for, e.g. TTSnRecoSingleChanOffsetSet.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBufSz=",0,"buffer size for new branch(es)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSplit=",0,"split level for new branch(es)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnCalWvData),-1,-1,4,"fDatA=",0,"! the event data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnCalWvData),-1,-1,4,"fDatB=",0,"! the event data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TObjArray),-1,-1,4,"fCorls=",0,"! the correlations of this event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventHeader),-1,-1,4,"fHdrA=",0,"! main event header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventHeader),-1,-1,4,"fHdrB=",0,"! alternate event header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventMetadata),-1,-1,4,"fMetaA=",0,"! main event metadata");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TSnEventMetadata),-1,-1,4,"fMetaB=",0,"! main event metadata");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fMakeBranches=",0,"whether branches need to be made (in first event)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fEvtBrB=",0,"! name of alternate event branch - no default. set using fAltTag");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fAltMetaBrNm=",0,"name of the alternate event metadata branch");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__recoLN_TString),-1,-1,4,"fAltHdrBrNm=",0,"name of the alternate event header branch");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__recoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__reco() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncNSnChanCorl(void) {
   /* NSnChanCorl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_NSnChanCorl));
   G__memfunc_setup("GetC_m_ns",879,G__G__reco_172_0_1, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&NSnChanCorl::GetC_m_ns) ), 0);
   G__memfunc_setup("GetMaxDt",766,G__G__reco_172_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&NSnChanCorl::GetMaxDt) ), 0);
   G__memfunc_setup("GetEpsilon",1018,G__G__reco_172_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&NSnChanCorl::GetEpsilon) ), 0);
   G__memfunc_setup("GetProbFromNormCorl",1907,G__G__reco_172_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 10 - coef", (char*)NULL, (void*) G__func2void( (Double_t (*)(const Double_t))(&NSnChanCorl::GetProbFromNormCorl) ), 0);
   G__memfunc_setup("GetProbForDTFromCorl",1942,G__G__reco_172_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - dt u 'TSnInterp1DWvData' - 11 - corl", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, const TSnInterp1DWvData&))(&NSnChanCorl::GetProbForDTFromCorl) ), 0);
   G__memfunc_setup("GetLLfromDTsForPlaneWv",2139,G__G__reco_172_0_6, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"u 'TArrayD' - 11 - dts u 'TObjArray' - 11 - corl "
"f - 'Float_t' 10 - csig", (char*)NULL, (void*) G__func2void( (Double_t (*)(const TArrayD&, const TObjArray&, const Float_t))(&NSnChanCorl::GetLLfromDTsForPlaneWv) ), 0);
   G__memfunc_setup("GetPlaneWaveOffsets",1917,G__G__reco_172_0_7, 117, G__get_linked_tagnum(&G__G__recoLN_TArrayD), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 10 - theta d - 'Double_t' 10 - phi "
"u 'TArrayD' - 11 - offsets U 'TVector3' - 10 - posCh "
"d - 'Double_t' 10 - ngTopFern", (char*)NULL, (void*) G__func2void( (TArrayD (*)(const Double_t, const Double_t, const TArrayD&, const TVector3*, const Double_t))(&NSnChanCorl::GetPlaneWaveOffsets) ), 0);
   G__memfunc_setup("GetLLfromEnvelopeCoGs",2070,G__G__reco_172_0_8, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"D - 'Double_t' 50 - env1 D - 'Double_t' 50 - env2 "
"f - 'Float_t' 10 - minVal", (char*)NULL, (void*) G__func2void( (Double_t (*)(const Double_t *const, const Double_t *const, const Float_t))(&NSnChanCorl::GetLLfromEnvelopeCoGs) ), 0);
   G__memfunc_setup("GetLLfromDistandOffset",2202,G__G__reco_172_0_9, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 0, 
"F - 'Float_t' 50 - env1 F - 'Float_t' 50 - env2 "
"f - 'Float_t' 10 - minVal f - 'Float_t' 10 - maxfrac "
"f - 'Float_t' 10 - dt", (char*)NULL, (void*) G__func2void( (Double_t (*)(const Float_t *const, const Float_t *const, const Float_t, const Float_t, const Float_t))(&NSnChanCorl::GetLLfromDistandOffset) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnMinimizer(void) {
   /* TSnMinimizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer));
   G__memfunc_setup("AssertMini",1023,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "C - 'Char_t' 10 - loc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnMinimizer",1225,G__G__reco_191_0_2, 105, G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnMinimizer",1225,G__G__reco_191_0_3, 105, G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - miniName C - 'Char_t' 10 - algoName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnMinimizer",1225,G__G__reco_191_0_4, 105, G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer), -1, 0, 1, 1, 1, 0, "u 'TSnMinimizer' - 11 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Swap",411,G__G__reco_191_0_5, 121, -1, -1, 0, 2, 3, 1, 0, 
"u 'TSnMinimizer' - 1 - a u 'TSnMinimizer' - 1 - b", (char*)NULL, (void*) G__func2void( (void (*)(TSnMinimizer&, TSnMinimizer&))(&TSnMinimizer::Swap) ), 0);
   G__memfunc_setup("operator=",937,G__G__reco_191_0_6, 117, G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer), -1, 1, 1, 1, 1, 0, "u 'TSnMinimizer' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimizer",1236,G__G__reco_191_0_7, 85, G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLMinimizer), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimizer",1236,G__G__reco_191_0_8, 85, G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLMinimizer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniSafe",1068,G__G__reco_191_0_9, 117, G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLMinimizer), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniSafe",1068,G__G__reco_191_0_10, 117, G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLMinimizer), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFunctor",1025,G__G__reco_191_0_11, 85, G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLFunctor), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFunctor",1025,G__G__reco_191_0_12, 85, G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLFunctor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimizerName",1621,G__G__reco_191_0_13, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgorithmName",1608,G__G__reco_191_0_14, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunctor",1037,G__G__reco_191_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::Functor' - 11 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetMinimizer",1463,G__G__reco_191_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - miniNm C - 'Char_t' 10 - algoNm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__reco_191_0_17, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnMinimizer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_191_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnMinimizer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_191_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnMinimizer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_191_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnMinimizer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_191_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_191_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnMinimizer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_191_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnMinimizer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_191_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnMinimizer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_191_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnMinimizer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSnMinimizer", 1351, G__G__reco_191_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnFittingModule(void) {
   /* TSnFittingModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule));
   G__memfunc_setup("TSnFittingModule",1616,G__G__reco_495_0_1, 105, G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnFittingModule",1616,G__G__reco_495_0_2, 105, G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule), -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title "
"C - 'Char_t' 10 '\"Minuit2\"' miniName C - 'Char_t' 10 '\"Migrad\"' algoName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AssertMini",1023,G__G__reco_495_0_3, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Char_t' 10 - loc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimizerName",1621,G__G__reco_495_0_4, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgorithmName",1608,G__G__reco_495_0_5, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimizer",1236,G__G__reco_495_0_6, 85, G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimizer",1236,G__G__reco_495_0_7, 85, G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimizerSafe",1619,G__G__reco_495_0_8, 117, G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinimizerSafe",1619,G__G__reco_495_0_9, 117, G__get_linked_tagnum(&G__G__recoLN_TSnMinimizer), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniSafe",1068,G__G__reco_495_0_10, 117, G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLMinimizer), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiniSafe",1068,G__G__reco_495_0_11, 117, G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLMinimizer), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFunctorSafe",1408,G__G__reco_495_0_12, 117, G__get_linked_tagnum(&G__G__recoLN_ROOTcLcLMathcLcLFunctor), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDefMinTag",1135,G__G__reco_495_0_13, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunctor",1037,G__G__reco_495_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ROOT::Math::Functor' - 11 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetMinimizer",1463,G__G__reco_495_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - miniNm C - 'Char_t' 10 - algoNm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__reco_495_0_16, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnFittingModule::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_495_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnFittingModule::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_495_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnFittingModule::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_495_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnFittingModule::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_495_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_495_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnFittingModule::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_495_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnFittingModule::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_495_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnFittingModule::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_495_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnFittingModule::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnFittingModule", 1616, G__G__reco_495_0_28, (int) ('i'), G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule), -1, 0, 1, 1, 1, 0, "u 'TSnFittingModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnFittingModule", 1742, G__G__reco_495_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__reco_495_0_30, (int) ('u'), G__get_linked_tagnum(&G__G__recoLN_TSnFittingModule), -1, 1, 1, 1, 1, 0, "u 'TSnFittingModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnChanTimeCorlMod(void) {
   /* TSnChanTimeCorlMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod));
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSnChanTimeCorlMod",1742,G__G__reco_500_0_3, 105, G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnChanTimeCorlMod",1742,G__G__reco_500_0_4, 105, G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - wvdatnm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanCorlInterpName",2077,G__G__reco_500_0_5, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 2, 3, 1, 0, 
"b - 'UChar_t' 10 - ch b - 'UChar_t' 10 - xc", (char*)NULL, (void*) G__func2void( (TString (*)(const UChar_t, const UChar_t))(&TSnChanTimeCorlMod::GetChanCorlInterpName) ), 0);
   G__memfunc_setup("GetWvDataName",1256,G__G__reco_500_0_6, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanCorlName",1451,G__G__reco_500_0_7, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWvDataName",1268,G__G__reco_500_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanCorlName",1463,G__G__reco_500_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__reco_500_0_10, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnChanTimeCorlMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_500_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnChanTimeCorlMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_500_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnChanTimeCorlMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_500_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnChanTimeCorlMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_500_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_500_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnChanTimeCorlMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_500_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnChanTimeCorlMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_500_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnChanTimeCorlMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_500_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnChanTimeCorlMod::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnChanTimeCorlMod", 1742, G__G__reco_500_0_22, (int) ('i'), G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod), -1, 0, 1, 1, 1, 0, "u 'TSnChanTimeCorlMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnChanTimeCorlMod", 1868, G__G__reco_500_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__reco_500_0_24, (int) ('u'), G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlMod), -1, 1, 1, 1, 1, 0, "u 'TSnChanTimeCorlMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnFitChanOffsetMod(void) {
   /* TSnFitChanOffsetMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod));
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSnFitChanOffsetMod",1849,G__G__reco_502_0_2, 105, G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnFitChanOffsetMod",1849,G__G__reco_502_0_3, 105, G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 '\"Minuit2\"' miniName "
"C - 'Char_t' 10 '\"Migrad\"' algoName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanDelayLL",1313,G__G__reco_502_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 10 - dts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeOffsetsName",1802,G__G__reco_502_0_5, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrelationsName",1942,G__G__reco_502_0_6, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorlConstraintSigma",2246,G__G__reco_502_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeOffsetsName",1814,G__G__reco_502_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorrelationsName",1954,G__G__reco_502_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorlConstraintSigma",2258,G__G__reco_502_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParName",964,G__G__reco_502_0_11, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 2, 3, 1, 0, 
"b - 'UChar_t' 10 - ch b - 'UChar_t' 10 - xc", (char*)NULL, (void*) G__func2void( (TString (*)(const UChar_t, const UChar_t))(&TSnFitChanOffsetMod::GetParName) ), 0);
   G__memfunc_setup("Class",502,G__G__reco_502_0_12, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnFitChanOffsetMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_502_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnFitChanOffsetMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_502_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnFitChanOffsetMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_502_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnFitChanOffsetMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_502_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_502_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnFitChanOffsetMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_502_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnFitChanOffsetMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_502_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnFitChanOffsetMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_502_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnFitChanOffsetMod::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnFitChanOffsetMod", 1849, G__G__reco_502_0_24, (int) ('i'), G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetMod), -1, 0, 1, 1, 1, 0, "u 'TSnFitChanOffsetMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnFitChanOffsetMod", 1975, G__G__reco_502_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnChanTimeCorlAltEvtsMod(void) {
   /* TSnChanTimeCorlAltEvtsMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod));
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSnChanTimeCorlAltEvtsMod",2449,G__G__reco_503_0_3, 105, G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnChanTimeCorlAltEvtsMod",2449,G__G__reco_503_0_4, 105, G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnChanTimeCorlAltEvtsMod",2449,G__G__reco_503_0_5, 105, G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - mainEvtBrNm "
"C - 'Char_t' 10 - altEvtBrNm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanCorlInterpName",2077,G__G__reco_503_0_6, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 1, 3, 1, 0, "b - 'UChar_t' 10 - ch", (char*)NULL, (void*) G__func2void( (TString (*)(const UChar_t))(&TSnChanTimeCorlAltEvtsMod::GetChanCorlInterpName) ), 0);
   G__memfunc_setup("IsCheckingEnvelope",1814,G__G__reco_503_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMainEventBrName",1756,G__G__reco_503_0_8, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAltEventBrName",1656,G__G__reco_503_0_9, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrelationsName",1942,G__G__reco_503_0_10, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvelopeName",1503,G__G__reco_503_0_11, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAltEnvelopeName",1792,G__G__reco_503_0_12, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorlType",1106,G__G__reco_503_0_13, 105, G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsModcLcLECorlType_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMainEventBrName",1768,G__G__reco_503_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAltEventBrName",1668,G__G__reco_503_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorrelationsName",1954,G__G__reco_503_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnvelopeName",1515,G__G__reco_503_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAltEnvelopeName",1804,G__G__reco_503_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorlType",1118,G__G__reco_503_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TSnChanTimeCorlAltEvtsMod::ECorlType_t' - 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorlType",1118,G__G__reco_503_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorlTypeStr",1419,G__G__reco_503_0_21, 67, -1, G__defined_typename("Char_t"), 0, 1, 3, 1, 1, "i 'TSnChanTimeCorlAltEvtsMod::ECorlType_t' - 10 - t", (char*)NULL, (void*) G__func2void( (const Char_t* (*)(const TSnChanTimeCorlAltEvtsMod::ECorlType_t))(&TSnChanTimeCorlAltEvtsMod::GetCorlTypeStr) ), 0);
   G__memfunc_setup("Class",502,G__G__reco_503_0_22, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnChanTimeCorlAltEvtsMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_503_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnChanTimeCorlAltEvtsMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_503_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnChanTimeCorlAltEvtsMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_503_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnChanTimeCorlAltEvtsMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_503_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_503_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnChanTimeCorlAltEvtsMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_503_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnChanTimeCorlAltEvtsMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_503_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnChanTimeCorlAltEvtsMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_503_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnChanTimeCorlAltEvtsMod::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnChanTimeCorlAltEvtsMod", 2449, G__G__reco_503_0_34, (int) ('i'), 
G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod), -1, 0, 1, 1, 1, 0, "u 'TSnChanTimeCorlAltEvtsMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnChanTimeCorlAltEvtsMod", 2575, G__G__reco_503_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__reco_503_0_36, (int) ('u'), G__get_linked_tagnum(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod), -1, 1, 1, 1, 1, 0, "u 'TSnChanTimeCorlAltEvtsMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnFitChanOffsetAltEvtsMod(void) {
   /* TSnFitChanOffsetAltEvtsMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod));
   G__memfunc_setup("GetCorlDelayLL",1335,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "D - 'Double_t' 10 - dts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvRiseDistLL",1544,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "D - 'Double_t' 10 - dts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorlAndEnvRiseDistDelayLL",2714,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "D - 'Double_t' 10 - dts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvMatchLL",1230,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "D - 'Double_t' 10 - dts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorlAndEnvMatchLL",1905,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "D - 'Double_t' 10 - dts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMiniFitFunction",1826,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSnFitChanOffsetAltEvtsMod",2556,G__G__reco_508_0_9, 105, G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnFitChanOffsetAltEvtsMod",2556,G__G__reco_508_0_10, 105, G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod), -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - name i 'TSnFitChanOffsetAltEvtsMod::EFitType_t' - 10 'kCorlOnly' ftype "
"C - 'Char_t' 10 '\"Minuit2\"' miniName C - 'Char_t' 10 '\"Migrad\"' algoName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnFitChanOffsetAltEvtsMod",2556,G__G__reco_508_0_11, 105, G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod), -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - envName "
"C - 'Char_t' 10 - altEnvName i 'TSnFitChanOffsetAltEvtsMod::EFitType_t' - 10 'kCorlAndEnvRiseDist' ftype "
"C - 'Char_t' 10 '\"Minuit2\"' miniName C - 'Char_t' 10 '\"Migrad\"' algoName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeOffsetsName",1802,G__G__reco_508_0_12, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrelationsName",1942,G__G__reco_508_0_13, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvelopeName",1503,G__G__reco_508_0_14, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAltEnvelopeName",1792,G__G__reco_508_0_15, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvNoiseCut",1395,G__G__reco_508_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnvMaxFrac",1259,G__G__reco_508_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitType",997,G__G__reco_508_0_18, 105, G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEFitType_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCheckingCorl",1384,G__G__reco_508_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCheckingEnvelope",1814,G__G__reco_508_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCheckingEnvRiseDist",2088,G__G__reco_508_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeOffsetsName",1814,G__G__reco_508_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorrelationsName",1954,G__G__reco_508_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnvelopeName",1515,G__G__reco_508_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAltEnvelopeName",1804,G__G__reco_508_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitType",1009,G__G__reco_508_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i 'TSnFitChanOffsetAltEvtsMod::EFitType_t' - 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnvNoiseCut",1407,G__G__reco_508_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnvMaxFrac",1271,G__G__reco_508_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitType",1009,G__G__reco_508_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitTypeStr",1310,G__G__reco_508_0_30, 67, -1, G__defined_typename("Char_t"), 0, 1, 3, 1, 1, "i 'TSnFitChanOffsetAltEvtsMod::EFitType_t' - 10 - t", (char*)NULL, (void*) G__func2void( (const Char_t* (*)(const TSnFitChanOffsetAltEvtsMod::EFitType_t))(&TSnFitChanOffsetAltEvtsMod::GetFitTypeStr) ), 0);
   G__memfunc_setup("GetParName",964,G__G__reco_508_0_31, 67, -1, G__defined_typename("Char_t"), 0, 1, 3, 1, 1, "i 'TSnFitChanOffsetAltEvtsMod::EPars_t' - 10 - x", (char*)NULL, (void*) G__func2void( (const Char_t* (*)(const TSnFitChanOffsetAltEvtsMod::EPars_t))(&TSnFitChanOffsetAltEvtsMod::GetParName) ), 0);
   G__memfunc_setup("Class",502,G__G__reco_508_0_32, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnFitChanOffsetAltEvtsMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_508_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnFitChanOffsetAltEvtsMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_508_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnFitChanOffsetAltEvtsMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_508_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnFitChanOffsetAltEvtsMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_508_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_508_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnFitChanOffsetAltEvtsMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_508_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnFitChanOffsetAltEvtsMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_508_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnFitChanOffsetAltEvtsMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_508_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnFitChanOffsetAltEvtsMod::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnFitChanOffsetAltEvtsMod", 2556, G__G__reco_508_0_44, (int) ('i'), 
G__get_linked_tagnum(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod), -1, 0, 1, 1, 1, 0, "u 'TSnFitChanOffsetAltEvtsMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnFitChanOffsetAltEvtsMod", 2682, G__G__reco_508_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnAngleFromChanCorlMod(void) {
   /* TSnAngleFromChanCorlMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod));
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSnAngleFromChanCorlMod",2234,G__G__reco_549_0_3, 105, G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnAngleFromChanCorlMod",2234,G__G__reco_549_0_4, 105, G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 '\"Minuit2\"' miniName "
"C - 'Char_t' 10 '\"Migrad\"' algoName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoAngleName",1553,G__G__reco_549_0_5, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanOffsetsName",1781,G__G__reco_549_0_6, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeometryName",1517,G__G__reco_549_0_7, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanCorlsName",1566,G__G__reco_549_0_8, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNgTopFern",1171,G__G__reco_549_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorlConstraintSigma",2246,G__G__reco_549_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoAngleName",1565,G__G__reco_549_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanOffsetsName",1793,G__G__reco_549_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeometryName",1529,G__G__reco_549_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanCorlsName",1578,G__G__reco_549_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNgTopFern",1183,G__G__reco_549_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorlConstraintSigma",2258,G__G__reco_549_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngleLL",927,G__G__reco_549_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "D - 'Double_t' 10 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParName",964,G__G__reco_549_0_18, 67, -1, G__defined_typename("Char_t"), 0, 1, 3, 1, 1, "i 'TSnAngleFromChanCorlMod::EPars_t' - 10 - x", (char*)NULL, (void*) G__func2void( (const Char_t* (*)(const TSnAngleFromChanCorlMod::EPars_t))(&TSnAngleFromChanCorlMod::GetParName) ), 0);
   G__memfunc_setup("Class",502,G__G__reco_549_0_19, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnAngleFromChanCorlMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_549_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAngleFromChanCorlMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_549_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnAngleFromChanCorlMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_549_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnAngleFromChanCorlMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_549_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_549_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAngleFromChanCorlMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_549_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnAngleFromChanCorlMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_549_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAngleFromChanCorlMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_549_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnAngleFromChanCorlMod::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnAngleFromChanCorlMod", 2234, G__G__reco_549_0_31, (int) ('i'), 
G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromChanCorlMod), -1, 0, 1, 1, 1, 0, "u 'TSnAngleFromChanCorlMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnAngleFromChanCorlMod", 2360, G__G__reco_549_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnAngleFromSingleChanOffsets(void) {
   /* TSnAngleFromSingleChanOffsets */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets));
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSnAngleFromSingleChanOffsets",2886,G__G__reco_552_0_3, 105, G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnAngleFromSingleChanOffsets",2886,G__G__reco_552_0_4, 105, G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 '\"Minuit2\"' miniName "
"C - 'Char_t' 10 '\"Migrad\"' algoName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoAngleName",1553,G__G__reco_552_0_5, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSingleChanDelaysName",2271,G__G__reco_552_0_6, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanOffsetsName",1781,G__G__reco_552_0_7, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeometryName",1517,G__G__reco_552_0_8, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNgTopFern",1171,G__G__reco_552_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecoAngleName",1565,G__G__reco_552_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSingleChanDelaysName",2283,G__G__reco_552_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanOffsetsName",1793,G__G__reco_552_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeometryName",1529,G__G__reco_552_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNgTopFern",1183,G__G__reco_552_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngleChi2",1101,G__G__reco_552_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "D - 'Double_t' 10 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParName",964,G__G__reco_552_0_16, 67, -1, G__defined_typename("Char_t"), 0, 1, 3, 1, 1, "i 'TSnAngleFromSingleChanOffsets::EPars_t' - 10 - x", (char*)NULL, (void*) G__func2void( (const Char_t* (*)(const TSnAngleFromSingleChanOffsets::EPars_t))(&TSnAngleFromSingleChanOffsets::GetParName) ), 0);
   G__memfunc_setup("Class",502,G__G__reco_552_0_17, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnAngleFromSingleChanOffsets::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_552_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAngleFromSingleChanOffsets::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_552_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnAngleFromSingleChanOffsets::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_552_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnAngleFromSingleChanOffsets::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_552_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_552_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAngleFromSingleChanOffsets::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_552_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnAngleFromSingleChanOffsets::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_552_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAngleFromSingleChanOffsets::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_552_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnAngleFromSingleChanOffsets::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnAngleFromSingleChanOffsets", 2886, G__G__reco_552_0_29, (int) ('i'), 
G__get_linked_tagnum(&G__G__recoLN_TSnAngleFromSingleChanOffsets), -1, 0, 1, 1, 1, 0, "u 'TSnAngleFromSingleChanOffsets' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnAngleFromSingleChanOffsets", 3012, G__G__reco_552_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnSaveRecoResultsMod(void) {
   /* TSnSaveRecoResultsMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod));
   G__memfunc_setup("MakeBranches",1188,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSnSaveRecoResultsMod",2111,G__G__reco_558_0_4, 105, G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnSaveRecoResultsMod",2111,G__G__reco_558_0_5, 105, G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsMod), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - treeName "
"C - 'Char_t' 10 - treeTitle i - 'Int_t' 10 '262144' bufsz "
"i - 'Int_t' 10 '1' split", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeName",1073,G__G__reco_558_0_6, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutTreeTitle",1514,G__G__reco_558_0_7, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasAltBranch",1163,G__G__reco_558_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSavingHeaders",1504,G__G__reco_558_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoResultNames",1820,G__G__reco_558_0_10, 117, G__get_linked_tagnum(&G__G__recoLN_TMap), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeName",1085,G__G__reco_558_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutTreeTitle",1526,G__G__reco_558_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSaveHeaders",1399,G__G__reco_558_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAltTreeTag",1273,G__G__reco_558_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveRecoResult",1431,G__G__reco_558_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__reco_558_0_16, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnSaveRecoResultsMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_558_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSaveRecoResultsMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_558_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnSaveRecoResultsMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_558_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnSaveRecoResultsMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_558_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_558_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSaveRecoResultsMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_558_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSaveRecoResultsMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_558_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSaveRecoResultsMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_558_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSaveRecoResultsMod::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSnSaveRecoResultsMod", 2237, G__G__reco_558_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnSaveRecoResultsModcLcLTSnRecoResultWrapper(void) {
   /* TSnSaveRecoResultsMod::TSnRecoResultWrapper */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper));
   G__memfunc_setup("TSnRecoResultWrapper",2046,G__G__reco_559_0_1, 105, G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnRecoResultWrapper",2046,G__G__reco_559_0_2, 105, G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper), -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__reco_559_0_3, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_559_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_559_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnSaveRecoResultsMod::TSnRecoResultWrapper::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_559_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnSaveRecoResultsMod::TSnRecoResultWrapper::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_559_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_559_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSaveRecoResultsMod::TSnRecoResultWrapper::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_559_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSaveRecoResultsMod::TSnRecoResultWrapper::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_559_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSaveRecoResultsMod::TSnRecoResultWrapper::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_559_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSaveRecoResultsMod::TSnRecoResultWrapper::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnRecoResultWrapper", 2046, G__G__reco_559_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper), -1, 0, 1, 1, 1, 0, "u 'TSnSaveRecoResultsMod::TSnRecoResultWrapper' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnRecoResultWrapper", 2172, G__G__reco_559_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__reco_559_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper), -1, 1, 1, 1, 1, 0, "u 'TSnSaveRecoResultsMod::TSnRecoResultWrapper' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnSaveCorlDataMod(void) {
   /* TSnSaveCorlDataMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod));
   G__memfunc_setup("MakeBranches",1188,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TObjArray' - 11 - corls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeDatBranch",1253,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TSnCalWvData' - 1 - dat C - 'Char_t' 10 - brnm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyCorls",926,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"u 'TObjArray' - 11 - corls g - 'Bool_t' 10 'kFALSE' makeNew", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlaveBegin",992,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSnSaveCorlDataMod",1742,G__G__reco_560_0_6, 105, G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnSaveCorlDataMod",1742,G__G__reco_560_0_7, 105, G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod), -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - mainDataNm "
"C - 'Char_t' 10 - treeName C - 'Char_t' 10 - treeTitle "
"i - 'Int_t' 10 '262144' bufsz i - 'Int_t' 10 '1' split", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMainEventBrName",1756,G__G__reco_560_0_8, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrelationsName",1942,G__G__reco_560_0_9, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeName",1073,G__G__reco_560_0_10, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOutTreeTitle",1514,G__G__reco_560_0_11, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAltTreeTag",1261,G__G__reco_560_0_12, 117, G__get_linked_tagnum(&G__G__recoLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasAltBranch",1163,G__G__reco_560_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSavingHeaders",1504,G__G__reco_560_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSavingWvData",1387,G__G__reco_560_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMainEventBrName",1768,G__G__reco_560_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorrelationsName",1954,G__G__reco_560_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeName",1085,G__G__reco_560_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutTreeTitle",1526,G__G__reco_560_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAltTreeTag",1273,G__G__reco_560_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSaveHeaders",1399,G__G__reco_560_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSaveWvData",1282,G__G__reco_560_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__reco_560_0_23, 85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnSaveCorlDataMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__reco_560_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSaveCorlDataMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__reco_560_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnSaveCorlDataMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__reco_560_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnSaveCorlDataMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__recoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__reco_560_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__reco_560_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSaveCorlDataMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__reco_560_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSaveCorlDataMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__reco_560_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSaveCorlDataMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__reco_560_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSaveCorlDataMod::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnSaveCorlDataMod", 1742, G__G__reco_560_0_35, (int) ('i'), G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod), -1, 0, 1, 1, 1, 0, "u 'TSnSaveCorlDataMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnSaveCorlDataMod", 1868, G__G__reco_560_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__reco_560_0_37, (int) ('u'), G__get_linked_tagnum(&G__G__recoLN_TSnSaveCorlDataMod), -1, 1, 1, 1, 1, 0, "u 'TSnSaveCorlDataMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__reco() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__reco() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__reco() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__recoLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__recoLN_ROOT = { "ROOT" , 110 , -1 };
G__linked_taginfo G__G__recoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__recoLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__recoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__recoLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnInterp1DWvData = { "TSnInterp1DWvData" , 99 , -1 };
G__linked_taginfo G__G__recoLN_NSnChanCorl = { "NSnChanCorl" , 110 , -1 };
G__linked_taginfo G__G__recoLN_ROOTcLcLMath = { "ROOT::Math" , 110 , -1 };
G__linked_taginfo G__G__recoLN_ROOTcLcLMathcLcLMinimizer = { "ROOT::Math::Minimizer" , 99 , -1 };
G__linked_taginfo G__G__recoLN_ROOTcLcLMathcLcLFunctor = { "ROOT::Math::Functor" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnMinimizer = { "TSnMinimizer" , 99 , -1 };
G__linked_taginfo G__G__recoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__recoLN_TTask = { "TTask" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__G__recoLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR = { "vector<TAMBranchInfo::BranchPtr_t*,allocator<TAMBranchInfo::BranchPtr_t*> >" , 99 , -1 };
G__linked_taginfo G__G__recoLN_reverse_iteratorlEvectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TAMBranchInfo::BranchPtr_t*,allocator<TAMBranchInfo::BranchPtr_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TAModule = { "TAModule" , 99 , -1 };
G__linked_taginfo G__G__recoLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__recoLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR = { "vector<TIterator*,allocator<TIterator*> >" , 99 , -1 };
G__linked_taginfo G__G__recoLN_reverse_iteratorlEvectorlETIteratormUcOallocatorlETIteratormUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TIterator*,allocator<TIterator*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnFittingModule = { "TSnFittingModule" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnCalWvData = { "TSnCalWvData" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnCalDatModule = { "TSnCalDatModule" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnChanTimeCorlMod = { "TSnChanTimeCorlMod" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnFitChanOffsetMod = { "TSnFitChanOffsetMod" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnChanTimeCorlAltEvtsMod = { "TSnChanTimeCorlAltEvtsMod" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnChanTimeCorlAltEvtsModcLcLECorlType_t = { "TSnChanTimeCorlAltEvtsMod::ECorlType_t" , 101 , -1 };
G__linked_taginfo G__G__recoLN_TNtuple = { "TNtuple" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnEventMetadata = { "TSnEventMetadata" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnEventHeader = { "TSnEventHeader" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnFitChanOffsetAltEvtsMod = { "TSnFitChanOffsetAltEvtsMod" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEPars_t = { "TSnFitChanOffsetAltEvtsMod::EPars_t" , 101 , -1 };
G__linked_taginfo G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEFitType_t = { "TSnFitChanOffsetAltEvtsMod::EFitType_t" , 101 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnRecoChanOffsets = { "TSnRecoChanOffsets" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnGeoStnSite = { "TSnGeoStnSite" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnAngleFromChanCorlMod = { "TSnAngleFromChanCorlMod" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnAngleFromChanCorlModcLcLEPars_t = { "TSnAngleFromChanCorlMod::EPars_t" , 101 , -1 };
G__linked_taginfo G__G__recoLN_TSnRecoSingleChanOffsetSet = { "TSnRecoSingleChanOffsetSet" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnAngleFromSingleChanOffsets = { "TSnAngleFromSingleChanOffsets" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnAngleFromSingleChanOffsetscLcLEPars_t = { "TSnAngleFromSingleChanOffsets::EPars_t" , 101 , -1 };
G__linked_taginfo G__G__recoLN_TSnSaveRecoResultsMod = { "TSnSaveRecoResultsMod" , 99 , -1 };
G__linked_taginfo G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper = { "TSnSaveRecoResultsMod::TSnRecoResultWrapper" , 115 , -1 };
G__linked_taginfo G__G__recoLN_TSnSaveCorlDataMod = { "TSnSaveCorlDataMod" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__reco() {
  G__G__recoLN_TClass.tagnum = -1 ;
  G__G__recoLN_TBuffer.tagnum = -1 ;
  G__G__recoLN_TMemberInspector.tagnum = -1 ;
  G__G__recoLN_TObject.tagnum = -1 ;
  G__G__recoLN_TNamed.tagnum = -1 ;
  G__G__recoLN_TString.tagnum = -1 ;
  G__G__recoLN_ROOT.tagnum = -1 ;
  G__G__recoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__recoLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__recoLN_TObjArray.tagnum = -1 ;
  G__G__recoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__recoLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__recoLN_TArrayD.tagnum = -1 ;
  G__G__recoLN_TVector3.tagnum = -1 ;
  G__G__recoLN_TSnInterp1DWvData.tagnum = -1 ;
  G__G__recoLN_NSnChanCorl.tagnum = -1 ;
  G__G__recoLN_ROOTcLcLMath.tagnum = -1 ;
  G__G__recoLN_ROOTcLcLMathcLcLMinimizer.tagnum = -1 ;
  G__G__recoLN_ROOTcLcLMathcLcLFunctor.tagnum = -1 ;
  G__G__recoLN_TSnMinimizer.tagnum = -1 ;
  G__G__recoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__recoLN_TTask.tagnum = -1 ;
  G__G__recoLN_TTree.tagnum = -1 ;
  G__G__recoLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR.tagnum = -1 ;
  G__G__recoLN_reverse_iteratorlEvectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__recoLN_TAModule.tagnum = -1 ;
  G__G__recoLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__recoLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR.tagnum = -1 ;
  G__G__recoLN_reverse_iteratorlEvectorlETIteratormUcOallocatorlETIteratormUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__recoLN_TSnFittingModule.tagnum = -1 ;
  G__G__recoLN_TMap.tagnum = -1 ;
  G__G__recoLN_TSnCalWvData.tagnum = -1 ;
  G__G__recoLN_TSnCalDatModule.tagnum = -1 ;
  G__G__recoLN_TSnChanTimeCorlMod.tagnum = -1 ;
  G__G__recoLN_TSnFitChanOffsetMod.tagnum = -1 ;
  G__G__recoLN_TSnChanTimeCorlAltEvtsMod.tagnum = -1 ;
  G__G__recoLN_TSnChanTimeCorlAltEvtsModcLcLECorlType_t.tagnum = -1 ;
  G__G__recoLN_TNtuple.tagnum = -1 ;
  G__G__recoLN_TSnEventMetadata.tagnum = -1 ;
  G__G__recoLN_TSnEventHeader.tagnum = -1 ;
  G__G__recoLN_TSnFitChanOffsetAltEvtsMod.tagnum = -1 ;
  G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEPars_t.tagnum = -1 ;
  G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEFitType_t.tagnum = -1 ;
  G__G__recoLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__recoLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__recoLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__recoLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__recoLN_TSnRecoChanOffsets.tagnum = -1 ;
  G__G__recoLN_TSnGeoStnSite.tagnum = -1 ;
  G__G__recoLN_TSnAngleFromChanCorlMod.tagnum = -1 ;
  G__G__recoLN_TSnAngleFromChanCorlModcLcLEPars_t.tagnum = -1 ;
  G__G__recoLN_TSnRecoSingleChanOffsetSet.tagnum = -1 ;
  G__G__recoLN_TSnAngleFromSingleChanOffsets.tagnum = -1 ;
  G__G__recoLN_TSnAngleFromSingleChanOffsetscLcLEPars_t.tagnum = -1 ;
  G__G__recoLN_TSnSaveRecoResultsMod.tagnum = -1 ;
  G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper.tagnum = -1 ;
  G__G__recoLN_TSnSaveCorlDataMod.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__reco() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__recoLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TString);
   G__get_linked_tagnum_fwd(&G__G__recoLN_ROOT);
   G__get_linked_tagnum_fwd(&G__G__recoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__recoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TVector3);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnInterp1DWvData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_NSnChanCorl),0,-1,262144,(char*)NULL,G__setup_memvarNSnChanCorl,G__setup_memfuncNSnChanCorl);
   G__get_linked_tagnum_fwd(&G__G__recoLN_ROOTcLcLMath);
   G__get_linked_tagnum_fwd(&G__G__recoLN_ROOTcLcLMathcLcLMinimizer);
   G__get_linked_tagnum_fwd(&G__G__recoLN_ROOTcLcLMathcLcLFunctor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnMinimizer),sizeof(TSnMinimizer),-1,327424,"a class to provide an interface for Root minimizer routines",G__setup_memvarTSnMinimizer,G__setup_memfuncTSnMinimizer);
   G__get_linked_tagnum_fwd(&G__G__recoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TTask);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TTree);
   G__get_linked_tagnum_fwd(&G__G__recoLN_vectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_reverse_iteratorlEvectorlETAMBranchInfocLcLBranchPtr_tmUcOallocatorlETAMBranchInfocLcLBranchPtr_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TAModule);
   G__get_linked_tagnum_fwd(&G__G__recoLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_vectorlETIteratormUcOallocatorlETIteratormUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_reverse_iteratorlEvectorlETIteratormUcOallocatorlETIteratormUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnFittingModule),sizeof(TSnFittingModule),-1,324864,"base class for modules that will be fitting with a TSnMinimizer",G__setup_memvarTSnFittingModule,G__setup_memfuncTSnFittingModule);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMap);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnCalWvData);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnCalDatModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnChanTimeCorlMod),sizeof(TSnChanTimeCorlMod),-1,324864,"find channel correlation vs sample functions",G__setup_memvarTSnChanTimeCorlMod,G__setup_memfuncTSnChanTimeCorlMod);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnFitChanOffsetMod),sizeof(TSnFitChanOffsetMod),-1,324864,"fits channel offsets between chans in the same event",G__setup_memvarTSnFitChanOffsetMod,G__setup_memfuncTSnFitChanOffsetMod);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnChanTimeCorlAltEvtsMod),sizeof(TSnChanTimeCorlAltEvtsMod),-1,324864,"calculate correlation between waveforms in the same channel of different events",G__setup_memvarTSnChanTimeCorlAltEvtsMod,G__setup_memfuncTSnChanTimeCorlAltEvtsMod);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnChanTimeCorlAltEvtsModcLcLECorlType_t);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TNtuple);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnEventMetadata);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnEventHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnFitChanOffsetAltEvtsMod),sizeof(TSnFitChanOffsetAltEvtsMod),-1,324864,"fits channel offsets between the same channel in different events",G__setup_memvarTSnFitChanOffsetAltEvtsMod,G__setup_memfuncTSnFitChanOffsetAltEvtsMod);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEPars_t);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnFitChanOffsetAltEvtsModcLcLEFitType_t);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnRecoChanOffsets);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnGeoStnSite);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnAngleFromChanCorlMod),sizeof(TSnAngleFromChanCorlMod),-1,324864,"reconstruct theta/phi of plane wave from channel correlations",G__setup_memvarTSnAngleFromChanCorlMod,G__setup_memfuncTSnAngleFromChanCorlMod);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnAngleFromChanCorlModcLcLEPars_t);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnRecoSingleChanOffsetSet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnAngleFromSingleChanOffsets),sizeof(TSnAngleFromSingleChanOffsets),-1,324864,"reconstruct theta/phi of plane wave from single channel offsets",G__setup_memvarTSnAngleFromSingleChanOffsets,G__setup_memfuncTSnAngleFromSingleChanOffsets);
   G__get_linked_tagnum_fwd(&G__G__recoLN_TSnAngleFromSingleChanOffsetscLcLEPars_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnSaveRecoResultsMod),sizeof(TSnSaveRecoResultsMod),-1,324864,"save reconstruction results to a tree",G__setup_memvarTSnSaveRecoResultsMod,G__setup_memfuncTSnSaveRecoResultsMod);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnSaveRecoResultsModcLcLTSnRecoResultWrapper),sizeof(TSnSaveRecoResultsMod::TSnRecoResultWrapper),-1,324864,"wrapper for a TSnRecoResult",G__setup_memvarTSnSaveRecoResultsModcLcLTSnRecoResultWrapper,G__setup_memfuncTSnSaveRecoResultsModcLcLTSnRecoResultWrapper);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__recoLN_TSnSaveCorlDataMod),sizeof(TSnSaveCorlDataMod),-1,324864,"save correlation reco results to a tree",G__setup_memvarTSnSaveCorlDataMod,G__setup_memfuncTSnSaveCorlDataMod);
}
extern "C" void G__cpp_setupG__reco(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__reco()");
  G__set_cpp_environmentG__reco();
  G__cpp_setup_tagtableG__reco();

  G__cpp_setup_inheritanceG__reco();

  G__cpp_setup_typetableG__reco();

  G__cpp_setup_memvarG__reco();

  G__cpp_setup_memfuncG__reco();
  G__cpp_setup_globalG__reco();
  G__cpp_setup_funcG__reco();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__reco();
  return;
}
class G__cpp_setup_initG__reco {
  public:
    G__cpp_setup_initG__reco() { G__add_setup_func("G__reco",(G__incsetup)(&G__cpp_setupG__reco)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__reco() { G__remove_setup_func("G__reco"); }
};
G__cpp_setup_initG__reco G__cpp_setup_initializerG__reco;

