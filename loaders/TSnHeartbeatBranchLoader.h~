#ifndef SNS_TSnHeartbeatBranchLoader
#define SNS_TSnHeartbeatBranchLoader

#include "TSnTimeLinkBranchLoader.h"
#include "TSnHeartbeat.h"
#include "TSnEventHeader.h"

class TSnHeartbeatBranchLoader : public TSnTimeLinkBranchLoader {
 private:
  TSnHeartbeat*   fHtbt; //! my heartbeat
  TSnEventHeader* fHdr;  //! main event header
  
 public:
  TSnHeartbeatBranchLoader();
  TSnHeartbeatBranchLoader(TAMBranchInfo* binfo,
			   const Char_t* linkedTreeName,
                           const Char_t* linkedTimeBranchName,
                           const Char_t* mainTimeBranchName,
                           const TSnTimeLinkBranchLoader::EMethod_t method) :
    TSnTimeLinkBranchLoader(binfo, linkedTreeName, linkedBranchName,
			    mainTimeBranchName, method) {
  }
  virtual ~TSnHeartbeatBranchLoader();

  inline
  virtual TTimeStamp* GetMyTime() const {
    return (fHtbt!=0) ? &(fHtbt->GetTime()) : 0;
  }
  inline
  virtual TTimeStamp* GetMainTime() const {
    return (fHdr!=0) ? &(fHdr->GetTime()) : 0;
  }
  
  virtual void SetPointerToMyLinkData() {
    SetPointerToLinkDataIn(fHtbt, GetMyBranch());
  }
  virtual void SetPointerToMainLinkData() {
    SetPointerToLinkDataIn(fHdr, GetMainBranch());
  }
 
  ClassDef(TSnHeartbeatBranchLoader, 1); // a time link branch loader that knows how to get time from a heartbeat entry
};

#endif // SNS_TSnHeartbeatBranchLoader
