//
// File generated by /data/users/jtatar/Software/root/bin/rootcint at Mon Mar 24 20:10:13 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME utildIG__util
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__util.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSnAxisDetails_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnAxisDetails(void *p = 0);
   static void *newArray_TSnAxisDetails(Long_t size, void *p);
   static void delete_TSnAxisDetails(void *p);
   static void deleteArray_TSnAxisDetails(void *p);
   static void destruct_TSnAxisDetails(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnAxisDetails*)
   {
      ::TSnAxisDetails *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnAxisDetails >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnAxisDetails", ::TSnAxisDetails::Class_Version(), "./util/TSnAxisDetails.h", 39,
                  typeid(::TSnAxisDetails), DefineBehavior(ptr, ptr),
                  &::TSnAxisDetails::Dictionary, isa_proxy, 4,
                  sizeof(::TSnAxisDetails) );
      instance.SetNew(&new_TSnAxisDetails);
      instance.SetNewArray(&newArray_TSnAxisDetails);
      instance.SetDelete(&delete_TSnAxisDetails);
      instance.SetDeleteArray(&deleteArray_TSnAxisDetails);
      instance.SetDestructor(&destruct_TSnAxisDetails);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnAxisDetails*)
   {
      return GenerateInitInstanceLocal((::TSnAxisDetails*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnAxisDetails*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnAxisDetailscLcLTAxDet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TSnAxisDetailscLcLTAxDet(void *p);
   static void deleteArray_TSnAxisDetailscLcLTAxDet(void *p);
   static void destruct_TSnAxisDetailscLcLTAxDet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnAxisDetails::TAxDet*)
   {
      ::TSnAxisDetails::TAxDet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnAxisDetails::TAxDet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnAxisDetails::TAxDet", ::TSnAxisDetails::TAxDet::Class_Version(), "./util/TSnAxisDetails.h", 42,
                  typeid(::TSnAxisDetails::TAxDet), DefineBehavior(ptr, ptr),
                  &::TSnAxisDetails::TAxDet::Dictionary, isa_proxy, 4,
                  sizeof(::TSnAxisDetails::TAxDet) );
      instance.SetDelete(&delete_TSnAxisDetailscLcLTAxDet);
      instance.SetDeleteArray(&deleteArray_TSnAxisDetailscLcLTAxDet);
      instance.SetDestructor(&destruct_TSnAxisDetailscLcLTAxDet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnAxisDetails::TAxDet*)
   {
      return GenerateInitInstanceLocal((::TSnAxisDetails::TAxDet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnAxisDetails::TAxDet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnPlotBrowser_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnPlotBrowser(void *p = 0);
   static void *newArray_TSnPlotBrowser(Long_t size, void *p);
   static void delete_TSnPlotBrowser(void *p);
   static void deleteArray_TSnPlotBrowser(void *p);
   static void destruct_TSnPlotBrowser(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnPlotBrowser*)
   {
      ::TSnPlotBrowser *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnPlotBrowser >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnPlotBrowser", ::TSnPlotBrowser::Class_Version(), "./util/TSnPlotBrowser.h", 50,
                  typeid(::TSnPlotBrowser), DefineBehavior(ptr, ptr),
                  &::TSnPlotBrowser::Dictionary, isa_proxy, 4,
                  sizeof(::TSnPlotBrowser) );
      instance.SetNew(&new_TSnPlotBrowser);
      instance.SetNewArray(&newArray_TSnPlotBrowser);
      instance.SetDelete(&delete_TSnPlotBrowser);
      instance.SetDeleteArray(&deleteArray_TSnPlotBrowser);
      instance.SetDestructor(&destruct_TSnPlotBrowser);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnPlotBrowser*)
   {
      return GenerateInitInstanceLocal((::TSnPlotBrowser*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnPlotBrowser*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnMath_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnMath(void *p = 0);
   static void *newArray_TSnMath(Long_t size, void *p);
   static void delete_TSnMath(void *p);
   static void deleteArray_TSnMath(void *p);
   static void destruct_TSnMath(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnMath*)
   {
      ::TSnMath *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnMath >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnMath", ::TSnMath::Class_Version(), "./util/TSnMath.h", 22,
                  typeid(::TSnMath), DefineBehavior(ptr, ptr),
                  &::TSnMath::Dictionary, isa_proxy, 4,
                  sizeof(::TSnMath) );
      instance.SetNew(&new_TSnMath);
      instance.SetNewArray(&newArray_TSnMath);
      instance.SetDelete(&delete_TSnMath);
      instance.SetDeleteArray(&deleteArray_TSnMath);
      instance.SetDestructor(&destruct_TSnMath);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnMath*)
   {
      return GenerateInitInstanceLocal((::TSnMath*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnMath*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnSpectral_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnSpectral(void *p = 0);
   static void *newArray_TSnSpectral(Long_t size, void *p);
   static void delete_TSnSpectral(void *p);
   static void deleteArray_TSnSpectral(void *p);
   static void destruct_TSnSpectral(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnSpectral*)
   {
      ::TSnSpectral *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnSpectral >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnSpectral", ::TSnSpectral::Class_Version(), "./util/TSnSpectral.h", 26,
                  typeid(::TSnSpectral), DefineBehavior(ptr, ptr),
                  &::TSnSpectral::Dictionary, isa_proxy, 4,
                  sizeof(::TSnSpectral) );
      instance.SetNew(&new_TSnSpectral);
      instance.SetNewArray(&newArray_TSnSpectral);
      instance.SetDelete(&delete_TSnSpectral);
      instance.SetDeleteArray(&deleteArray_TSnSpectral);
      instance.SetDestructor(&destruct_TSnSpectral);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnSpectral*)
   {
      return GenerateInitInstanceLocal((::TSnSpectral*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnSpectral*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSnAxisDetails::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnAxisDetails::Class_Name()
{
   return "TSnAxisDetails";
}

//______________________________________________________________________________
const char *TSnAxisDetails::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnAxisDetails*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnAxisDetails::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnAxisDetails*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnAxisDetails::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnAxisDetails*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnAxisDetails::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnAxisDetails*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnAxisDetails::TAxDet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnAxisDetails::TAxDet::Class_Name()
{
   return "TSnAxisDetails::TAxDet";
}

//______________________________________________________________________________
const char *TSnAxisDetails::TAxDet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnAxisDetails::TAxDet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnAxisDetails::TAxDet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnAxisDetails::TAxDet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnAxisDetails::TAxDet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnAxisDetails::TAxDet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnAxisDetails::TAxDet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnAxisDetails::TAxDet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnPlotBrowser::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnPlotBrowser::Class_Name()
{
   return "TSnPlotBrowser";
}

//______________________________________________________________________________
const char *TSnPlotBrowser::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotBrowser*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnPlotBrowser::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotBrowser*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnPlotBrowser::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotBrowser*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnPlotBrowser::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnPlotBrowser*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnMath::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnMath::Class_Name()
{
   return "TSnMath";
}

//______________________________________________________________________________
const char *TSnMath::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnMath*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnMath::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnMath*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnMath::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnMath*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnMath::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnMath*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnSpectral::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnSpectral::Class_Name()
{
   return "TSnSpectral";
}

//______________________________________________________________________________
const char *TSnSpectral::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSpectral*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnSpectral::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnSpectral*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnSpectral::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSpectral*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnSpectral::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnSpectral*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSnAxisDetails::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnAxisDetails.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnAxisDetails::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnAxisDetails::Class(),this);
   }
}

//______________________________________________________________________________
void TSnAxisDetails::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnAxisDetails.
      TClass *R__cl = ::TSnAxisDetails::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetailList", &fDetailList);
      R__insp.InspectMember(fDetailList, "fDetailList.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnAxisDetails(void *p) {
      return  p ? new(p) ::TSnAxisDetails : new ::TSnAxisDetails;
   }
   static void *newArray_TSnAxisDetails(Long_t nElements, void *p) {
      return p ? new(p) ::TSnAxisDetails[nElements] : new ::TSnAxisDetails[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnAxisDetails(void *p) {
      delete ((::TSnAxisDetails*)p);
   }
   static void deleteArray_TSnAxisDetails(void *p) {
      delete [] ((::TSnAxisDetails*)p);
   }
   static void destruct_TSnAxisDetails(void *p) {
      typedef ::TSnAxisDetails current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnAxisDetails

//______________________________________________________________________________
void TSnAxisDetails::TAxDet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnAxisDetails::TAxDet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnAxisDetails::TAxDet::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnAxisDetails::TAxDet::Class(),this);
   }
}

//______________________________________________________________________________
void TSnAxisDetails::TAxDet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnAxisDetails::TAxDet.
      TClass *R__cl = ::TSnAxisDetails::TAxDet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbins", &fNbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMin", &fMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMax", &fMax);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSnAxisDetailscLcLTAxDet(void *p) {
      delete ((::TSnAxisDetails::TAxDet*)p);
   }
   static void deleteArray_TSnAxisDetailscLcLTAxDet(void *p) {
      delete [] ((::TSnAxisDetails::TAxDet*)p);
   }
   static void destruct_TSnAxisDetailscLcLTAxDet(void *p) {
      typedef ::TSnAxisDetails::TAxDet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnAxisDetails::TAxDet

//______________________________________________________________________________
void TSnPlotBrowser::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnPlotBrowser.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnPlotBrowser::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnPlotBrowser::Class(),this);
   }
}

//______________________________________________________________________________
void TSnPlotBrowser::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnPlotBrowser.
      TClass *R__cl = ::TSnPlotBrowser::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCanv", &fCanv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBtnWnd", &fBtnWnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBtnFrame", &fBtnFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBtnBar", &fBtnBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWndHints", &fWndHints);
      R__insp.InspectMember(fWndHints, "fWndHints.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBtnHints", &fBtnHints);
      R__insp.InspectMember(fBtnHints, "fBtnHints.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPBName", &fPBName);
      R__insp.InspectMember(fPBName, "fPBName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBtnWidth", &fBtnWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBtnHeight", &fBtnHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlotSets", &fPlotSets);
      R__insp.InspectMember(fPlotSets, "fPlotSets.");
      TQObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnPlotBrowser(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSnPlotBrowser : new ::TSnPlotBrowser;
   }
   static void *newArray_TSnPlotBrowser(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSnPlotBrowser[nElements] : new ::TSnPlotBrowser[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnPlotBrowser(void *p) {
      delete ((::TSnPlotBrowser*)p);
   }
   static void deleteArray_TSnPlotBrowser(void *p) {
      delete [] ((::TSnPlotBrowser*)p);
   }
   static void destruct_TSnPlotBrowser(void *p) {
      typedef ::TSnPlotBrowser current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnPlotBrowser

//______________________________________________________________________________
void TSnMath::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnMath.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnMath::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnMath::Class(),this);
   }
}

//______________________________________________________________________________
void TSnMath::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnMath.
      TClass *R__cl = ::TSnMath::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnMath(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSnMath : new ::TSnMath;
   }
   static void *newArray_TSnMath(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSnMath[nElements] : new ::TSnMath[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnMath(void *p) {
      delete ((::TSnMath*)p);
   }
   static void deleteArray_TSnMath(void *p) {
      delete [] ((::TSnMath*)p);
   }
   static void destruct_TSnMath(void *p) {
      typedef ::TSnMath current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnMath

//______________________________________________________________________________
void TSnSpectral::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnSpectral.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnSpectral::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnSpectral::Class(),this);
   }
}

//______________________________________________________________________________
void TSnSpectral::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnSpectral.
      TClass *R__cl = ::TSnSpectral::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnSpectral(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSnSpectral : new ::TSnSpectral;
   }
   static void *newArray_TSnSpectral(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSnSpectral[nElements] : new ::TSnSpectral[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnSpectral(void *p) {
      delete ((::TSnSpectral*)p);
   }
   static void deleteArray_TSnSpectral(void *p) {
      delete [] ((::TSnSpectral*)p);
   }
   static void destruct_TSnSpectral(void *p) {
      typedef ::TSnSpectral current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnSpectral

/********************************************************
* util/G__util.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__util();

extern "C" void G__set_cpp_environmentG__util() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("util/TSnAxisDetails.h");
  G__add_compiledheader("util/TSnPlotBrowser.h");
  G__add_compiledheader("util/TSnMath.h");
  G__add_compiledheader("util/TSnSpectral.h");
  G__add_compiledheader("TBranch.h");
  G__add_compiledheader("TH1.h");
  G__cpp_reset_tagtableG__util();
}
#include <new>
extern "C" int G__cpp_dllrevG__util() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSnAxisDetails */
static int G__G__util_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnAxisDetails* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAxisDetails[n];
     } else {
       p = new((void*) gvp) TSnAxisDetails[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnAxisDetails;
     } else {
       p = new((void*) gvp) TSnAxisDetails;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetails));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnAxisDetails* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnAxisDetails((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSnAxisDetails((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetails));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSnAxisDetails*) G__getstructoffset())->AddAxis((const Char_t*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Axis_t) G__double(libp->para[2]), (const Axis_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnAxisDetails*) G__getstructoffset())->GetAxis((const Char_t*) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Axis_t*) G__Doubleref(&libp->para[2]), *(Axis_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSnAxisDetails*) G__getstructoffset())->UpdateAxis((const Char_t*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Axis_t) G__double(libp->para[2]), (const Axis_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnAxisDetails*) G__getstructoffset())->AxisExists((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSnAxisDetails*) G__getstructoffset())->IsEmpty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSnAxisDetails*) G__getstructoffset())->RemoveAxis((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnAxisDetails::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAxisDetails::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnAxisDetails::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnAxisDetails::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAxisDetails*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAxisDetails::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnAxisDetails::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAxisDetails::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_190_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnAxisDetails::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnAxisDetails G__TTSnAxisDetails;
static int G__G__util_190_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnAxisDetails*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnAxisDetails*) (soff+(sizeof(TSnAxisDetails)*i)))->~G__TTSnAxisDetails();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnAxisDetails*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnAxisDetails*) (soff))->~G__TTSnAxisDetails();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnAxisDetails::TAxDet */
static int G__G__util_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnAxisDetails::TAxDet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnAxisDetails::TAxDet(
(const Char_t*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Axis_t) G__double(libp->para[2]), (const Axis_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) TSnAxisDetails::TAxDet(
(const Char_t*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Axis_t) G__double(libp->para[2]), (const Axis_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetailscLcLTAxDet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnAxisDetails::TAxDet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAxisDetails::TAxDet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnAxisDetails::TAxDet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnAxisDetails::TAxDet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnAxisDetails::TAxDet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAxisDetails::TAxDet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnAxisDetails::TAxDet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnAxisDetails::TAxDet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnAxisDetails::TAxDet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__util_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnAxisDetails::TAxDet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnAxisDetails::TAxDet(*(TSnAxisDetails::TAxDet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetailscLcLTAxDet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnAxisDetails::TAxDet G__TTSnAxisDetailscLcLTAxDet;
static int G__G__util_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnAxisDetails::TAxDet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnAxisDetails::TAxDet*) (soff+(sizeof(TSnAxisDetails::TAxDet)*i)))->~G__TTSnAxisDetailscLcLTAxDet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnAxisDetails::TAxDet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnAxisDetails::TAxDet*) (soff))->~G__TTSnAxisDetailscLcLTAxDet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__util_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnAxisDetails::TAxDet* dest = (TSnAxisDetails::TAxDet*) G__getstructoffset();
   *dest = *(TSnAxisDetails::TAxDet*) libp->para[0].ref;
   const TSnAxisDetails::TAxDet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnPlotBrowser */
static int G__G__util_277_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnPlotBrowser*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSnPlotBrowser*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((TSnPlotBrowser*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TSnPlotBrowser*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TSnPlotBrowser*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TSnPlotBrowser*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("EmitVA: more than 56 var args\n");
   }
      ((TSnPlotBrowser*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnPlotBrowser* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnPlotBrowser(
(const Char_t*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSnPlotBrowser(
(const Char_t*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnPlotBrowser((const Char_t*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSnPlotBrowser((const Char_t*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnPlotBrowser((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSnPlotBrowser((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSnPlotBrowser[n];
       } else {
         p = new((void*) gvp) TSnPlotBrowser[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSnPlotBrowser;
       } else {
         p = new((void*) gvp) TSnPlotBrowser;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowser));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnPlotBrowser*) G__getstructoffset())->GetCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->SetCanvas((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((TSnPlotBrowser*) G__getstructoffset())->AddNewPlotSet(
(const Char_t*) G__int(libp->para[0]), *(TObjArray*) libp->para[1].ref
, *(TObjArray*) libp->para[2].ref, *(TArrayI*) libp->para[3].ref
, *(TArrayI*) libp->para[4].ref, (UInt_t) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((TSnPlotBrowser*) G__getstructoffset())->AddNewPlotSet((const Char_t*) G__int(libp->para[0]), *(TObjArray*) libp->para[1].ref
, *(TObjArray*) libp->para[2].ref, *(TArrayI*) libp->para[3].ref
, *(TArrayI*) libp->para[4].ref, (UInt_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((TSnPlotBrowser*) G__getstructoffset())->AddNewPlotSet((const Char_t*) G__int(libp->para[0]), *(TObjArray*) libp->para[1].ref
, *(TObjArray*) libp->para[2].ref, *(TArrayI*) libp->para[3].ref
, *(TArrayI*) libp->para[4].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TSnPlotBrowser*) G__getstructoffset())->AddNewPlotSet((const Char_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TSnPlotBrowser*) G__getstructoffset())->AddNewPlotSet((const Char_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TSnPlotBrowser*) G__getstructoffset())->AddNewPlotSet((const Char_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((TSnPlotBrowser*) G__getstructoffset())->AddPlotToSet((const Char_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((TSnPlotBrowser*) G__getstructoffset())->AddPlotToSet((const Char_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TSnPlotBrowser*) G__getstructoffset())->AddPlotToSet((const Char_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TSnPlotBrowser*) G__getstructoffset())->AddPlotToSet((const Char_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->DivideCanvForSet((const Char_t*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnPlotBrowser*) G__getstructoffset())->FindPlotInSet((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->DrawPlots((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->DrawButtonBar();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      TSnPlotBrowser::CalcCanvDivs(*(UInt_t*) G__UIntref(&libp->para[0]), *(UInt_t*) G__UIntref(&libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])
, (const UInt_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      TSnPlotBrowser::CalcCanvDivs(*(UInt_t*) G__UIntref(&libp->para[0]), *(UInt_t*) G__UIntref(&libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      TSnPlotBrowser::CalcCanvDivs(*(UInt_t*) G__UIntref(&libp->para[0]), *(UInt_t*) G__UIntref(&libp->para[1])
, (const UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnPlotBrowser::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnPlotBrowser::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnPlotBrowser::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnPlotBrowser::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnPlotBrowser*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnPlotBrowser::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnPlotBrowser::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnPlotBrowser::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_277_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnPlotBrowser::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnPlotBrowser G__TTSnPlotBrowser;
static int G__G__util_277_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnPlotBrowser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnPlotBrowser*) (soff+(sizeof(TSnPlotBrowser)*i)))->~G__TTSnPlotBrowser();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnPlotBrowser*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnPlotBrowser*) (soff))->~G__TTSnPlotBrowser();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnMath */
static int G__G__util_294_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::StepFromPeak(*(TH1*) libp->para[0].ref, (const Float_t) G__double(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::FindMeanRmsSteppingFromPeak(*(TH1*) libp->para[0].ref, (const Float_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::FindGausMeanRmsSteppingFromPeak(*(TH1*) libp->para[0].ref, (const Float_t) G__double(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::GetNiceDateAxisFor((const UInt_t) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnMath* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnMath[n];
     } else {
       p = new((void*) gvp) TSnMath[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnMath;
     } else {
       p = new((void*) gvp) TSnMath;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__utilLN_TSnMath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnMath::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnMath::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnMath::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnMath*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnMath*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnMath*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnMath*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnMath::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnMath::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnMath::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnMath::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::GetAveVarFast<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::GetAveVarFast<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::GetAveRMSFast<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::GetAveRMSFast<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::GetAveVarTwoPass<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::GetAveVarTwoPass<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::GetAveRMSTwoPass<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::GetAveRMSTwoPass<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      TSnMath::GetWeightedAveVarFast<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), (const Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TSnMath::GetWeightedAveVarFast<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      TSnMath::GetWeightedAveVarFast<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), (const Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TSnMath::GetWeightedAveVarFast<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      TSnMath::GetWeightedAveRMSFast<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), (const Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TSnMath::GetWeightedAveRMSFast<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      TSnMath::GetWeightedAveRMSFast<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), (const Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TSnMath::GetWeightedAveRMSFast<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      TSnMath::GetWeightedAveVarTwoPass<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), (const Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TSnMath::GetWeightedAveVarTwoPass<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      TSnMath::GetWeightedAveVarTwoPass<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), (const Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TSnMath::GetWeightedAveVarTwoPass<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      TSnMath::GetWeightedAveRMSTwoPass<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]), (const Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TSnMath::GetWeightedAveRMSTwoPass<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(float*) G__Floatref(&libp->para[3])
, *(float*) G__Floatref(&libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      TSnMath::GetWeightedAveRMSTwoPass<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), (const Double_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      TSnMath::GetWeightedAveRMSTwoPass<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TSnMath::GetRange<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(float*) G__Floatref(&libp->para[2]), *(float*) G__Floatref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSnMath::GetRange<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TSnMath::GetAngleDiff<Float_t>((const float) G__double(libp->para[0]), (const float) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSnMath::GetAngleDiff<Double_t>((const double) G__double(libp->para[0]), (const double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TSnMath::GetAngleDiffDeg<Float_t>((const float) G__double(libp->para[0]), (const float) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSnMath::GetAngleDiffDeg<Double_t>((const double) G__double(libp->para[0]), (const double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TSnMath::SearchOneToOneMapping<Float_t>((const Long64_t) G__Longlong(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (const float) G__double(libp->para[3])
, *(float*) G__Floatref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TSnMath::SearchOneToOneMapping<Double_t>((const Long64_t) G__Longlong(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (const double) G__double(libp->para[3])
, *(double*) G__Doubleref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnMath::GetBitsAsString<Char_t>((const char) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnMath::GetBitsAsString<UChar_t>((const unsigned char) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnMath::GetBitsAsString<Short_t>((const short) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnMath::GetBitsAsString<UShort_t>((const unsigned short) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnMath::GetBitsAsString<Int_t>((const int) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnMath::GetBitsAsString<UInt_t>((const unsigned int) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnMath::GetBitsAsString<Long64_t>((const long long) G__Longlong(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TSnMath::GetBitsAsString<ULong64_t>((const unsigned long long) G__ULonglong(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::PrintBits<Char_t>((const char) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::PrintBits<UChar_t>((const unsigned char) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::PrintBits<Short_t>((const short) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::PrintBits<UShort_t>((const unsigned short) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::PrintBits<Int_t>((const int) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::PrintBits<UInt_t>((const unsigned int) G__int(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::PrintBits<Long64_t>((const long long) G__Longlong(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_294_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnMath::PrintBits<ULong64_t>((const unsigned long long) G__ULonglong(libp->para[0]), (const Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__util_294_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnMath* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnMath(*(TSnMath*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__utilLN_TSnMath));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnMath G__TTSnMath;
static int G__G__util_294_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnMath*) (soff+(sizeof(TSnMath)*i)))->~G__TTSnMath();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnMath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnMath*) (soff))->~G__TTSnMath();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__util_294_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnMath* dest = (TSnMath*) G__getstructoffset();
   *dest = *(TSnMath*) libp->para[0].ref;
   const TSnMath& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnSpectral */
static int G__G__util_309_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::GetRealFFTFreqBins((const UInt_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSpectral::NewGraph((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::SetPoint((TGraph*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSpectral* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSpectral[n];
     } else {
       p = new((void*) gvp) TSnSpectral[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnSpectral;
     } else {
       p = new((void*) gvp) TSnSpectral;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__utilLN_TSnSpectral));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSpectral::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSpectral::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnSpectral::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnSpectral*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSpectral*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSpectral*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnSpectral*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSpectral::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSpectral::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnSpectral::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnSpectral::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TSnSpectral::SquareWin<Float_t>((const Int_t) G__int(libp->para[0]), (const float) G__double(libp->para[1])
, (const float) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSnSpectral::SquareWin<Double_t>((const Int_t) G__int(libp->para[0]), (const double) G__double(libp->para[1])
, (const double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TSnSpectral::WelchWin<Float_t>((const Int_t) G__int(libp->para[0]), (const float) G__double(libp->para[1])
, (const float) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSnSpectral::WelchWin<Double_t>((const Int_t) G__int(libp->para[0]), (const double) G__double(libp->para[1])
, (const double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TSnSpectral::BartlettWin<Float_t>((const Int_t) G__int(libp->para[0]), (const float) G__double(libp->para[1])
, (const float) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSnSpectral::BartlettWin<Double_t>((const Int_t) G__int(libp->para[0]), (const double) G__double(libp->para[1])
, (const double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      TSnSpectral::DiscreteCpxFFT<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TSnSpectral::DiscreteCpxFFT<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      TSnSpectral::DiscreteCpxFFT<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TSnSpectral::DiscreteCpxFFT<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      TSnSpectral::RealFFT<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TSnSpectral::RealFFT<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      TSnSpectral::RealFFT<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      TSnSpectral::RealFFT<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::RealFFTSimul<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3])
, (const UInt_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::RealFFTSimul<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (const UInt_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::Correlate<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (float*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::Correlate<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSpectral::NewCorrelateGraph<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const Bool_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSpectral::NewCorrelateGraph<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const Bool_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::Spectrum<TBranch,Float_t>(
(TBranch*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Bool_t) G__int(libp->para[4]), (const Int_t) G__int(libp->para[5])
, (const TSnSpectral::EWinType_t) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::Spectrum<TBranch,Double_t>(
(TBranch*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Bool_t) G__int(libp->para[4]), (const Int_t) G__int(libp->para[5])
, (const TSnSpectral::EWinType_t) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::Spectrum<TH1F,Float_t>(
(TH1F*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Bool_t) G__int(libp->para[4]), (const Int_t) G__int(libp->para[5])
, (const TSnSpectral::EWinType_t) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::Spectrum<TH1D,Double_t>(
(TH1D*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3])
, (const Bool_t) G__int(libp->para[4]), (const Int_t) G__int(libp->para[5])
, (const TSnSpectral::EWinType_t) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::SlowLomb<Float_t>(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const Float_t) G__double(libp->para[3])
, (const Float_t) G__double(libp->para[4]), (float*) G__int(libp->para[5])
, (float*) G__int(libp->para[6]), (const UInt_t) G__int(libp->para[7])
, *(UInt_t*) G__UIntref(&libp->para[8]), *(UInt_t*) G__UIntref(&libp->para[9])
, *(float*) G__Floatref(&libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::SlowLomb<Double_t>(
(double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const Float_t) G__double(libp->para[3])
, (const Float_t) G__double(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (const UInt_t) G__int(libp->para[7])
, *(UInt_t*) G__UIntref(&libp->para[8]), *(UInt_t*) G__UIntref(&libp->para[9])
, *(double*) G__Doubleref(&libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::FastLomb<Float_t>(
(float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const Float_t) G__double(libp->para[3])
, (const Float_t) G__double(libp->para[4]), (float*) G__int(libp->para[5])
, (float*) G__int(libp->para[6]), (const UInt_t) G__int(libp->para[7])
, *(UInt_t*) G__UIntref(&libp->para[8]), *(UInt_t*) G__UIntref(&libp->para[9])
, *(float*) G__Floatref(&libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::FastLomb<Double_t>(
(double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const Float_t) G__double(libp->para[3])
, (const Float_t) G__double(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6]), (const UInt_t) G__int(libp->para[7])
, *(UInt_t*) G__UIntref(&libp->para[8]), *(UInt_t*) G__UIntref(&libp->para[9])
, *(double*) G__Doubleref(&libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::HilbertCpxAnalyticSignal<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::HilbertCpxAnalyticSignal<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::EnvelopeReal<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::EnvelopeReal<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::Spread<Float_t>((const float) G__double(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const float) G__double(libp->para[3])
, (const UInt_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnSpectral::Spread<Double_t>((const double) G__double(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const double) G__double(libp->para[3])
, (const UInt_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSpectral::NewGraphFromRealFFT<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const float) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSpectral::NewGraphFromRealFFT<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (const double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) TSnSpectral::PearsonSmpCorrCoef<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSnSpectral::PearsonSmpCorrCoef<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) TSnSpectral::NewScanPrsCorrCoefGraph<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])
, (const UInt_t) G__int(libp->para[4]), (const Bool_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) TSnSpectral::NewScanPrsCorrCoefGraph<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])
, (const UInt_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) TSnSpectral::NewScanPrsCorrCoefGraph<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) TSnSpectral::NewScanPrsCorrCoefGraph<Float_t>((float*) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) TSnSpectral::NewScanPrsCorrCoefGraph<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])
, (const UInt_t) G__int(libp->para[4]), (const Bool_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) TSnSpectral::NewScanPrsCorrCoefGraph<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])
, (const UInt_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) TSnSpectral::NewScanPrsCorrCoefGraph<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) TSnSpectral::NewScanPrsCorrCoefGraph<Double_t>((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const UInt_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSpectral::NewScanPrsCorrCoefGraphUneq<Float_t>((float*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__util_309_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnSpectral::NewScanPrsCorrCoefGraphUneq<Double_t>((double*) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (const UInt_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__util_309_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnSpectral* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnSpectral(*(TSnSpectral*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__utilLN_TSnSpectral));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnSpectral G__TTSnSpectral;
static int G__G__util_309_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnSpectral*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnSpectral*) (soff+(sizeof(TSnSpectral)*i)))->~G__TTSnSpectral();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnSpectral*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnSpectral*) (soff))->~G__TTSnSpectral();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__util_309_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnSpectral* dest = (TSnSpectral*) G__getstructoffset();
   *dest = *(TSnSpectral*) libp->para[0].ref;
   const TSnSpectral& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSnAxisDetails */

/* TSnAxisDetails::TAxDet */

/* TSnPlotBrowser */

/* TSnMath */

/* TSnSpectral */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__util {
 public:
  G__Sizep2memfuncG__util(): p(&G__Sizep2memfuncG__util::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__util::*p)();
};

size_t G__get_sizep2memfuncG__util()
{
  G__Sizep2memfuncG__util a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__util() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetails))) {
     TSnAxisDetails *G__Lderived;
     G__Lderived=(TSnAxisDetails*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetails),G__get_linked_tagnum(&G__G__utilLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetails),G__get_linked_tagnum(&G__G__utilLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetailscLcLTAxDet))) {
     TSnAxisDetails::TAxDet *G__Lderived;
     G__Lderived=(TSnAxisDetails::TAxDet*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetailscLcLTAxDet),G__get_linked_tagnum(&G__G__utilLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetailscLcLTAxDet),G__get_linked_tagnum(&G__G__utilLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowser))) {
     TSnPlotBrowser *G__Lderived;
     G__Lderived=(TSnPlotBrowser*)0x1000;
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowser),G__get_linked_tagnum(&G__G__utilLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__util() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("Axis_t",100,-1,0,-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__utilLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__utilLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__utilLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__utilLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__utilLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__utilLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__utilLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__utilLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__utilLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__utilLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__utilLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__utilLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__utilLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__utilLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__utilLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__G__utilLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__utilLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__G__utilLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__utilLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__utilLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__utilLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__utilLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__G__utilLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__utilLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__utilLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSnAxisDetails */
static void G__setup_memvarTSnAxisDetails(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetails));
   { TSnAxisDetails *p; p=(TSnAxisDetails*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__utilLN_THashTable),-1,-1,4,"fDetailList=",0,"the list of axis details");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__utilLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnAxisDetails::TAxDet */
static void G__setup_memvarTSnAxisDetailscLcLTAxDet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetailscLcLTAxDet));
   { TSnAxisDetails::TAxDet *p; p=(TSnAxisDetails::TAxDet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNbins)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNbins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMin)-(long)(p)),100,0,0,-1,G__defined_typename("Axis_t"),-1,1,"fMin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fMax)-(long)(p)),100,0,0,-1,G__defined_typename("Axis_t"),-1,1,"fMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__utilLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnPlotBrowser */
static void G__setup_memvarTSnPlotBrowser(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowser));
   { TSnPlotBrowser *p; p=(TSnPlotBrowser*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__utilLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kLogx=%lldLL",(long long)TSnPlotBrowser::kLogx).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kLogy=%lldLL",(long long)TSnPlotBrowser::kLogy).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kLogz=%lldLL",(long long)TSnPlotBrowser::kLogz).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kGridx=%lldLL",(long long)TSnPlotBrowser::kGridx).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kGridy=%lldLL",(long long)TSnPlotBrowser::kGridy).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kCrosshair=%lldLL",(long long)TSnPlotBrowser::kCrosshair).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kFixedAspectRatio=%lldLL",(long long)TSnPlotBrowser::kFixedAspectRatio).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kTickx=%lldLL",(long long)TSnPlotBrowser::kTickx).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kTicky=%lldLL",(long long)TSnPlotBrowser::kTicky).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kAutoOpt=%lldLL",(long long)TSnPlotBrowser::kAutoOpt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("kDefaults=%lldLL",(long long)TSnPlotBrowser::kDefaults).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("k1DDefaults=%lldLL",(long long)TSnPlotBrowser::k1DDefaults).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),-1,-2,1,G__FastAllocString(4096).Format("k2DDefaults=%lldLL",(long long)TSnPlotBrowser::k2DDefaults).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__utilLN_TCanvas),-1,-1,4,"fCanv=",0,"! canvas plots are drawn to");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__utilLN_TGMainFrame),-1,-1,4,"fBtnWnd=",0,"! button bar window");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__utilLN_TGVerticalFrame),-1,-1,4,"fBtnFrame=",0,"! button bar frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__utilLN_TGCanvas),-1,-1,4,"fBtnBar=",0,"! button bar canvas");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__utilLN_TGLayoutHints),-1,-1,4,"fWndHints=",0,"button window layout hints");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__utilLN_TGLayoutHints),-1,-1,4,"fBtnHints=",0,"button layout hints");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__utilLN_TString),-1,-1,4,"fPBName=",0,"name of this plot browser (displayed as title of button window)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fBtnWidth=",0,"button window width (default: 180)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fBtnHeight=",0,"button window height (default: 600)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__utilLN_THashList),-1,-1,4,"fPlotSets=",0,"collection of sets of plots");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__utilLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnMath */
static void G__setup_memvarTSnMath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__utilLN_TSnMath));
   { TSnMath *p; p=(TSnMath*)0x1000; if (p) { }
   G__memvar_setup((void*)(&TSnMath::kSecPerDay),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"kSecPerDay=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__utilLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnSpectral */
static void G__setup_memvarTSnSpectral(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__utilLN_TSnSpectral));
   { TSnSpectral *p; p=(TSnSpectral*)0x1000; if (p) { }
   G__memvar_setup((void*)(&TSnSpectral::kTwoPi),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"kTwoPi=",0,(char*)NULL);
   G__memvar_setup((void*)(&TSnSpectral::kEpsilon),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"kEpsilon=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,1,G__FastAllocString(4096).Format("kMACC=%lluULL",(unsigned long long)TSnSpectral::kMACC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnSpectralcLcLEWinType_t),-1,-2,1,G__FastAllocString(4096).Format("kSquare=%lldLL",(long long)TSnSpectral::kSquare).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnSpectralcLcLEWinType_t),-1,-2,1,G__FastAllocString(4096).Format("kWelch=%lldLL",(long long)TSnSpectral::kWelch).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__utilLN_TSnSpectralcLcLEWinType_t),-1,-2,1,G__FastAllocString(4096).Format("kBartlett=%lldLL",(long long)TSnSpectral::kBartlett).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__utilLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__util() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSnAxisDetails(void) {
   /* TSnAxisDetails */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetails));
   G__memfunc_setup("TSnAxisDetails",1392,G__G__util_190_0_1, 105, G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetails), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnAxisDetails",1392,G__G__util_190_0_2, 105, G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetails), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAxis",670,G__G__util_190_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - name i - 'Int_t' 10 - nbins "
"d - 'Axis_t' 10 - axMin d - 'Axis_t' 10 - axMax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAxis",693,G__G__util_190_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"C - 'Char_t' 10 - name i - 'Int_t' 1 - nbins "
"d - 'Axis_t' 1 - axMin d - 'Axis_t' 1 - axMax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateAxis",1016,G__G__util_190_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - name i - 'Int_t' 10 - nbins "
"d - 'Axis_t' 10 - axMin d - 'Axis_t' 10 - axMax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AxisExists",1045,G__G__util_190_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEmpty",715,G__G__util_190_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveAxis",1027,G__G__util_190_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ls",223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__util_190_0_11, 85, G__get_linked_tagnum(&G__G__utilLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnAxisDetails::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__util_190_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAxisDetails::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__util_190_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnAxisDetails::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__util_190_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnAxisDetails::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__utilLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__util_190_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__util_190_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAxisDetails::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__util_190_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnAxisDetails::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__util_190_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAxisDetails::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__util_190_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnAxisDetails::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSnAxisDetails", 1518, G__G__util_190_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnAxisDetailscLcLTAxDet(void) {
   /* TSnAxisDetails::TAxDet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetailscLcLTAxDet));
   G__memfunc_setup("TAxDet",554,G__G__util_191_0_1, 105, G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetailscLcLTAxDet), -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - name i - 'Int_t' 10 - nb "
"d - 'Axis_t' 10 - mn d - 'Axis_t' 10 - mx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__util_191_0_3, 85, G__get_linked_tagnum(&G__G__utilLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnAxisDetails::TAxDet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__util_191_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAxisDetails::TAxDet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__util_191_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnAxisDetails::TAxDet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__util_191_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnAxisDetails::TAxDet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__utilLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__util_191_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__util_191_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAxisDetails::TAxDet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__util_191_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnAxisDetails::TAxDet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__util_191_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnAxisDetails::TAxDet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__util_191_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnAxisDetails::TAxDet::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAxDet", 554, G__G__util_191_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetailscLcLTAxDet), -1, 0, 1, 1, 1, 0, "u 'TSnAxisDetails::TAxDet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAxDet", 680, G__G__util_191_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__util_191_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__utilLN_TSnAxisDetailscLcLTAxDet), -1, 1, 1, 1, 1, 0, "u 'TSnAxisDetails::TAxDet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnPlotBrowser(void) {
   /* TSnPlotBrowser */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowser));
   G__memfunc_setup("GetListOfSignals",1602,G__G__util_277_0_1, 85, G__get_linked_tagnum(&G__G__utilLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__G__util_277_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__G__util_277_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LowPriority",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EmitVA",550,G__G__util_277_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__G__util_277_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangedBy",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Message",709,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddButton",901,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TSnPlotBrowser::TArPlotSet' - 0 - set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeButtonBar",1295,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnPlotBrowser",1432,G__G__util_277_0_28, 105, G__get_linked_tagnum(&G__G__utilLN_TSnPlotBrowser), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"Plot Browser\"' name h - 'UInt_t' 10 '180' wid "
"h - 'UInt_t' 10 '600' hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvas",892,G__G__util_277_0_29, 85, G__get_linked_tagnum(&G__G__utilLN_TCanvas), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvas",904,G__G__util_277_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - canv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddNewPlotSet",1278,G__G__util_277_0_31, 121, -1, -1, 0, 7, 1, 1, 0, 
"C - 'Char_t' 10 - setName u 'TObjArray' - 11 - plots "
"u 'TObjArray' - 11 - drawOpts u 'TArrayI' - 11 - pads "
"u 'TArrayI' - 11 - padOpts h - 'UInt_t' 0 '0' cols "
"h - 'UInt_t' 0 '0' rows", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddNewPlotSet",1278,G__G__util_277_0_32, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - setName U 'TObject' - 0 - plot "
"C - 'Char_t' 10 '0' drawOpt i - 'Int_t' 10 'kAutoOpt' padOpt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPlotToSet",1175,G__G__util_277_0_33, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 - setName U 'TObject' - 0 - plot "
"C - 'Char_t' 10 '0' drawOpt i - 'Int_t' 10 '0' pad "
"i - 'Int_t' 10 'kAutoOpt' padOpt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DivideCanvForSet",1584,G__G__util_277_0_34, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - setName h - 'UInt_t' 10 - cols "
"h - 'UInt_t' 10 - rows", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPlotInSet",1283,G__G__util_277_0_35, 85, G__get_linked_tagnum(&G__G__utilLN_TObject), -1, 0, 2, 1, 1, 8, 
"C - 'Char_t' 10 - setName C - 'Char_t' 10 - plotName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawPlots",928,G__G__util_277_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - setName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawButtonBar",1311,G__G__util_277_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcCanvDivs",1169,G__G__util_277_0_38, 121, -1, -1, 0, 5, 3, 1, 0, 
"h - 'UInt_t' 1 - cols h - 'UInt_t' 1 - rows "
"h - 'UInt_t' 10 - nplots h - 'UInt_t' 10 '0' xdivs "
"h - 'UInt_t' 10 '0' ydivs", (char*)NULL, (void*) G__func2void( (void (*)(UInt_t&, UInt_t&, const UInt_t, const UInt_t, const UInt_t))(&TSnPlotBrowser::CalcCanvDivs) ), 0);
   G__memfunc_setup("Class",502,G__G__util_277_0_39, 85, G__get_linked_tagnum(&G__G__utilLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnPlotBrowser::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__util_277_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnPlotBrowser::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__util_277_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnPlotBrowser::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__util_277_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnPlotBrowser::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__utilLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__util_277_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__util_277_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnPlotBrowser::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__util_277_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnPlotBrowser::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__util_277_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnPlotBrowser::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__util_277_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnPlotBrowser::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSnPlotBrowser", 1558, G__G__util_277_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnMath(void) {
   /* TSnMath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__utilLN_TSnMath));
   G__memfunc_setup("StepFromPeak",1201,G__G__util_294_0_1, 121, -1, -1, 0, 4, 3, 1, 0, 
"u 'TH1' - 11 - h f - 'Float_t' 10 - peakFrc "
"i - 'Int_t' 1 - lo i - 'Int_t' 1 - hi", (char*)NULL, (void*) G__func2void( (void (*)(const TH1&, const Float_t, Int_t&, Int_t&))(&TSnMath::StepFromPeak) ), 0);
   G__memfunc_setup("FindMeanRmsSteppingFromPeak",2707,G__G__util_294_0_2, 121, -1, -1, 0, 5, 3, 1, 0, 
"u 'TH1' - 11 - h f - 'Float_t' 10 - peakFrc "
"d - 'Double_t' 1 - mean d - 'Double_t' 1 - rms "
"d - 'Double_t' 1 - n", (char*)NULL, (void*) G__func2void( (void (*)(const TH1&, const Float_t, Double_t&, Double_t&, Double_t&))(&TSnMath::FindMeanRmsSteppingFromPeak) ), 0);
   G__memfunc_setup("FindGausMeanRmsSteppingFromPeak",3107,G__G__util_294_0_3, 121, -1, -1, 0, 5, 3, 1, 0, 
"u 'TH1' - 1 - h f - 'Float_t' 10 - peakFrc "
"d - 'Double_t' 1 - mean d - 'Double_t' 1 - rms "
"d - 'Double_t' 1 - n", (char*)NULL, (void*) G__func2void( (void (*)(TH1&, const Float_t, Double_t&, Double_t&, Double_t&))(&TSnMath::FindGausMeanRmsSteppingFromPeak) ), 0);
   G__memfunc_setup("GetNiceDateAxisFor",1753,G__G__util_294_0_4, 121, -1, -1, 0, 5, 3, 1, 0, 
"h - 'UInt_t' 10 - startTime h - 'UInt_t' 10 - finishTime "
"i - 'Int_t' 1 - nbins d - 'Double_t' 1 - axmin "
"d - 'Double_t' 1 - axmax", (char*)NULL, (void*) G__func2void( (void (*)(const UInt_t, const UInt_t, Int_t&, Double_t&, Double_t&))(&TSnMath::GetNiceDateAxisFor) ), 0);
   G__memfunc_setup("TSnMath",671,G__G__util_294_0_5, 105, G__get_linked_tagnum(&G__G__utilLN_TSnMath), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__util_294_0_6, 85, G__get_linked_tagnum(&G__G__utilLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnMath::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__util_294_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnMath::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__util_294_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnMath::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__util_294_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnMath::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__util_294_0_10, 85, G__get_linked_tagnum(&G__G__utilLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__util_294_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__util_294_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__util_294_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__util_294_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnMath::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__util_294_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnMath::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__util_294_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnMath::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__util_294_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnMath::DeclFileLine) ), 0);
   G__memfunc_setup("GetAveVarFast<Float_t>",2102,G__G__util_294_0_18, 121, -1, -1, 0, 4, 3, 1, 0, 
"F - - 50 - data h - 'UInt_t' 10 - n "
"f - - 1 - ave f - - 1 - var", (char*)NULL, (void*) G__func2void( (void (*)(const float *const, const UInt_t, float&, float&))(&TSnMath::GetAveVarFast<Float_t>) ), 0);
   G__memfunc_setup("GetAveVarFast<Double_t>",2203,G__G__util_294_0_19, 121, -1, -1, 0, 4, 3, 1, 0, 
"D - - 50 - data h - 'UInt_t' 10 - n "
"d - - 1 - ave d - - 1 - var", (char*)NULL, (void*) G__func2void( (void (*)(const double *const, const UInt_t, double&, double&))(&TSnMath::GetAveVarFast<Double_t>) ), 0);
   G__memfunc_setup("GetAveRMSFast<Float_t>",2047,G__G__util_294_0_20, 121, -1, -1, 0, 4, 3, 1, 0, 
"F - - 50 - data h - 'UInt_t' 10 - n "
"f - - 1 - ave f - - 1 - rms", (char*)NULL, (void*) G__func2void( (void (*)(const float *const, const UInt_t, float&, float&))(&TSnMath::GetAveRMSFast<Float_t>) ), 0);
   G__memfunc_setup("GetAveRMSFast<Double_t>",2148,G__G__util_294_0_21, 121, -1, -1, 0, 4, 3, 1, 0, 
"D - - 50 - data h - 'UInt_t' 10 - n "
"d - - 1 - ave d - - 1 - rms", (char*)NULL, (void*) G__func2void( (void (*)(const double *const, const UInt_t, double&, double&))(&TSnMath::GetAveRMSFast<Double_t>) ), 0);
   G__memfunc_setup("GetAveVarTwoPass<Float_t>",2425,G__G__util_294_0_22, 121, -1, -1, 0, 4, 3, 1, 0, 
"F - - 50 - data h - 'UInt_t' 10 - n "
"f - - 1 - ave f - - 1 - var", (char*)NULL, (void*) G__func2void( (void (*)(const float *const, const UInt_t, float&, float&))(&TSnMath::GetAveVarTwoPass<Float_t>) ), 0);
   G__memfunc_setup("GetAveVarTwoPass<Double_t>",2526,G__G__util_294_0_23, 121, -1, -1, 0, 4, 3, 1, 0, 
"D - - 50 - data h - 'UInt_t' 10 - n "
"d - - 1 - ave d - - 1 - var", (char*)NULL, (void*) G__func2void( (void (*)(const double *const, const UInt_t, double&, double&))(&TSnMath::GetAveVarTwoPass<Double_t>) ), 0);
   G__memfunc_setup("GetAveRMSTwoPass<Float_t>",2370,G__G__util_294_0_24, 121, -1, -1, 0, 4, 3, 1, 0, 
"F - - 50 - data h - 'UInt_t' 10 - n "
"f - - 1 - ave f - - 1 - rms", (char*)NULL, (void*) G__func2void( (void (*)(const float *const, const UInt_t, float&, float&))(&TSnMath::GetAveRMSTwoPass<Float_t>) ), 0);
   G__memfunc_setup("GetAveRMSTwoPass<Double_t>",2471,G__G__util_294_0_25, 121, -1, -1, 0, 4, 3, 1, 0, 
"D - - 50 - data h - 'UInt_t' 10 - n "
"d - - 1 - ave d - - 1 - rms", (char*)NULL, (void*) G__func2void( (void (*)(const double *const, const UInt_t, double&, double&))(&TSnMath::GetAveRMSTwoPass<Double_t>) ), 0);
   G__memfunc_setup("GetWeightedAveVarFast<Float_t>",2919,G__G__util_294_0_26, 121, -1, -1, 0, 6, 3, 1, 0, 
"F - - 50 - data F - - 50 - weights "
"h - 'UInt_t' 10 - n f - - 1 - ave "
"f - - 1 - var d - 'Double_t' 10 '1e-20' epsilon", (char*)NULL, (void*) G__func2void( (void (*)(const float *const, const float *const, const UInt_t, float&, float&, const Double_t))(&TSnMath::GetWeightedAveVarFast<Float_t>) ), 0);
   G__memfunc_setup("GetWeightedAveVarFast<Double_t>",3020,G__G__util_294_0_27, 121, -1, -1, 0, 6, 3, 1, 0, 
"D - - 50 - data D - - 50 - weights "
"h - 'UInt_t' 10 - n d - - 1 - ave "
"d - - 1 - var d - 'Double_t' 10 '1e-20' epsilon", (char*)NULL, (void*) G__func2void( (void (*)(const double *const, const double *const, const UInt_t, double&, double&, const Double_t))(&TSnMath::GetWeightedAveVarFast<Double_t>) ), 0);
   G__memfunc_setup("GetWeightedAveRMSFast<Float_t>",2864,G__G__util_294_0_28, 121, -1, -1, 0, 6, 3, 1, 0, 
"F - - 50 - data F - - 50 - weights "
"h - 'UInt_t' 10 - n f - - 1 - ave "
"f - - 1 - rms d - 'Double_t' 10 '1e-20' epsilon", (char*)NULL, (void*) G__func2void( (void (*)(const float *const, const float *const, const UInt_t, float&, float&, const Double_t))(&TSnMath::GetWeightedAveRMSFast<Float_t>) ), 0);
   G__memfunc_setup("GetWeightedAveRMSFast<Double_t>",2965,G__G__util_294_0_29, 121, -1, -1, 0, 6, 3, 1, 0, 
"D - - 50 - data D - - 50 - weights "
"h - 'UInt_t' 10 - n d - - 1 - ave "
"d - - 1 - rms d - 'Double_t' 10 '1e-20' epsilon", (char*)NULL, (void*) G__func2void( (void (*)(const double *const, const double *const, const UInt_t, double&, double&, const Double_t))(&TSnMath::GetWeightedAveRMSFast<Double_t>) ), 0);
   G__memfunc_setup("GetWeightedAveVarTwoPass<Float_t>",3242,G__G__util_294_0_30, 121, -1, -1, 0, 6, 3, 1, 0, 
"F - - 50 - data F - - 50 - weights "
"h - 'UInt_t' 10 - n f - - 1 - ave "
"f - - 1 - var d - 'Double_t' 10 '1e-20' epsilon", (char*)NULL, (void*) G__func2void( (void (*)(const float *const, const float *const, const UInt_t, float&, float&, const Double_t))(&TSnMath::GetWeightedAveVarTwoPass<Float_t>) ), 0);
   G__memfunc_setup("GetWeightedAveVarTwoPass<Double_t>",3343,G__G__util_294_0_31, 121, -1, -1, 0, 6, 3, 1, 0, 
"D - - 50 - data D - - 50 - weights "
"h - 'UInt_t' 10 - n d - - 1 - ave "
"d - - 1 - var d - 'Double_t' 10 '1e-20' epsilon", (char*)NULL, (void*) G__func2void( (void (*)(const double *const, const double *const, const UInt_t, double&, double&, const Double_t))(&TSnMath::GetWeightedAveVarTwoPass<Double_t>) ), 0);
   G__memfunc_setup("GetWeightedAveRMSTwoPass<Float_t>",3187,G__G__util_294_0_32, 121, -1, -1, 0, 6, 3, 1, 0, 
"F - - 50 - data F - - 50 - weights "
"h - 'UInt_t' 10 - n f - - 1 - ave "
"f - - 1 - rms d - 'Double_t' 10 '1e-20' epsilon", (char*)NULL, (void*) G__func2void( (void (*)(const float *const, const float *const, const UInt_t, float&, float&, const Double_t))(&TSnMath::GetWeightedAveRMSTwoPass<Float_t>) ), 0);
   G__memfunc_setup("GetWeightedAveRMSTwoPass<Double_t>",3288,G__G__util_294_0_33, 121, -1, -1, 0, 6, 3, 1, 0, 
"D - - 50 - data D - - 50 - weights "
"h - 'UInt_t' 10 - n d - - 1 - ave "
"d - - 1 - rms d - 'Double_t' 10 '1e-20' epsilon", (char*)NULL, (void*) G__func2void( (void (*)(const double *const, const double *const, const UInt_t, double&, double&, const Double_t))(&TSnMath::GetWeightedAveRMSTwoPass<Double_t>) ), 0);
   G__memfunc_setup("GetRange<Float_t>",1616,G__G__util_294_0_34, 102, -1, -1, 0, 4, 3, 1, 0, 
"F - - 50 - x h - 'UInt_t' 10 - n "
"f - - 1 - xmin f - - 1 - xmax", (char*)NULL, (void*) G__func2void( (float (*)(const float *const, const UInt_t, float&, float&))(&TSnMath::GetRange<Float_t>) ), 0);
   G__memfunc_setup("GetRange<Double_t>",1717,G__G__util_294_0_35, 100, -1, -1, 0, 4, 3, 1, 0, 
"D - - 50 - x h - 'UInt_t' 10 - n "
"d - - 1 - xmin d - - 1 - xmax", (char*)NULL, (void*) G__func2void( (double (*)(const double *const, const UInt_t, double&, double&))(&TSnMath::GetRange<Double_t>) ), 0);
   G__memfunc_setup("GetAngleDiff<Float_t>",1987,G__G__util_294_0_36, 102, -1, -1, 0, 2, 3, 1, 0, 
"f - - 10 - a1 f - - 10 - a2", (char*)NULL, (void*) G__func2void( (float (*)(const float, const float))(&TSnMath::GetAngleDiff<Float_t>) ), 0);
   G__memfunc_setup("GetAngleDiff<Double_t>",2088,G__G__util_294_0_37, 100, -1, -1, 0, 2, 3, 1, 0, 
"d - - 10 - a1 d - - 10 - a2", (char*)NULL, (void*) G__func2void( (double (*)(const double, const double))(&TSnMath::GetAngleDiff<Double_t>) ), 0);
   G__memfunc_setup("GetAngleDiffDeg<Float_t>",2259,G__G__util_294_0_38, 102, -1, -1, 0, 2, 3, 1, 0, 
"f - - 10 - a1 f - - 10 - a2", (char*)NULL, (void*) G__func2void( (float (*)(const float, const float))(&TSnMath::GetAngleDiffDeg<Float_t>) ), 0);
   G__memfunc_setup("GetAngleDiffDeg<Double_t>",2360,G__G__util_294_0_39, 100, -1, -1, 0, 2, 3, 1, 0, 
"d - - 10 - a1 d - - 10 - a2", (char*)NULL, (void*) G__func2void( (double (*)(const double, const double))(&TSnMath::GetAngleDiffDeg<Double_t>) ), 0);
   G__memfunc_setup("SearchOneToOneMapping<Float_t>",2924,G__G__util_294_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 5, 3, 1, 0, 
"n - 'Long64_t' 10 - n F - - 50 - from "
"F - - 50 - to f - - 10 - fromVal "
"f - - 1 - toVal", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const Long64_t, const float *const, const float *const, const float, float&))(&TSnMath::SearchOneToOneMapping<Float_t>) ), 0);
   G__memfunc_setup("SearchOneToOneMapping<Double_t>",3025,G__G__util_294_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 5, 3, 1, 0, 
"n - 'Long64_t' 10 - n D - - 50 - from "
"D - - 50 - to d - - 10 - fromVal "
"d - - 1 - toVal", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const Long64_t, const double *const, const double *const, const double, double&))(&TSnMath::SearchOneToOneMapping<Double_t>) ), 0);
   G__memfunc_setup("GetBitsAsString<Char_t>",2216,G__G__util_294_0_42, 117, G__get_linked_tagnum(&G__G__utilLN_TString), -1, 0, 1, 3, 1, 0, "c - - 10 - x", (char*)NULL, (void*) G__func2void( (TString (*)(const char))(&TSnMath::GetBitsAsString<Char_t>) ), 0);
   G__memfunc_setup("GetBitsAsString<UChar_t>",2301,G__G__util_294_0_43, 117, G__get_linked_tagnum(&G__G__utilLN_TString), -1, 0, 1, 3, 1, 0, "b - - 10 - x", (char*)NULL, (void*) G__func2void( (TString (*)(const unsigned char))(&TSnMath::GetBitsAsString<UChar_t>) ), 0);
   G__memfunc_setup("GetBitsAsString<Short_t>",2362,G__G__util_294_0_44, 117, G__get_linked_tagnum(&G__G__utilLN_TString), -1, 0, 1, 3, 1, 0, "s - - 10 - x", (char*)NULL, (void*) G__func2void( (TString (*)(const short))(&TSnMath::GetBitsAsString<Short_t>) ), 0);
   G__memfunc_setup("GetBitsAsString<UShort_t>",2447,G__G__util_294_0_45, 117, G__get_linked_tagnum(&G__G__utilLN_TString), -1, 0, 1, 3, 1, 0, "r - - 10 - x", (char*)NULL, (void*) G__func2void( (TString (*)(const unsigned short))(&TSnMath::GetBitsAsString<UShort_t>) ), 0);
   G__memfunc_setup("GetBitsAsString<Int_t>",2133,G__G__util_294_0_46, 117, G__get_linked_tagnum(&G__G__utilLN_TString), -1, 0, 1, 3, 1, 0, "i - - 10 - x", (char*)NULL, (void*) G__func2void( (TString (*)(const int))(&TSnMath::GetBitsAsString<Int_t>) ), 0);
   G__memfunc_setup("GetBitsAsString<UInt_t>",2218,G__G__util_294_0_47, 117, G__get_linked_tagnum(&G__G__utilLN_TString), -1, 0, 1, 3, 1, 0, "h - - 10 - x", (char*)NULL, (void*) G__func2void( (TString (*)(const unsigned int))(&TSnMath::GetBitsAsString<UInt_t>) ), 0);
   G__memfunc_setup("GetBitsAsString<Long64_t>",2340,G__G__util_294_0_48, 117, G__get_linked_tagnum(&G__G__utilLN_TString), -1, 0, 1, 3, 1, 0, "n - - 10 - x", (char*)NULL, (void*) G__func2void( (TString (*)(const long long))(&TSnMath::GetBitsAsString<Long64_t>) ), 0);
   G__memfunc_setup("GetBitsAsString<ULong64_t>",2425,G__G__util_294_0_49, 117, G__get_linked_tagnum(&G__G__utilLN_TString), -1, 0, 1, 3, 1, 0, "m - - 10 - x", (char*)NULL, (void*) G__func2void( (TString (*)(const unsigned long long))(&TSnMath::GetBitsAsString<ULong64_t>) ), 0);
   G__memfunc_setup("PrintBits<Char_t>",1642,G__G__util_294_0_50, 121, -1, -1, 0, 2, 3, 1, 0, 
"c - - 10 - x g - 'Bool_t' 10 - endLine", (char*)NULL, (void*) G__func2void( (void (*)(const char, const Bool_t))(&TSnMath::PrintBits<Char_t>) ), 0);
   G__memfunc_setup("PrintBits<UChar_t>",1727,G__G__util_294_0_51, 121, -1, -1, 0, 2, 3, 1, 0, 
"b - - 10 - x g - 'Bool_t' 10 - endLine", (char*)NULL, (void*) G__func2void( (void (*)(const unsigned char, const Bool_t))(&TSnMath::PrintBits<UChar_t>) ), 0);
   G__memfunc_setup("PrintBits<Short_t>",1788,G__G__util_294_0_52, 121, -1, -1, 0, 2, 3, 1, 0, 
"s - - 10 - x g - 'Bool_t' 10 - endLine", (char*)NULL, (void*) G__func2void( (void (*)(const short, const Bool_t))(&TSnMath::PrintBits<Short_t>) ), 0);
   G__memfunc_setup("PrintBits<UShort_t>",1873,G__G__util_294_0_53, 121, -1, -1, 0, 2, 3, 1, 0, 
"r - - 10 - x g - 'Bool_t' 10 - endLine", (char*)NULL, (void*) G__func2void( (void (*)(const unsigned short, const Bool_t))(&TSnMath::PrintBits<UShort_t>) ), 0);
   G__memfunc_setup("PrintBits<Int_t>",1559,G__G__util_294_0_54, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 10 - x g - 'Bool_t' 10 - endLine", (char*)NULL, (void*) G__func2void( (void (*)(const int, const Bool_t))(&TSnMath::PrintBits<Int_t>) ), 0);
   G__memfunc_setup("PrintBits<UInt_t>",1644,G__G__util_294_0_55, 121, -1, -1, 0, 2, 3, 1, 0, 
"h - - 10 - x g - 'Bool_t' 10 - endLine", (char*)NULL, (void*) G__func2void( (void (*)(const unsigned int, const Bool_t))(&TSnMath::PrintBits<UInt_t>) ), 0);
   G__memfunc_setup("PrintBits<Long64_t>",1766,G__G__util_294_0_56, 121, -1, -1, 0, 2, 3, 1, 0, 
"n - - 10 - x g - 'Bool_t' 10 - endLine", (char*)NULL, (void*) G__func2void( (void (*)(const long long, const Bool_t))(&TSnMath::PrintBits<Long64_t>) ), 0);
   G__memfunc_setup("PrintBits<ULong64_t>",1851,G__G__util_294_0_57, 121, -1, -1, 0, 2, 3, 1, 0, 
"m - - 10 - x g - 'Bool_t' 10 - endLine", (char*)NULL, (void*) G__func2void( (void (*)(const unsigned long long, const Bool_t))(&TSnMath::PrintBits<ULong64_t>) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnMath", 671, G__G__util_294_0_58, (int) ('i'), G__get_linked_tagnum(&G__G__utilLN_TSnMath), -1, 0, 1, 1, 1, 0, "u 'TSnMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnMath", 797, G__G__util_294_0_59, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__util_294_0_60, (int) ('u'), G__get_linked_tagnum(&G__G__utilLN_TSnMath), -1, 1, 1, 1, 1, 0, "u 'TSnMath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnSpectral(void) {
   /* TSnSpectral */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__utilLN_TSnSpectral));
   G__memfunc_setup("GetRealFFTFreqBins",1694,G__G__util_309_0_1, 121, -1, -1, 0, 5, 3, 1, 0, 
"h - 'UInt_t' 10 - n d - 'Double_t' 10 - sampDt "
"i - 'Int_t' 1 - nFreqBins d - 'Double_t' 1 - freqMin "
"d - 'Double_t' 1 - freqMax", (char*)NULL, (void*) G__func2void( (void (*)(const UInt_t, const Double_t, Int_t&, Double_t&, Double_t&))(&TSnSpectral::GetRealFFTFreqBins) ), 0);
   G__memfunc_setup("NewGraph",796,G__G__util_309_0_2, 85, G__get_linked_tagnum(&G__G__utilLN_TGraph), -1, 0, 1, 3, 1, 0, "i - 'Int_t' 10 - i", (char*)NULL, (void*) G__func2void( (TGraph* (*)(const Int_t))(&TSnSpectral::NewGraph) ), 0);
   G__memfunc_setup("SetPoint",822,G__G__util_309_0_3, 121, -1, -1, 0, 4, 3, 1, 0, 
"U 'TGraph' - 0 - gr i - 'Int_t' 10 - i "
"d - 'Double_t' 10 - x d - 'Double_t' 10 - y", (char*)NULL, (void*) G__func2void( (void (*)(TGraph*, const Int_t, const Double_t, const Double_t))(&TSnSpectral::SetPoint) ), 0);
   G__memfunc_setup("TSnSpectral",1107,G__G__util_309_0_4, 105, G__get_linked_tagnum(&G__G__utilLN_TSnSpectral), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__util_309_0_5, 85, G__get_linked_tagnum(&G__G__utilLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnSpectral::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__util_309_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSpectral::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__util_309_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnSpectral::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__util_309_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnSpectral::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__util_309_0_9, 85, G__get_linked_tagnum(&G__G__utilLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__util_309_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__util_309_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__util_309_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__util_309_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSpectral::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__util_309_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSpectral::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__util_309_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnSpectral::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__util_309_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnSpectral::DeclFileLine) ), 0);
   G__memfunc_setup("SquareWin<Float_t>",1762,G__G__util_309_0_17, 102, -1, -1, 0, 3, 3, 1, 0, 
"i - 'Int_t' 10 - i f - - 10 - a "
"f - - 10 - b", (char*)NULL, (void*) G__func2void( (float (*)(const Int_t, const float, const float))(&TSnSpectral::SquareWin<Float_t>) ), 0);
   G__memfunc_setup("SquareWin<Double_t>",1863,G__G__util_309_0_18, 100, -1, -1, 0, 3, 3, 1, 0, 
"i - 'Int_t' 10 - i d - - 10 - a "
"d - - 10 - b", (char*)NULL, (void*) G__func2void( (double (*)(const Int_t, const double, const double))(&TSnSpectral::SquareWin<Double_t>) ), 0);
   G__memfunc_setup("WelchWin<Float_t>",1636,G__G__util_309_0_19, 102, -1, -1, 0, 3, 3, 1, 0, 
"i - 'Int_t' 10 - i f - - 10 - a "
"f - - 10 - b", (char*)NULL, (void*) G__func2void( (float (*)(const Int_t, const float, const float))(&TSnSpectral::WelchWin<Float_t>) ), 0);
   G__memfunc_setup("WelchWin<Double_t>",1737,G__G__util_309_0_20, 100, -1, -1, 0, 3, 3, 1, 0, 
"i - 'Int_t' 10 - i d - - 10 - a "
"d - - 10 - b", (char*)NULL, (void*) G__func2void( (double (*)(const Int_t, const double, const double))(&TSnSpectral::WelchWin<Double_t>) ), 0);
   G__memfunc_setup("BartlettWin<Float_t>",1971,G__G__util_309_0_21, 102, -1, -1, 0, 3, 3, 1, 0, 
"i - 'Int_t' 10 - i f - - 10 - a "
"f - - 10 - b", (char*)NULL, (void*) G__func2void( (float (*)(const Int_t, const float, const float))(&TSnSpectral::BartlettWin<Float_t>) ), 0);
   G__memfunc_setup("BartlettWin<Double_t>",2072,G__G__util_309_0_22, 100, -1, -1, 0, 3, 3, 1, 0, 
"i - 'Int_t' 10 - i d - - 10 - a "
"d - - 10 - b", (char*)NULL, (void*) G__func2void( (double (*)(const Int_t, const double, const double))(&TSnSpectral::BartlettWin<Double_t>) ), 0);
   G__memfunc_setup("DiscreteCpxFFT<Float_t>",2177,G__G__util_309_0_23, 121, -1, -1, 0, 3, 3, 1, 0, 
"F - - 40 - data h - 'UInt_t' 10 - nn "
"g - 'Bool_t' 10 'kFALSE' inverse", (char*)NULL, (void*) G__func2void( (void (*)(float *const, const UInt_t, const Bool_t))(&TSnSpectral::DiscreteCpxFFT<Float_t>) ), 0);
   G__memfunc_setup("DiscreteCpxFFT<Double_t>",2278,G__G__util_309_0_24, 121, -1, -1, 0, 3, 3, 1, 0, 
"D - - 40 - data h - 'UInt_t' 10 - nn "
"g - 'Bool_t' 10 'kFALSE' inverse", (char*)NULL, (void*) G__func2void( (void (*)(double *const, const UInt_t, const Bool_t))(&TSnSpectral::DiscreteCpxFFT<Double_t>) ), 0);
   G__memfunc_setup("RealFFT<Float_t>",1447,G__G__util_309_0_25, 121, -1, -1, 0, 3, 3, 1, 0, 
"F - - 40 - data h - 'UInt_t' 10 - n "
"g - 'Bool_t' 10 'kFALSE' inverse", (char*)NULL, (void*) G__func2void( (void (*)(float *const, const UInt_t, const Bool_t))(&TSnSpectral::RealFFT<Float_t>) ), 0);
   G__memfunc_setup("RealFFT<Double_t>",1548,G__G__util_309_0_26, 121, -1, -1, 0, 3, 3, 1, 0, 
"D - - 40 - data h - 'UInt_t' 10 - n "
"g - 'Bool_t' 10 'kFALSE' inverse", (char*)NULL, (void*) G__func2void( (void (*)(double *const, const UInt_t, const Bool_t))(&TSnSpectral::RealFFT<Double_t>) ), 0);
   G__memfunc_setup("RealFFTSimul<Float_t>",1969,G__G__util_309_0_27, 121, -1, -1, 0, 5, 3, 1, 0, 
"F - - 10 - data1 F - - 10 - data2 "
"F - - 0 - fft1 F - - 0 - fft2 "
"h - 'UInt_t' 10 - n", (char*)NULL, (void*) G__func2void( (void (*)(const float*, const float*, float*, float*, const UInt_t))(&TSnSpectral::RealFFTSimul<Float_t>) ), 0);
   G__memfunc_setup("RealFFTSimul<Double_t>",2070,G__G__util_309_0_28, 121, -1, -1, 0, 5, 3, 1, 0, 
"D - - 10 - data1 D - - 10 - data2 "
"D - - 0 - fft1 D - - 0 - fft2 "
"h - 'UInt_t' 10 - n", (char*)NULL, (void*) G__func2void( (void (*)(const double*, const double*, double*, double*, const UInt_t))(&TSnSpectral::RealFFTSimul<Double_t>) ), 0);
   G__memfunc_setup("Correlate<Float_t>",1764,G__G__util_309_0_29, 121, -1, -1, 0, 4, 3, 1, 0, 
"F - - 10 - data1 F - - 10 - data2 "
"h - 'UInt_t' 10 - n F - - 0 - ans", (char*)NULL, (void*) G__func2void( (void (*)(const float*, const float*, const UInt_t, float*))(&TSnSpectral::Correlate<Float_t>) ), 0);
   G__memfunc_setup("Correlate<Double_t>",1865,G__G__util_309_0_30, 121, -1, -1, 0, 4, 3, 1, 0, 
"D - - 10 - data1 D - - 10 - data2 "
"h - 'UInt_t' 10 - n D - - 0 - ans", (char*)NULL, (void*) G__func2void( (void (*)(const double*, const double*, const UInt_t, double*))(&TSnSpectral::Correlate<Double_t>) ), 0);
   G__memfunc_setup("NewCorrelateGraph<Float_t>",2560,G__G__util_309_0_31, 85, G__get_linked_tagnum(&G__G__utilLN_TGraph), -1, 0, 4, 3, 1, 0, 
"F - - 10 - data1 F - - 10 - data2 "
"h - 'UInt_t' 10 - n g - 'Bool_t' 10 - normalize", (char*)NULL, (void*) G__func2void( (TGraph* (*)(const float*, const float*, const UInt_t, const Bool_t))(&TSnSpectral::NewCorrelateGraph<Float_t>) ), 0);
   G__memfunc_setup("NewCorrelateGraph<Double_t>",2661,G__G__util_309_0_32, 85, G__get_linked_tagnum(&G__G__utilLN_TGraph), -1, 0, 4, 3, 1, 0, 
"D - - 10 - data1 D - - 10 - data2 "
"h - 'UInt_t' 10 - n g - 'Bool_t' 10 - normalize", (char*)NULL, (void*) G__func2void( (TGraph* (*)(const double*, const double*, const UInt_t, const Bool_t))(&TSnSpectral::NewCorrelateGraph<Double_t>) ), 0);
   G__memfunc_setup("Spectrum<TBranch,Float_t>",2404,G__G__util_309_0_33, 121, -1, -1, 0, 7, 3, 1, 0, 
"U 'TBranch' - 0 - br F - - 40 - p "
"i - 'Int_t' 10 - m i - 'Int_t' 10 - k "
"g - 'Bool_t' 10 - overlap i - 'Int_t' 10 - firstEntry "
"i 'TSnSpectral::EWinType_t' - 10 - window", (char*)NULL, (void*) G__func2void( (void (*)(TBranch*, float *const, const Int_t, const Int_t, const Bool_t, const Int_t, const TSnSpectral::EWinType_t))(&TSnSpectral::Spectrum<TBranch,Float_t>) ), 0);
   G__memfunc_setup("Spectrum<TBranch,Double_t>",2505,G__G__util_309_0_34, 121, -1, -1, 0, 7, 3, 1, 0, 
"U 'TBranch' - 0 - br D - - 40 - p "
"i - 'Int_t' 10 - m i - 'Int_t' 10 - k "
"g - 'Bool_t' 10 - overlap i - 'Int_t' 10 - firstEntry "
"i 'TSnSpectral::EWinType_t' - 10 - window", (char*)NULL, (void*) G__func2void( (void (*)(TBranch*, double *const, const Int_t, const Int_t, const Bool_t, const Int_t, const TSnSpectral::EWinType_t))(&TSnSpectral::Spectrum<TBranch,Double_t>) ), 0);
   G__memfunc_setup("Spectrum<TH1F,Float_t>",2005,G__G__util_309_0_35, 121, -1, -1, 0, 7, 3, 1, 0, 
"U 'TH1F' - 0 - br F - - 40 - p "
"i - 'Int_t' 10 - m i - 'Int_t' 10 - k "
"g - 'Bool_t' 10 - overlap i - 'Int_t' 10 - firstEntry "
"i 'TSnSpectral::EWinType_t' - 10 - window", (char*)NULL, (void*) G__func2void( (void (*)(TH1F*, float *const, const Int_t, const Int_t, const Bool_t, const Int_t, const TSnSpectral::EWinType_t))(&TSnSpectral::Spectrum<TH1F,Float_t>) ), 0);
   G__memfunc_setup("Spectrum<TH1D,Double_t>",2104,G__G__util_309_0_36, 121, -1, -1, 0, 7, 3, 1, 0, 
"U 'TH1D' - 0 - br D - - 40 - p "
"i - 'Int_t' 10 - m i - 'Int_t' 10 - k "
"g - 'Bool_t' 10 - overlap i - 'Int_t' 10 - firstEntry "
"i 'TSnSpectral::EWinType_t' - 10 - window", (char*)NULL, (void*) G__func2void( (void (*)(TH1D*, double *const, const Int_t, const Int_t, const Bool_t, const Int_t, const TSnSpectral::EWinType_t))(&TSnSpectral::Spectrum<TH1D,Double_t>) ), 0);
   G__memfunc_setup("SlowLomb<Float_t>",1650,G__G__util_309_0_37, 121, -1, -1, 0, 11, 3, 1, 0, 
"F - - 50 - x F - - 50 - y "
"h - 'UInt_t' 10 - n f - 'Float_t' 10 - ofac "
"f - 'Float_t' 10 - hifac F - - 40 - px "
"F - - 40 - py h - 'UInt_t' 10 - np "
"h - 'UInt_t' 1 - nout h - 'UInt_t' 1 - jmax "
"f - - 1 - prob", (char*)NULL, (void*) G__func2void( (void (*)(const float *const, const float *const, const UInt_t, const Float_t, const Float_t, float *const, float *const, const UInt_t, UInt_t&, UInt_t&, float&))(&TSnSpectral::SlowLomb<Float_t>) ), 0);
   G__memfunc_setup("SlowLomb<Double_t>",1751,G__G__util_309_0_38, 121, -1, -1, 0, 11, 3, 1, 0, 
"D - - 50 - x D - - 50 - y "
"h - 'UInt_t' 10 - n f - 'Float_t' 10 - ofac "
"f - 'Float_t' 10 - hifac D - - 40 - px "
"D - - 40 - py h - 'UInt_t' 10 - np "
"h - 'UInt_t' 1 - nout h - 'UInt_t' 1 - jmax "
"d - - 1 - prob", (char*)NULL, (void*) G__func2void( (void (*)(const double *const, const double *const, const UInt_t, const Float_t, const Float_t, double *const, double *const, const UInt_t, UInt_t&, UInt_t&, double&))(&TSnSpectral::SlowLomb<Double_t>) ), 0);
   G__memfunc_setup("FastLomb<Float_t>",1627,G__G__util_309_0_39, 121, -1, -1, 0, 11, 3, 1, 0, 
"F - - 50 - x F - - 50 - y "
"h - 'UInt_t' 10 - n f - 'Float_t' 10 - ofac "
"f - 'Float_t' 10 - hifac F - - 40 - wk1 "
"F - - 40 - wk2 h - 'UInt_t' 10 - nwk "
"h - 'UInt_t' 1 - nout h - 'UInt_t' 1 - jmax "
"f - - 1 - prob", (char*)NULL, (void*) G__func2void( (void (*)(const float *const, const float *const, const UInt_t, const Float_t, const Float_t, float *const, float *const, const UInt_t, UInt_t&, UInt_t&, float&))(&TSnSpectral::FastLomb<Float_t>) ), 0);
   G__memfunc_setup("FastLomb<Double_t>",1728,G__G__util_309_0_40, 121, -1, -1, 0, 11, 3, 1, 0, 
"D - - 50 - x D - - 50 - y "
"h - 'UInt_t' 10 - n f - 'Float_t' 10 - ofac "
"f - 'Float_t' 10 - hifac D - - 40 - wk1 "
"D - - 40 - wk2 h - 'UInt_t' 10 - nwk "
"h - 'UInt_t' 1 - nout h - 'UInt_t' 1 - jmax "
"d - - 1 - prob", (char*)NULL, (void*) G__func2void( (void (*)(const double *const, const double *const, const UInt_t, const Float_t, const Float_t, double *const, double *const, const UInt_t, UInt_t&, UInt_t&, double&))(&TSnSpectral::FastLomb<Double_t>) ), 0);
   G__memfunc_setup("HilbertCpxAnalyticSignal<Float_t>",3275,G__G__util_309_0_41, 121, -1, -1, 0, 2, 3, 1, 0, 
"F - - 40 - x h - 'UInt_t' 10 - n", (char*)NULL, (void*) G__func2void( (void (*)(float *const, const UInt_t))(&TSnSpectral::HilbertCpxAnalyticSignal<Float_t>) ), 0);
   G__memfunc_setup("HilbertCpxAnalyticSignal<Double_t>",3376,G__G__util_309_0_42, 121, -1, -1, 0, 2, 3, 1, 0, 
"D - - 40 - x h - 'UInt_t' 10 - n", (char*)NULL, (void*) G__func2void( (void (*)(double *const, const UInt_t))(&TSnSpectral::HilbertCpxAnalyticSignal<Double_t>) ), 0);
   G__memfunc_setup("EnvelopeReal<Float_t>",2053,G__G__util_309_0_43, 121, -1, -1, 0, 2, 3, 1, 0, 
"F - - 40 - data h - 'UInt_t' 10 - n", (char*)NULL, (void*) G__func2void( (void (*)(float *const, const UInt_t))(&TSnSpectral::EnvelopeReal<Float_t>) ), 0);
   G__memfunc_setup("EnvelopeReal<Double_t>",2154,G__G__util_309_0_44, 121, -1, -1, 0, 2, 3, 1, 0, 
"D - - 40 - data h - 'UInt_t' 10 - n", (char*)NULL, (void*) G__func2void( (void (*)(double *const, const UInt_t))(&TSnSpectral::EnvelopeReal<Double_t>) ), 0);
   G__memfunc_setup("Spread<Float_t>",1442,G__G__util_309_0_45, 121, -1, -1, 0, 5, 3, 1, 0, 
"f - - 10 - y F - - 40 - yy "
"h - 'UInt_t' 10 - n f - - 10 - x "
"h - 'UInt_t' 10 - m", (char*)NULL, (void*) G__func2void( (void (*)(const float, float *const, const UInt_t, const float, const UInt_t))(&TSnSpectral::Spread<Float_t>) ), 0);
   G__memfunc_setup("Spread<Double_t>",1543,G__G__util_309_0_46, 121, -1, -1, 0, 5, 3, 1, 0, 
"d - - 10 - y D - - 40 - yy "
"h - 'UInt_t' 10 - n d - - 10 - x "
"h - 'UInt_t' 10 - m", (char*)NULL, (void*) G__func2void( (void (*)(const double, double *const, const UInt_t, const double, const UInt_t))(&TSnSpectral::Spread<Double_t>) ), 0);
   G__memfunc_setup("NewGraphFromRealFFT<Float_t>",2647,G__G__util_309_0_47, 85, G__get_linked_tagnum(&G__G__utilLN_TGraph), -1, 0, 3, 3, 1, 0, 
"F - - 50 - rfft h - 'UInt_t' 10 - n "
"f - - 10 - sampDt", (char*)NULL, (void*) G__func2void( (TGraph* (*)(const float *const, const UInt_t, const float))(&TSnSpectral::NewGraphFromRealFFT<Float_t>) ), 0);
   G__memfunc_setup("NewGraphFromRealFFT<Double_t>",2748,G__G__util_309_0_48, 85, G__get_linked_tagnum(&G__G__utilLN_TGraph), -1, 0, 3, 3, 1, 0, 
"D - - 50 - rfft h - 'UInt_t' 10 - n "
"d - - 10 - sampDt", (char*)NULL, (void*) G__func2void( (TGraph* (*)(const double *const, const UInt_t, const double))(&TSnSpectral::NewGraphFromRealFFT<Double_t>) ), 0);
   G__memfunc_setup("PearsonSmpCorrCoef<Float_t>",2654,G__G__util_309_0_49, 102, -1, -1, 0, 3, 3, 1, 0, 
"F - - 50 - data1 F - - 50 - data2 "
"h - 'UInt_t' 10 - n", (char*)NULL, (void*) G__func2void( (float (*)(const float *const, const float *const, const UInt_t))(&TSnSpectral::PearsonSmpCorrCoef<Float_t>) ), 0);
   G__memfunc_setup("PearsonSmpCorrCoef<Double_t>",2755,G__G__util_309_0_50, 100, -1, -1, 0, 3, 3, 1, 0, 
"D - - 50 - data1 D - - 50 - data2 "
"h - 'UInt_t' 10 - n", (char*)NULL, (void*) G__func2void( (double (*)(const double *const, const double *const, const UInt_t))(&TSnSpectral::PearsonSmpCorrCoef<Double_t>) ), 0);
   G__memfunc_setup("NewScanPrsCorrCoefGraph<Float_t>",3116,G__G__util_309_0_51, 85, G__get_linked_tagnum(&G__G__utilLN_TGraph), -1, 0, 6, 3, 1, 0, 
"F - - 50 - data1 F - - 50 - data2 "
"h - 'UInt_t' 10 - n h - 'UInt_t' 10 '0' winmin "
"h - 'UInt_t' 10 '0' winmax g - 'Bool_t' 10 'kTRUE' shiftInWin", (char*)NULL, (void*) G__func2void( (TGraph* (*)(const float *const, const float *const, const UInt_t, const UInt_t, const UInt_t, const Bool_t))(&TSnSpectral::NewScanPrsCorrCoefGraph<Float_t>) ), 0);
   G__memfunc_setup("NewScanPrsCorrCoefGraph<Double_t>",3217,G__G__util_309_0_52, 85, G__get_linked_tagnum(&G__G__utilLN_TGraph), -1, 0, 6, 3, 1, 0, 
"D - - 50 - data1 D - - 50 - data2 "
"h - 'UInt_t' 10 - n h - 'UInt_t' 10 '0' winmin "
"h - 'UInt_t' 10 '0' winmax g - 'Bool_t' 10 'kTRUE' shiftInWin", (char*)NULL, (void*) G__func2void( (TGraph* (*)(const double *const, const double *const, const UInt_t, const UInt_t, const UInt_t, const Bool_t))(&TSnSpectral::NewScanPrsCorrCoefGraph<Double_t>) ), 0);
   G__memfunc_setup("NewScanPrsCorrCoefGraphUneq<Float_t>",3525,G__G__util_309_0_53, 85, G__get_linked_tagnum(&G__G__utilLN_TGraph), -1, 0, 4, 3, 1, 0, 
"F - - 50 - data1 h - 'UInt_t' 10 - n1 "
"F - - 50 - data2 h - 'UInt_t' 10 - n2", (char*)NULL, (void*) G__func2void( (TGraph* (*)(const float *const, const UInt_t, const float *const, const UInt_t))(&TSnSpectral::NewScanPrsCorrCoefGraphUneq<Float_t>) ), 0);
   G__memfunc_setup("NewScanPrsCorrCoefGraphUneq<Double_t>",3626,G__G__util_309_0_54, 85, G__get_linked_tagnum(&G__G__utilLN_TGraph), -1, 0, 4, 3, 1, 0, 
"D - - 50 - data1 h - 'UInt_t' 10 - n1 "
"D - - 50 - data2 h - 'UInt_t' 10 - n2", (char*)NULL, (void*) G__func2void( (TGraph* (*)(const double *const, const UInt_t, const double *const, const UInt_t))(&TSnSpectral::NewScanPrsCorrCoefGraphUneq<Double_t>) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnSpectral", 1107, G__G__util_309_0_55, (int) ('i'), G__get_linked_tagnum(&G__G__utilLN_TSnSpectral), -1, 0, 1, 1, 1, 0, "u 'TSnSpectral' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnSpectral", 1233, G__G__util_309_0_56, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__util_309_0_57, (int) ('u'), G__get_linked_tagnum(&G__G__utilLN_TSnSpectral), -1, 1, 1, 1, 1, 0, "u 'TSnSpectral' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__util() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__util() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__util() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__utilLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__utilLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__utilLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__G__utilLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__utilLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__utilLN_THashTable = { "THashTable" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TSnAxisDetails = { "TSnAxisDetails" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TSnAxisDetailscLcLTAxDet = { "TSnAxisDetails::TAxDet" , 115 , -1 };
G__linked_taginfo G__G__utilLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__G__utilLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__utilLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__utilLN_THashList = { "THashList" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__G__utilLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__G__utilLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__utilLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TGCanvas = { "TGCanvas" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TSnPlotBrowser = { "TSnPlotBrowser" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TSnPlotBrowsercLcLEPadOpts = { "TSnPlotBrowser::EPadOpts" , 101 , -1 };
G__linked_taginfo G__G__utilLN_TSnPlotBrowsercLcLTArPlotSet = { "TSnPlotBrowser::TArPlotSet" , 115 , -1 };
G__linked_taginfo G__G__utilLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TSnMath = { "TSnMath" , 115 , -1 };
G__linked_taginfo G__G__utilLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TSnSpectral = { "TSnSpectral" , 115 , -1 };
G__linked_taginfo G__G__utilLN_TSnSpectralcLcLEWinType_t = { "TSnSpectral::EWinType_t" , 101 , -1 };
G__linked_taginfo G__G__utilLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__utilLN_TH1D = { "TH1D" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__util() {
  G__G__utilLN_TClass.tagnum = -1 ;
  G__G__utilLN_TBuffer.tagnum = -1 ;
  G__G__utilLN_TMemberInspector.tagnum = -1 ;
  G__G__utilLN_TObject.tagnum = -1 ;
  G__G__utilLN_TNamed.tagnum = -1 ;
  G__G__utilLN_TString.tagnum = -1 ;
  G__G__utilLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__utilLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__utilLN_TList.tagnum = -1 ;
  G__G__utilLN_TObjArray.tagnum = -1 ;
  G__G__utilLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__utilLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__utilLN_THashTable.tagnum = -1 ;
  G__G__utilLN_TSnAxisDetails.tagnum = -1 ;
  G__G__utilLN_TSnAxisDetailscLcLTAxDet.tagnum = -1 ;
  G__G__utilLN_TQObject.tagnum = -1 ;
  G__G__utilLN_TQObjSender.tagnum = -1 ;
  G__G__utilLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__utilLN_TArrayI.tagnum = -1 ;
  G__G__utilLN_THashList.tagnum = -1 ;
  G__G__utilLN_TGLayoutHints.tagnum = -1 ;
  G__G__utilLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__G__utilLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__utilLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__utilLN_TCanvas.tagnum = -1 ;
  G__G__utilLN_TH1F.tagnum = -1 ;
  G__G__utilLN_TGMainFrame.tagnum = -1 ;
  G__G__utilLN_TGVerticalFrame.tagnum = -1 ;
  G__G__utilLN_TGCanvas.tagnum = -1 ;
  G__G__utilLN_TSnPlotBrowser.tagnum = -1 ;
  G__G__utilLN_TSnPlotBrowsercLcLEPadOpts.tagnum = -1 ;
  G__G__utilLN_TSnPlotBrowsercLcLTArPlotSet.tagnum = -1 ;
  G__G__utilLN_TH1.tagnum = -1 ;
  G__G__utilLN_TSnMath.tagnum = -1 ;
  G__G__utilLN_TBranch.tagnum = -1 ;
  G__G__utilLN_TGraph.tagnum = -1 ;
  G__G__utilLN_TSnSpectral.tagnum = -1 ;
  G__G__utilLN_TSnSpectralcLcLEWinType_t.tagnum = -1 ;
  G__G__utilLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__utilLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__utilLN_TH1D.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__util() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__utilLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TString);
   G__get_linked_tagnum_fwd(&G__G__utilLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__utilLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TList);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__G__utilLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__utilLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__utilLN_THashTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__utilLN_TSnAxisDetails),sizeof(TSnAxisDetails),-1,324864,"stores histogram axis details",G__setup_memvarTSnAxisDetails,G__setup_memfuncTSnAxisDetails);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__utilLN_TSnAxisDetailscLcLTAxDet),sizeof(TSnAxisDetails::TAxDet),-1,324608,(char*)NULL,G__setup_memvarTSnAxisDetailscLcLTAxDet,G__setup_memfuncTSnAxisDetailscLcLTAxDet);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TQObject);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TQObjSender);
   G__get_linked_tagnum_fwd(&G__G__utilLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__G__utilLN_THashList);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TGLayoutHints);
   G__get_linked_tagnum_fwd(&G__G__utilLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__G__utilLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__utilLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TH1F);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TGCanvas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__utilLN_TSnPlotBrowser),sizeof(TSnPlotBrowser),-1,263424,"class for easy browsing of sets of plots",G__setup_memvarTSnPlotBrowser,G__setup_memfuncTSnPlotBrowser);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__utilLN_TSnPlotBrowsercLcLEPadOpts),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TSnPlotBrowsercLcLTArPlotSet);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TH1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__utilLN_TSnMath),sizeof(TSnMath),-1,263424,(char*)NULL,G__setup_memvarTSnMath,G__setup_memfuncTSnMath);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TBranch);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__utilLN_TSnSpectral),sizeof(TSnSpectral),-1,263424,(char*)NULL,G__setup_memvarTSnSpectral,G__setup_memfuncTSnSpectral);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__utilLN_TSnSpectralcLcLEWinType_t),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__utilLN_TH1D);
}
extern "C" void G__cpp_setupG__util(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__util()");
  G__set_cpp_environmentG__util();
  G__cpp_setup_tagtableG__util();

  G__cpp_setup_inheritanceG__util();

  G__cpp_setup_typetableG__util();

  G__cpp_setup_memvarG__util();

  G__cpp_setup_memfuncG__util();
  G__cpp_setup_globalG__util();
  G__cpp_setup_funcG__util();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__util();
  return;
}
class G__cpp_setup_initG__util {
  public:
    G__cpp_setup_initG__util() { G__add_setup_func("G__util",(G__incsetup)(&G__cpp_setupG__util)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__util() { G__remove_setup_func("G__util"); }
};
G__cpp_setup_initG__util G__cpp_setup_initializerG__util;

