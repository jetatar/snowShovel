//
// File generated by /data/users/jtatar/Software/root/bin/rootcint at Mon Mar 24 20:10:07 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME geodIG__geo
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__geo.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSnGeoStnSite_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnGeoStnSite(void *p = 0);
   static void *newArray_TSnGeoStnSite(Long_t size, void *p);
   static void delete_TSnGeoStnSite(void *p);
   static void deleteArray_TSnGeoStnSite(void *p);
   static void destruct_TSnGeoStnSite(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnGeoStnSite*)
   {
      ::TSnGeoStnSite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnGeoStnSite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnGeoStnSite", ::TSnGeoStnSite::Class_Version(), "./geo/TSnGeoStnSite.h", 8,
                  typeid(::TSnGeoStnSite), DefineBehavior(ptr, ptr),
                  &::TSnGeoStnSite::Dictionary, isa_proxy, 4,
                  sizeof(::TSnGeoStnSite) );
      instance.SetNew(&new_TSnGeoStnSite);
      instance.SetNewArray(&newArray_TSnGeoStnSite);
      instance.SetDelete(&delete_TSnGeoStnSite);
      instance.SetDeleteArray(&deleteArray_TSnGeoStnSite);
      instance.SetDestructor(&destruct_TSnGeoStnSite);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnGeoStnSite*)
   {
      return GenerateInitInstanceLocal((::TSnGeoStnSite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnGeoStnSite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnGeoDAQBox_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnGeoDAQBox(void *p = 0);
   static void *newArray_TSnGeoDAQBox(Long_t size, void *p);
   static void delete_TSnGeoDAQBox(void *p);
   static void deleteArray_TSnGeoDAQBox(void *p);
   static void destruct_TSnGeoDAQBox(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnGeoDAQBox*)
   {
      ::TSnGeoDAQBox *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnGeoDAQBox >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnGeoDAQBox", ::TSnGeoDAQBox::Class_Version(), "./geo/TSnGeoDAQBox.h", 6,
                  typeid(::TSnGeoDAQBox), DefineBehavior(ptr, ptr),
                  &::TSnGeoDAQBox::Dictionary, isa_proxy, 4,
                  sizeof(::TSnGeoDAQBox) );
      instance.SetNew(&new_TSnGeoDAQBox);
      instance.SetNewArray(&newArray_TSnGeoDAQBox);
      instance.SetDelete(&delete_TSnGeoDAQBox);
      instance.SetDeleteArray(&deleteArray_TSnGeoDAQBox);
      instance.SetDestructor(&destruct_TSnGeoDAQBox);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnGeoDAQBox*)
   {
      return GenerateInitInstanceLocal((::TSnGeoDAQBox*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnGeoDAQBox*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSnGeoLPDA_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSnGeoLPDA(void *p = 0);
   static void *newArray_TSnGeoLPDA(Long_t size, void *p);
   static void delete_TSnGeoLPDA(void *p);
   static void deleteArray_TSnGeoLPDA(void *p);
   static void destruct_TSnGeoLPDA(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSnGeoLPDA*)
   {
      ::TSnGeoLPDA *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSnGeoLPDA >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSnGeoLPDA", ::TSnGeoLPDA::Class_Version(), "./geo/TSnGeoLPDA.h", 6,
                  typeid(::TSnGeoLPDA), DefineBehavior(ptr, ptr),
                  &::TSnGeoLPDA::Dictionary, isa_proxy, 4,
                  sizeof(::TSnGeoLPDA) );
      instance.SetNew(&new_TSnGeoLPDA);
      instance.SetNewArray(&newArray_TSnGeoLPDA);
      instance.SetDelete(&delete_TSnGeoLPDA);
      instance.SetDeleteArray(&deleteArray_TSnGeoLPDA);
      instance.SetDestructor(&destruct_TSnGeoLPDA);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSnGeoLPDA*)
   {
      return GenerateInitInstanceLocal((::TSnGeoLPDA*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSnGeoLPDA*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace NSnGeoMaterials {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NSnGeoMaterials_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("NSnGeoMaterials", 0 /*version*/, "./geo/NSnGeoMaterials.h", 6,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NSnGeoMaterials_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NSnGeoMaterials_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

//______________________________________________________________________________
TClass *TSnGeoStnSite::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnGeoStnSite::Class_Name()
{
   return "TSnGeoStnSite";
}

//______________________________________________________________________________
const char *TSnGeoStnSite::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoStnSite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnGeoStnSite::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoStnSite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnGeoStnSite::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoStnSite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnGeoStnSite::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoStnSite*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnGeoDAQBox::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnGeoDAQBox::Class_Name()
{
   return "TSnGeoDAQBox";
}

//______________________________________________________________________________
const char *TSnGeoDAQBox::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoDAQBox*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnGeoDAQBox::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoDAQBox*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnGeoDAQBox::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoDAQBox*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnGeoDAQBox::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoDAQBox*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSnGeoLPDA::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSnGeoLPDA::Class_Name()
{
   return "TSnGeoLPDA";
}

//______________________________________________________________________________
const char *TSnGeoLPDA::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoLPDA*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSnGeoLPDA::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoLPDA*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSnGeoLPDA::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoLPDA*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSnGeoLPDA::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSnGeoLPDA*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSnGeoStnSite::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnGeoStnSite.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnGeoStnSite::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnGeoStnSite::Class(),this);
   }
}

//______________________________________________________________________________
void TSnGeoStnSite::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnGeoStnSite.
      TClass *R__cl = ::TSnGeoStnSite::IsA();
      if (R__cl || R__insp.IsA()) { }
      TGeoVolumeAssembly::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnGeoStnSite(void *p) {
      return  p ? new(p) ::TSnGeoStnSite : new ::TSnGeoStnSite;
   }
   static void *newArray_TSnGeoStnSite(Long_t nElements, void *p) {
      return p ? new(p) ::TSnGeoStnSite[nElements] : new ::TSnGeoStnSite[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnGeoStnSite(void *p) {
      delete ((::TSnGeoStnSite*)p);
   }
   static void deleteArray_TSnGeoStnSite(void *p) {
      delete [] ((::TSnGeoStnSite*)p);
   }
   static void destruct_TSnGeoStnSite(void *p) {
      typedef ::TSnGeoStnSite current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnGeoStnSite

//______________________________________________________________________________
void TSnGeoDAQBox::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnGeoDAQBox.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnGeoDAQBox::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnGeoDAQBox::Class(),this);
   }
}

//______________________________________________________________________________
void TSnGeoDAQBox::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnGeoDAQBox.
      TClass *R__cl = ::TSnGeoDAQBox::IsA();
      if (R__cl || R__insp.IsA()) { }
      TGeoVolumeAssembly::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnGeoDAQBox(void *p) {
      return  p ? new(p) ::TSnGeoDAQBox : new ::TSnGeoDAQBox;
   }
   static void *newArray_TSnGeoDAQBox(Long_t nElements, void *p) {
      return p ? new(p) ::TSnGeoDAQBox[nElements] : new ::TSnGeoDAQBox[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnGeoDAQBox(void *p) {
      delete ((::TSnGeoDAQBox*)p);
   }
   static void deleteArray_TSnGeoDAQBox(void *p) {
      delete [] ((::TSnGeoDAQBox*)p);
   }
   static void destruct_TSnGeoDAQBox(void *p) {
      typedef ::TSnGeoDAQBox current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnGeoDAQBox

//______________________________________________________________________________
void TSnGeoLPDA::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSnGeoLPDA.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSnGeoLPDA::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSnGeoLPDA::Class(),this);
   }
}

//______________________________________________________________________________
void TSnGeoLPDA::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSnGeoLPDA.
      TClass *R__cl = ::TSnGeoLPDA::IsA();
      if (R__cl || R__insp.IsA()) { }
      TGeoVolumeAssembly::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSnGeoLPDA(void *p) {
      return  p ? new(p) ::TSnGeoLPDA : new ::TSnGeoLPDA;
   }
   static void *newArray_TSnGeoLPDA(Long_t nElements, void *p) {
      return p ? new(p) ::TSnGeoLPDA[nElements] : new ::TSnGeoLPDA[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSnGeoLPDA(void *p) {
      delete ((::TSnGeoLPDA*)p);
   }
   static void deleteArray_TSnGeoLPDA(void *p) {
      delete [] ((::TSnGeoLPDA*)p);
   }
   static void destruct_TSnGeoLPDA(void *p) {
      typedef ::TSnGeoLPDA current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSnGeoLPDA

/********************************************************
* geo/G__geo.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__geo();

extern "C" void G__set_cpp_environmentG__geo() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("geo/TSnGeoStnSite.h");
  G__add_compiledheader("geo/TSnGeoDAQBox.h");
  G__add_compiledheader("geo/TSnGeoLPDA.h");
  G__add_compiledheader("geo/NSnGeoMaterials.h");
  G__cpp_reset_tagtableG__geo();
}
#include <new>
extern "C" int G__cpp_dllrevG__geo() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSnGeoStnSite */
static int G__G__geo_483_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnGeoStnSite* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnGeoStnSite[n];
     } else {
       p = new((void*) gvp) TSnGeoStnSite[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnGeoStnSite;
     } else {
       p = new((void*) gvp) TSnGeoStnSite;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnGeoStnSite* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnGeoStnSite((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnGeoStnSite((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSnGeoStnSite*) G__getstructoffset())->GetLPDANode((const UChar_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSnGeoStnSite*) G__getstructoffset())->SetLPDAPosition((const UChar_t) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnGeoStnSite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnGeoStnSite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnGeoStnSite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnGeoStnSite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnGeoStnSite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnGeoStnSite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnGeoStnSite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnGeoStnSite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_483_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnGeoStnSite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__geo_483_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnGeoStnSite* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnGeoStnSite(*(TSnGeoStnSite*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnGeoStnSite G__TTSnGeoStnSite;
static int G__G__geo_483_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnGeoStnSite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnGeoStnSite*) (soff+(sizeof(TSnGeoStnSite)*i)))->~G__TTSnGeoStnSite();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnGeoStnSite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnGeoStnSite*) (soff))->~G__TTSnGeoStnSite();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnGeoDAQBox */
static int G__G__geo_484_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnGeoDAQBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnGeoDAQBox[n];
     } else {
       p = new((void*) gvp) TSnGeoDAQBox[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnGeoDAQBox;
     } else {
       p = new((void*) gvp) TSnGeoDAQBox;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_484_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnGeoDAQBox* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnGeoDAQBox((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnGeoDAQBox((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_484_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnGeoDAQBox::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_484_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnGeoDAQBox::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_484_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnGeoDAQBox::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_484_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnGeoDAQBox::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_484_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnGeoDAQBox*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_484_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnGeoDAQBox::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_484_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnGeoDAQBox::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_484_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnGeoDAQBox::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_484_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnGeoDAQBox::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__geo_484_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnGeoDAQBox* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnGeoDAQBox(*(TSnGeoDAQBox*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnGeoDAQBox G__TTSnGeoDAQBox;
static int G__G__geo_484_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnGeoDAQBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnGeoDAQBox*) (soff+(sizeof(TSnGeoDAQBox)*i)))->~G__TTSnGeoDAQBox();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnGeoDAQBox*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnGeoDAQBox*) (soff))->~G__TTSnGeoDAQBox();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSnGeoLPDA */
static int G__G__geo_485_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnGeoLPDA* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnGeoLPDA[n];
     } else {
       p = new((void*) gvp) TSnGeoLPDA[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSnGeoLPDA;
     } else {
       p = new((void*) gvp) TSnGeoLPDA;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_485_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSnGeoLPDA* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSnGeoLPDA((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSnGeoLPDA((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_485_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSnGeoLPDA::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_485_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnGeoLPDA::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_485_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSnGeoLPDA::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_485_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSnGeoLPDA::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_485_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSnGeoLPDA*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_485_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnGeoLPDA::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_485_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnGeoLPDA::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_485_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSnGeoLPDA::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__geo_485_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSnGeoLPDA::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__geo_485_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSnGeoLPDA* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSnGeoLPDA(*(TSnGeoLPDA*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSnGeoLPDA G__TTSnGeoLPDA;
static int G__G__geo_485_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSnGeoLPDA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSnGeoLPDA*) (soff+(sizeof(TSnGeoLPDA)*i)))->~G__TTSnGeoLPDA();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSnGeoLPDA*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSnGeoLPDA*) (soff))->~G__TTSnGeoLPDA();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* NSnGeoMaterials */
static int G__G__geo_486_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NSnGeoMaterials::DefineMaterials(*(TGeoManager*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSnGeoStnSite */

/* TSnGeoDAQBox */

/* TSnGeoLPDA */

/* NSnGeoMaterials */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__geo {
 public:
  G__Sizep2memfuncG__geo(): p(&G__Sizep2memfuncG__geo::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__geo::*p)();
};

size_t G__get_sizep2memfuncG__geo()
{
  G__Sizep2memfuncG__geo a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__geo() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite))) {
     TSnGeoStnSite *G__Lderived;
     G__Lderived=(TSnGeoStnSite*)0x1000;
     {
       TGeoVolumeAssembly *G__Lpbase=(TGeoVolumeAssembly*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite),G__get_linked_tagnum(&G__G__geoLN_TGeoVolumeAssembly),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoVolume *G__Lpbase=(TGeoVolume*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite),G__get_linked_tagnum(&G__G__geoLN_TGeoVolume),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite),G__get_linked_tagnum(&G__G__geoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite),G__get_linked_tagnum(&G__G__geoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoAtt *G__Lpbase=(TGeoAtt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite),G__get_linked_tagnum(&G__G__geoLN_TGeoAtt),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite),G__get_linked_tagnum(&G__G__geoLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite),G__get_linked_tagnum(&G__G__geoLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite),G__get_linked_tagnum(&G__G__geoLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox))) {
     TSnGeoDAQBox *G__Lderived;
     G__Lderived=(TSnGeoDAQBox*)0x1000;
     {
       TGeoVolumeAssembly *G__Lpbase=(TGeoVolumeAssembly*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox),G__get_linked_tagnum(&G__G__geoLN_TGeoVolumeAssembly),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoVolume *G__Lpbase=(TGeoVolume*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox),G__get_linked_tagnum(&G__G__geoLN_TGeoVolume),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox),G__get_linked_tagnum(&G__G__geoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox),G__get_linked_tagnum(&G__G__geoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoAtt *G__Lpbase=(TGeoAtt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox),G__get_linked_tagnum(&G__G__geoLN_TGeoAtt),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox),G__get_linked_tagnum(&G__G__geoLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox),G__get_linked_tagnum(&G__G__geoLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox),G__get_linked_tagnum(&G__G__geoLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA))) {
     TSnGeoLPDA *G__Lderived;
     G__Lderived=(TSnGeoLPDA*)0x1000;
     {
       TGeoVolumeAssembly *G__Lpbase=(TGeoVolumeAssembly*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA),G__get_linked_tagnum(&G__G__geoLN_TGeoVolumeAssembly),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoVolume *G__Lpbase=(TGeoVolume*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA),G__get_linked_tagnum(&G__G__geoLN_TGeoVolume),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA),G__get_linked_tagnum(&G__G__geoLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA),G__get_linked_tagnum(&G__G__geoLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoAtt *G__Lpbase=(TGeoAtt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA),G__get_linked_tagnum(&G__G__geoLN_TGeoAtt),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA),G__get_linked_tagnum(&G__G__geoLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA),G__get_linked_tagnum(&G__G__geoLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA),G__get_linked_tagnum(&G__G__geoLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__geo() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__geoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__geoLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__geoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__geoLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__geoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__geoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__geoLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__geoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__geoLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__geoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__geoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__geoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__geoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__geoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__geoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__geoLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__G__geoLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__G__geoLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__G__geoLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__geoLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__geoLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__geoLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__geoLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__G__geoLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSnGeoStnSite */
static void G__setup_memvarTSnGeoStnSite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite));
   { TSnGeoStnSite *p; p=(TSnGeoStnSite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__geoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnGeoDAQBox */
static void G__setup_memvarTSnGeoDAQBox(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox));
   { TSnGeoDAQBox *p; p=(TSnGeoDAQBox*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__geoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSnGeoLPDA */
static void G__setup_memvarTSnGeoLPDA(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA));
   { TSnGeoLPDA *p; p=(TSnGeoLPDA*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__geoLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* NSnGeoMaterials */
static void G__setup_memvarNSnGeoMaterials(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__geoLN_NSnGeoMaterials));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__geoLN_NSnGeoMaterialscLcLEAriannMedium_t),-1,-2,1,G__FastAllocString(4096).Format("kPureSnow=%lldLL",(long long)NSnGeoMaterials::kPureSnow).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__geoLN_NSnGeoMaterialscLcLEAriannMedium_t),-1,-2,1,G__FastAllocString(4096).Format("kAluminum=%lldLL",(long long)NSnGeoMaterials::kAluminum).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__geo() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSnGeoStnSite(void) {
   /* TSnGeoStnSite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite));
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnGeoStnSite",1274,G__G__geo_483_0_2, 105, G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnGeoStnSite",1274,G__G__geo_483_0_3, 105, G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLPDANode",967,G__G__geo_483_0_4, 85, G__get_linked_tagnum(&G__G__geoLN_TGeoNode), -1, 0, 1, 1, 1, 9, "b - 'UChar_t' 10 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLPDAPosition",1442,G__G__geo_483_0_5, 121, -1, -1, 0, 2, 1, 1, 8, 
"b - 'UChar_t' 10 - ch u 'TVector3' - 1 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__geo_483_0_6, 85, G__get_linked_tagnum(&G__G__geoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnGeoStnSite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__geo_483_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnGeoStnSite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__geo_483_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnGeoStnSite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__geo_483_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnGeoStnSite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__geoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__geo_483_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__geo_483_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnGeoStnSite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__geo_483_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnGeoStnSite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__geo_483_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnGeoStnSite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__geo_483_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnGeoStnSite::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnGeoStnSite", 1274, G__G__geo_483_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__geoLN_TSnGeoStnSite), -1, 0, 1, 1, 1, 0, "u 'TSnGeoStnSite' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnGeoStnSite", 1400, G__G__geo_483_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnGeoDAQBox(void) {
   /* TSnGeoDAQBox */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox));
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnGeoDAQBox",1071,G__G__geo_484_0_2, 105, G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnGeoDAQBox",1071,G__G__geo_484_0_3, 105, G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__geo_484_0_4, 85, G__get_linked_tagnum(&G__G__geoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnGeoDAQBox::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__geo_484_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnGeoDAQBox::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__geo_484_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnGeoDAQBox::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__geo_484_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnGeoDAQBox::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__geoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__geo_484_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__geo_484_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnGeoDAQBox::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__geo_484_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnGeoDAQBox::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__geo_484_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnGeoDAQBox::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__geo_484_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnGeoDAQBox::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnGeoDAQBox", 1071, G__G__geo_484_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__geoLN_TSnGeoDAQBox), -1, 0, 1, 1, 1, 0, "u 'TSnGeoDAQBox' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnGeoDAQBox", 1197, G__G__geo_484_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSnGeoLPDA(void) {
   /* TSnGeoLPDA */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA));
   G__memfunc_setup("Build",496,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnGeoLPDA",849,G__G__geo_485_0_2, 105, G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSnGeoLPDA",849,G__G__geo_485_0_3, 105, G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__geo_485_0_4, 85, G__get_linked_tagnum(&G__G__geoLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSnGeoLPDA::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__geo_485_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnGeoLPDA::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__geo_485_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSnGeoLPDA::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__geo_485_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSnGeoLPDA::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__geoLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__geo_485_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__geo_485_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnGeoLPDA::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__geo_485_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnGeoLPDA::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__geo_485_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSnGeoLPDA::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__geo_485_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSnGeoLPDA::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSnGeoLPDA", 849, G__G__geo_485_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__geoLN_TSnGeoLPDA), -1, 0, 1, 1, 1, 0, "u 'TSnGeoLPDA' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSnGeoLPDA", 975, G__G__geo_485_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNSnGeoMaterials(void) {
   /* NSnGeoMaterials */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__geoLN_NSnGeoMaterials));
   G__memfunc_setup("DefineMaterials",1517,G__G__geo_486_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TGeoManager' - 1 - geoman", (char*)NULL, (void*) G__func2void( (void (*)(TGeoManager&))(&NSnGeoMaterials::DefineMaterials) ), 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__geo() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__geo() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__geo() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__geoLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__geoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__geoLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__geoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__geoLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TGeoAtt = { "TGeoAtt" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TAtt3D = { "TAtt3D" , 99 , -1 };
G__linked_taginfo G__G__geoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__geoLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TGeoNode = { "TGeoNode" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TGeoManager = { "TGeoManager" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TGeoVolumeAssembly = { "TGeoVolumeAssembly" , 99 , -1 };
G__linked_taginfo G__G__geoLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__G__geoLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TSnGeoStnSite = { "TSnGeoStnSite" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TSnGeoDAQBox = { "TSnGeoDAQBox" , 99 , -1 };
G__linked_taginfo G__G__geoLN_TSnGeoLPDA = { "TSnGeoLPDA" , 99 , -1 };
G__linked_taginfo G__G__geoLN_NSnGeoMaterials = { "NSnGeoMaterials" , 110 , -1 };
G__linked_taginfo G__G__geoLN_NSnGeoMaterialscLcLEAriannMedium_t = { "NSnGeoMaterials::EAriannMedium_t" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__geo() {
  G__G__geoLN_TClass.tagnum = -1 ;
  G__G__geoLN_TBuffer.tagnum = -1 ;
  G__G__geoLN_TMemberInspector.tagnum = -1 ;
  G__G__geoLN_TObject.tagnum = -1 ;
  G__G__geoLN_TNamed.tagnum = -1 ;
  G__G__geoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__geoLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__geoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__geoLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__geoLN_TGeoAtt.tagnum = -1 ;
  G__G__geoLN_TAttLine.tagnum = -1 ;
  G__G__geoLN_TAttFill.tagnum = -1 ;
  G__G__geoLN_TAtt3D.tagnum = -1 ;
  G__G__geoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__geoLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__G__geoLN_TGeoVolume.tagnum = -1 ;
  G__G__geoLN_TGeoNode.tagnum = -1 ;
  G__G__geoLN_TGeoManager.tagnum = -1 ;
  G__G__geoLN_TGeoVolumeAssembly.tagnum = -1 ;
  G__G__geoLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__G__geoLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__geoLN_TVector3.tagnum = -1 ;
  G__G__geoLN_TSnGeoStnSite.tagnum = -1 ;
  G__G__geoLN_TSnGeoDAQBox.tagnum = -1 ;
  G__G__geoLN_TSnGeoLPDA.tagnum = -1 ;
  G__G__geoLN_NSnGeoMaterials.tagnum = -1 ;
  G__G__geoLN_NSnGeoMaterialscLcLEAriannMedium_t.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__geo() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__geoLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__geoLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__geoLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__geoLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__geoLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TGeoAtt);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TAtt3D);
   G__get_linked_tagnum_fwd(&G__G__geoLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__geoLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TGeoVolume);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TGeoNode);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TGeoManager);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TGeoVolumeAssembly);
   G__get_linked_tagnum_fwd(&G__G__geoLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__geoLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__geoLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__geoLN_TSnGeoStnSite),sizeof(TSnGeoStnSite),-1,324864,"a station site geometry (DAQ box, antennas, etc)",G__setup_memvarTSnGeoStnSite,G__setup_memfuncTSnGeoStnSite);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__geoLN_TSnGeoDAQBox),sizeof(TSnGeoDAQBox),-1,324864,"a station DAQ box",G__setup_memvarTSnGeoDAQBox,G__setup_memfuncTSnGeoDAQBox);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__geoLN_TSnGeoLPDA),sizeof(TSnGeoLPDA),-1,324864,"an LPDA geometry",G__setup_memvarTSnGeoLPDA,G__setup_memfuncTSnGeoLPDA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__geoLN_NSnGeoMaterials),0,-1,0,(char*)NULL,G__setup_memvarNSnGeoMaterials,G__setup_memfuncNSnGeoMaterials);
   G__get_linked_tagnum_fwd(&G__G__geoLN_NSnGeoMaterialscLcLEAriannMedium_t);
}
extern "C" void G__cpp_setupG__geo(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__geo()");
  G__set_cpp_environmentG__geo();
  G__cpp_setup_tagtableG__geo();

  G__cpp_setup_inheritanceG__geo();

  G__cpp_setup_typetableG__geo();

  G__cpp_setup_memvarG__geo();

  G__cpp_setup_memfuncG__geo();
  G__cpp_setup_globalG__geo();
  G__cpp_setup_funcG__geo();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__geo();
  return;
}
class G__cpp_setup_initG__geo {
  public:
    G__cpp_setup_initG__geo() { G__add_setup_func("G__geo",(G__incsetup)(&G__cpp_setupG__geo)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__geo() { G__remove_setup_func("G__geo"); }
};
G__cpp_setup_initG__geo G__cpp_setup_initializerG__geo;

